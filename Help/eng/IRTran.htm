<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
 <meta name="generator" content="Adobe RoboHelp 8" />
<meta name="OriginalFile" content="InputVATEntry.doc" />
<title>Receipt</title>
<link rel="stylesheet" href="ai_erp.css" type="text/css" />
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth !=origWidth || innerHeight !=origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion)==4) && (navigator.appName=="Netscape")) {
	origWidth=innerWidth;
	origHeight=innerHeight;
	onresize=reDo;
}
onerror=null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
-->
</style>
<script type="text/javascript" language="javascript1.2" src="whmsg.js"></script>
<script type="text/javascript" language="javascript" src="whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="whlang.js"></script>
<script type="text/javascript" language="javascript1.2" src="whtopic.js"></script>

</head>
<body>

<p id="td1">Receipt</p>
<p id="td2">Entry Screen</p>
<p id="pic"><img src="eng/IRTran.png"/></p>

<p id="td2">Field descriptions - Format View</p>
<p class="node">Customer</p>
<p class="node_d">Customer ID, extracted from Customer/Supplier List, is usually used in debt control in case of Receipt related to debt transactions as borrowing items from other units. In case transactions which are not related to debt control, this information is used to control internal objects as production line, shop floor…</p>
<p class="node">Delivered by</p>
<p class="node_d">Deliverer information is extracted from “Contact” field in Customer/ Supplier List and can be edited.</p>

<p class="node">Transaction Code</p>
<p class="node_d">
Transaction code is used to classify usage of Receipt. <br/>
There are now 4 codes: “Internal Receipt”, “Product Receipt”, "Tax-suspension Warehouse Receipt" and “Misc. Receipt”. <br/>
Selecting transaction code aims to classify for later statistics only. In data process, all transactions have the same action.<br/>
However, it is required to select right transaction code, especially transaction code 4 - "Product", so that the product costing can be correct.
</p>

<p class="node">Voucher Number / Voucher Date / Posting Date</p>
<p class="node_d">Voucher number can be numbered by the program (figure form) or input by user. Voucher date and GL date can be different.</p>
<p class="node">Ex. Rate</p>
<p class="node_d">Used in case transaction is input in foreign currency, extracted from latest “Exchange Rate” list before creating date.</p>

<p class="node">Status</p>
<p class="node_d">There are 3 statuses:</p>
<ul class="lo_2">
- No Action: the voucher has not been posted to book;<br/>
- Release Later: If there is VAT, invoice will be posted to VAT books, reports. If this voucher is AR/AP invoice, it will be recorded in AR/AP books;<br/>
- Release: the voucher has been posted to all related books.
</ul>

<p id="td2">Field descriptions - Grid view</p>
<p class="node">Item Code / Site ID / Location ID</p>
<p class="node_d">If you have stock controlled by location, it is required to input information of location in receiving site.</p>

<p class="node">Lot ID</p>
<p class="node_d">Lot number of item; used in case items are controlled by lot. Lot information is defined in "Inventory" module.<br/>
If an item is defined to check in “Lot Control" and “Allow creating lot when receiving” options (in Item List), it is possible to create lot during data entry of vouchers making stock increased (Receipt, Purchase Invoice...). <br/>
Click “<img src="eng/Lotgenerate.png"/> – Lot Maintenance” on data entry screen, “Lot Maintenance” screen appears to define lot information, consists of:</p>
<ul class="lo_2">
- Item: get from grid view in data entry screen;<br/>
- Lot: system-generated following the definition in "Automatic Lot Code" parameter;<br/>
- Receipt Date: default to be extracted from voucher date but editable;<br/>
- Description/ Other Description/ Note: description about lot name, name in English and other information. Name of lot is generated from Lot ID and receipt date;<br/>
- Mfg Date: more information about manufacturing date of the item;<br/>
- Expiry Date: date when item is expired. If lot assignment is defined as “When Received”, expiry date will be system-generated by receipt date plus “Shelf Live Days”.<br/>
- Warranty Date: date when item is not given warranty any more. Warranty date is system-generated by receipt date plus “Warranty Days”.</ul>

<p class="node">Quantity</p>
<p class="node_d">Quantity of received items; if item is calculated by average cost, quantity can be 0. If item cost is calculated by FIFO method, quantity mustn’t be 0. </p>
<p class="node">Average Cost</p>
<p class="node_d">Items are received with average cost in case these items are calculated by monthly average method.<br/>
In cases of receiving items for over manufacturing from issue voucher in month (or other cases) 
and receiving price of these items must be average cost, user must mark to choose this options.</p>

<p class="node">Price</p>
<p class="node_d">Items are receive with price, in case transactions code is No 4, factory price will be update to this voucher.</p>

<p class="node">Reason Code / Dr. Account / Cr. Account</p>
<p class="node_d">Receipt term and account information<br/>
Reason code describes receiving, issuing reason; extracted from “Reason List”.<br/>
Debit account is extracted from received item account but can be entered if this item code is declared to allow changing item account. Credit account is extracted from “Account” field in selected Reason code but editable.</p>

<p class="node"> Job</p>
<p class="node_d"> Is extracted from “List” if Receipt relates to jobs, works.</p>

<p id="td2">Include</p>
<p class="node"> Include/ Document(s)</p>
<p class="node_d">
Save general information in order to print voucher.</p>

<p id="td2"> Some tasks in voucher entry</p>
<p class="node">  Import data from excel file (detail importing)</p>
<p class="node_d">
The system is enabled to import data from excel spreadsheet to save hours of manual effort.<br/>
The data importing process:</p>
<ul class="lo_2">
	- Enter Receipt;<br/>
	- Click the icon <img src="eng/download.png"/> to download template file to put data in;<br/>
	- After keying data in the spreadsheet, to up data to the system, click the icon <img src="eng/upload.png"/>, 
	select the file, the system will get data from this file to grid view of the voucher.<br/>
</ul>

<p class="note">Notes of inputting data in template file:<br/>
- Average Cost: accepted with value 1 or 0;<br/>
- Item Code, UOM, Site, Location, Lot, Reason Code, Debit/Credit Account, Job, Department, MO, Product, Contract, Expense, Loan Contract: must be one existing in the corresponding list with the same length in add (edit) screen in list;<br/>
- Site: input sites belonging to assigned units;<br/>
- Location: input only when item with location track;<br/>
- Lot: input only when item with lot control;<br/>
- Quantity: input in number format, 9 digits maximum and 3 decimal digits (standard format);<br/>
- Price: input in number format, 12 digits maximum and 4 decimal digits (standard format);<br/>
- Amount: input in number format, 14 digits maximum and 2 decimal digits (standard format).
</p>

<p class="note">The system will give error message in some following cases:<br/>

	- Data in columns containing codes of related objects do not exist in current lists (Item, Site...). 
	In this case, the system will indicate the specific invalid cell;<br/>
	- String data is longer than the available length of field (maximum length can be manually input;<br/>
	- Invalid data type (for example: 1,0 or yes/no), in this case, the system indicate the specific invalid cell.</p>
<p class="note">Other notes:<br/>

- The function is only supported to get data for each voucher, used in case of frequently inputting the similar periodic vouchers.<br/>
- It is required to define the value of yes/no fields (1/0 or true/false);<br/>
- If you do not have the "New" right, you cannot import new data to voucher detail grid;<br/>
- If you do not have the "Edit" right, you cannot edit data in voucher detail grid;<br/>
- It is not required to keying object name in lists, the system will auto update following their codes.</p>

<p class="node"> Import data from excel file (mass importing)</p>
<p class="node_d">
The system is enabled to import data from excel spreadsheet to save hours of manual effort.<br/>
The data importing process:</p>
<ul class="lo_2">
	- Enter Receipt;<br/>
	- Click the icon <img src="eng/download.png"/> to download template file to put data in;<br/>
	- After keying data in the spreadsheet, to up data to the system, click the icon <img src="eng/upload.png"/>, 
	select the file, the system will import data from this file.<br/>
</ul>
<p class="note">Notes of inputting data in template file:<br/>
- Voucher Number: input in form of string, 12 characters maximum;<br/>
- Voucher Date: input in date format. Voucher date must be after data closing date, unit and voucher locking date;<br/>
- Average Cost: accepted with value 1 or 0;<br/>
- Customer, Item Code, UOM, Site, Reason Code, Debit/Credit Account, Job, Department, MO, Product, Contract, Expense, Loan Contract: must be one existing in the corresponding list with the same length in add (edit) screen in list. Account must be detailed account;<br/>
- If there is consignment site and account the imported item list, the debit account will be consignment account. If not, the debit account will be item account;<br/>
- Site: input sites belonging to assigned units;<br/>
- Location: input only when item with location track;<br/>
- Lot: input only when item with lot control;<br/>
- Quantity: input in number format, 9 digits maximum and 3 decimal digits (standard format);<br/>
- Price: input in number format, 12 digits maximum and 4 decimal digits (standard format);<br/>
- Amount: input in number format, 14 digits maximum and 2 decimal digits (standard format).</p>

<p class="note">The system will give error message in some following cases:<br/>
	- Data in columns containing codes of related objects do not exist in current lists (Item, Site...). Account does not exist in chart of account or is general account. In this case, the system will indicate the specific invalid cell;<br/>
	- The required fields (Voucher Number, Voucher Date, Unit...) are blank;<br/>
	- String data is longer than the available length of field (maximum length can be manually input;<br/>
	- Invalid data type (for example: 1,0 or yes/no), in this case, the system indicate the specific invalid cell.</p>
<p class="note">Other notes:<br/>
- Cannot import data after system data closing, unit or voucher locking date (the data closing date after the beginning input date);<br/>
- Do not input exchange rate if the "Currency" column is blank;<br/>
- The current user must have the "New" right in "Receipt" menu;<br/>
- The current user must have the "New" right in "Access Right by Unit";<br/>
- Check the duplicate vouchers by number only (if available);<br/>
- In order to import a voucher with many grid rows, you can input many rows in spreadsheet with the same voucher number and date. The system will create one voucher with these grid rows;<br/>
- Enable to import voucher in "No Action" status only; you can edit the imported voucher to post to ledger;<br/>
- It is not required to keying object name in lists, the system will auto update following their codes;<br/>
- Cannot import data from spreadsheet with macro;<br/>
- Only support for spreadsheet in Excel 2007 or higher. 
</p>

<p id="p1">  See <a href="GeneralVouchertask.htm"> “Hints and Tips in voucher entry” </a>for details of common tasks</p>


<script type="text/javascript" src="setPageFooter.js"> </script>
</body>
</html>
