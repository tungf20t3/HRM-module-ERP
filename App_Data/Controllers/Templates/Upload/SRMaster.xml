<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE import [
  <!ENTITY CheckVoucherRightBeforeProcess SYSTEM "Include\CheckVoucherRightBeforeProcess.txt">
  <!ENTITY SRMasterFields SYSTEM "Include\SRMasterFields.txt">
  <!ENTITY SRMasterFieldsCompact SYSTEM "Include\SRMasterFieldsCompact.txt">
  <!ENTITY SRMasterFieldsLocation SYSTEM "Include\SRMasterFieldsLocation.txt">
  <!ENTITY SRMasterFieldsLot SYSTEM "Include\SRMasterFieldsLot.txt">
  <!ENTITY ControlLocationLotLoading SYSTEM "..\..\Include\Command\ControlLocationLotLoading.txt">
  <!ENTITY Detail "76">
  <!ENTITY Code "HDF">
  <!ENTITY TransferID "SRTran">
  <!ENTITY And "&#13;">

  <!ENTITY Error "
if @r is not null begin
  select '' as message, @field as field, @r as record
  return
end
">

  <!ENTITY LockedDate "
if @r is not null begin
  select replace(@locked, '&#37;s', @@delta + @r) as message
  return
end
">

  <!ENTITY SiteRight "
exec AI_ERP$System$CheckImportSiteRights '@@table', 'ma_kho', 'stt', @user, @admin, @r output, default, @$mode, @$errorCount output
if @$mode = 1 begin
  if @$errorCount = 0 begin select * from #errorTable order by id; return end;
end else begin
  &Error;
end">

  <!ENTITY % VoucherGoodsType.SRTran SYSTEM "..\..\Include\VoucherGoodsType.SRTran">
  %VoucherGoodsType.SRTran;
  <!ENTITY % VoucherGoodsType SYSTEM "..\..\Include\VoucherGoodsType.ent">
  %VoucherGoodsType;

  <!ENTITY % DetailTax SYSTEM "..\..\Include\XML\DetailTaxImportSRTran.ent">
  %DetailTax;

  <!ENTITY % VoucherDeleteLog SYSTEM "..\..\Include\VoucherDeleteLog.ent">
  %VoucherDeleteLog;

  <!ENTITY % ConfigDynamicEvents SYSTEM "..\..\Include\ConfigImportDynamicEvents.ent">
  %ConfigDynamicEvents;
  <!ENTITY ConfigDynamicVoucherType "1">
  <!ENTITY ConfigDynamicType "1">

  <!ENTITY % EnvironmentTax SYSTEM "..\..\Include\EnvironmentTax.ent">
  %EnvironmentTax;

  <!ENTITY % ImportErrorMode SYSTEM "..\..\Include\ImportErrorMode.ent">
  %ImportErrorMode;

  <!ENTITY % ExportImportTemplate SYSTEM "..\..\Include\ExportImportTemplate.ent">
  %ExportImportTemplate;
  <!ENTITY ExportQueryStaticFile "
declare @filename varchar(128)
if @@language = 'v' select @filename = case when @compactMode = '0' then 'SRMaster.xlsx' else 'SRMaster3.xlsx' end
  else select @filename = case when @compactMode = '0' then 'SRMaster2.xlsx' else 'SRMaster4.xlsx' end
if @xSplit = 1 begin
  select @filename = case
    when @$location = 0 and @$Lot = 0 then case when @@language = 'V' then 'SRMaster3.xlsx' else 'SRMaster4.xlsx' end
      when @$location = 1 and @$Lot = 0 then case when @@language = 'V' then 'SRMaster5.xlsx' else 'SRMaster6.xlsx' end
      when @$location = 0 and @$Lot = 1 then case when @@language = 'V' then 'SRMaster7.xlsx' else 'SRMaster8.xlsx' end
      when @$location = 1 and @$Lot = 1 then case when @@language = 'V' then 'SRMaster.xlsx' else 'SRMaster2.xlsx' end
    end
end
">

  <!ENTITY % ImportSqlCondition SYSTEM "..\..\Include\ImportSqlCondition.ent">
  %ImportSqlCondition;
  <!ENTITY % ImportOverwrite SYSTEM "..\..\Include\ImportOverwriteVoucher.ent">
  %ImportOverwrite;
  <!ENTITY ImportOverwriteMainTable "m&Detail;$$partition">
  <!ENTITY ImportOverwriteLogTable "o&Detail;$000000">
  <!ENTITY % ImportOverwriteCommand SYSTEM "..\..\Include\ImportOverWriteVoucher.SRTran">
  %ImportOverwriteCommand;

  <!ENTITY % Tiny.External SYSTEM "..\..\Include\Tiny.External.ent">
  %Tiny.External;
  %Tiny.External.SRTran;

  <!ENTITY % UnitUpload SYSTEM "..\..\Include\UnitUpload.ent">
  %UnitUpload;
]>

<import xmlns="urn:schemas-ai-erp:data-import">
  <setting>
    <type value="Voucher"/>
    <startRow value="6"/>
    <maxFileSize value="10"/>
    <uploadTimeOut value="120"/>
    <importRecordTimeout value="1740"/>
    <allowFileExtension value="^(.XLSX)$"/>
    <onProcessFail value="parent.on$SRMasterImportForm$Fail(this.frameElement)"/>
    <onProcessComplete value="parent.on$SRMasterImportForm$Complete(this.frameElement)"/>
    <uploadContentType value="application/ms-excel;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" />
    <baseTable value="m&Detail;$000000, d&Detail;$000000"/>
    <dependence value="m&Detail;$000000, d&Detail;$000000, i&Detail;$000000, c&Detail;$000000" alias="m, d, i, g"/>
    <listTable value="#m&Detail;, #d&Detail;, #i&Detail;, #i&Detail;"/>
    <alias value="master, detail, inquiry, general"/>

    &UploadModeProcess;
  </setting>

  <variable>
    <var id="C001">
      <header v="Số chứng từ và ngày đã tồn tại." e="The voucher number and dated already exists." />
    </var>
    <var id="C002">
      <header v="Số chứng từ, ngày và đơn vị đã tồn tại." e="The voucher number, dated and unit already exists." />
    </var>
    <var id="C003">
      <header v="Đã khóa số liệu, kiểm tra lại ngày chứng từ." e="Data is locked, please check the date of voucher." />
    </var>
    &ImportOverwriteVariable;
    &ImportLockedDateVariable;
  </variable>

  <query>
    <command>
      <text>
        &Tiny.External.Import.Command;
        <![CDATA[
declare @xSplit bit, @compactMode char(1)
]]>&ControlLocationLotLoading;<![CDATA[
  set @xSplit = 1
end
if exists(select 1 from options where name = 'm_compact_mode' and val = '1') select @compactMode = '1' else select @compactMode = '0'
]]>&ExportImportTemplateQuery;<![CDATA[
if isnull(@xSplit, 0) <> 1
  if @compactMode = 1 select '1' as view_index]]>&ExportImportTemplateQueryReturnFileName;<![CDATA[ else select '0' as view_index]]>&ExportImportTemplateQueryReturnFileName;<![CDATA[
else begin
  if @xSplit = 1 begin
    select case
      when @$location = 0 and @$Lot = 0 then 1
      when @$location = 1 and @$Lot = 0 then 2
      when @$location = 0 and @$Lot = 1 then 3
      when @$location = 1 and @$Lot = 1 then 0
    end as view_index]]>&ExportImportTemplateQueryReturnFileName;<![CDATA[
  end
end
]]>
      </text>
    </command>

    <views>
      <fields identity="true" name="stt" index="1">
        &SRMasterFieldsCompact;
      </fields>
      <fields identity="true" name="stt" index="2">
        &SRMasterFieldsLocation;
      </fields>
      <fields identity="true" name="stt" index="3">
        &SRMasterFieldsLot;
      </fields>

      &Tiny.External.Import.View.SRMaster;
    </views>
  </query>

  <fields identity="true" name="stt">
    &SRMasterFields;
  </fields>

  <template>
    <setting>
      <downloadFile>
        <text v="Phiếu nhập hàng bán bị trả lại" e="Sales Return"/>
      </downloadFile>
    </setting>
    <fields row="5">
      <field name="ma_kh" width ="16" starColor="&EIT.StarColor.Require;">
        <text v="Mã khách" e="Customer"/>
      </field>
      <field name="ten_kh" width ="32" afterField="ma_kh" textColor="&EIT.TextColor.Sub;">
        <text v="Tên khách hàng" e="Customer Name"/>
      </field>
      <field name="ngay_ct" width ="16" starColor="&EIT.StarColor.Require;">
        <text v="Ngày" e="Invoice Date"/>
      </field>
      <field name="so_ct" width ="16" starColor="&EIT.StarColor.Require;">
        <text v="Số chứng từ" e="Voucher Number"/>
      </field>
      <field name="so_ct0" width ="16">
        <text v="Số hóa đơn" e="Invoice Number"/>
      </field>
      <field name="so_seri" width ="16">
        <text v="Ký hiệu" e="Serial Number"/>
      </field>
      <field name="ngay_ct0" width ="16">
        <text v="Ngày hóa đơn" e="Invoice Date"/>
      </field>
      <field name="ma_mau_ct" width ="16">
        <text v="Mẫu hóa đơn" e="Invoice Form"/>
      </field>
      <field name="dien_giai" width ="50">
        <text v="Diễn giải" e="Memo"/>
      </field>
      <field name="ma_vt" width ="16" starColor="&EIT.StarColor.Require;">
        <text v="Mã hàng" e="Item Code"/>
      </field>
      <field name="ten_vt" width ="32" afterField="ma_vt" textColor="&EIT.TextColor.Sub;">
        <text v="Tên mặt hàng" e="Item Description"/>
      </field>
      <field name="dvt" width ="10">
        <text v="Đvt" e="UOM"/>
      </field>
      <field name="loai" width ="10">
        <text v="Loại" e="Type"/>
      </field>
      <field name="ma_kho" width ="16" starColor="&EIT.StarColor.Sub;">
        <text v="Mã kho" e="Site"/>
      </field>
      <field name="ma_vi_tri" width ="16" starColor="&EIT.StarColor.Sub;">
        <text v="Mã vị trí" e="Location"/>
      </field>
      <field name="ma_lo" width ="16" starColor="&EIT.StarColor.Sub;">
        <text v="Mã lô" e="Lot"/>
      </field>
      <field name="so_luong" width ="16">
        <text v="Số lượng" e="Quantity"/>
      </field>
      <field name="gia_nt2" width ="16">
        <text v="Giá bán" e="Sales Price"/>
      </field>
      <field name="tien_nt2" width ="16">
        <text v="Tiền hàng" e="Amount"/>
      </field>
      <field name="pn_gia_tb" width ="12">
        <text v="Giá trung bình" e="Average Cost"/>
      </field>
      <field name="gia_nt" width ="16">
        <text v="Giá vốn" e="Unit COGS"/>
      </field>
      <field name="tien_nt" width ="16">
        <text v="Tiền vốn" e="COGS Amount"/>
      </field>
      <field name="ma_nt" width ="16">
        <text v="Mã nt" e="Currency"/>
      </field>
      <field name="ty_gia" width ="16">
        <text v="Tỷ giá" e="Ex. Rate"/>
      </field>
      <field name="ma_thue" width ="16" starColor="&EIT.StarColor.Require;">
        <text v="Mã thuế" e="Tax Code"/>
      </field>
      <field name="tk" width ="16" starColor="&EIT.StarColor.Sub;">
        <text v="Tk có" e="Credit Account"/>
      </field>
      <field name="tk_dt" width ="16" starColor="&EIT.StarColor.Sub;">
        <text v="Tk trả lại" e="Sales Return Account"/>
      </field>
      <field name="tk_gv" width ="16" starColor="&EIT.StarColor.Sub;">
        <text v="Tk giá vốn" e="COGS Account"/>
      </field>
      <field name="tk_thue_no" width ="16" starColor="&EIT.StarColor.Sub;">
        <text v="Tk thuế nợ" e="Debit Tax Account"/>
      </field>
      <field name="ma_kh2" width ="16" starColor="&EIT.StarColor.Sub;">
        <text v="Cục thuế" e="Tax Authority"/>
      </field>
      <field name="invat_yn" width ="12">
        <text v="Chuyển vào bảng kê thuế đầu vào" e="Post to Input VAT"/>
      </field>
      <field name="mau_bc" width ="16" starColor="&EIT.StarColor.Sub;">
        <text v="Mẫu báo cáo" e="Report Form"/>
      </field>
      <field name="ma_tc" width ="16" starColor="&EIT.StarColor.Sub;">
        <text v="Mã tính chất" e="Tax Type"/>
      </field>
      <field name="ma_vv" width ="16">
        <text v="Vụ việc" e="Job"/>
      </field>
      <field name="ma_bp" width ="16">
        <text v="Bộ phận" e="Department"/>
      </field>
      <field name="so_lsx" width ="16">
        <text v="Lsx" e="MO"/>
      </field>
      <field name="ma_sp" width ="16">
        <text v="Sản phẩm" e="Product"/>
      </field>
      <field name="ma_hd" width ="16">
        <text v="Hợp đồng" e="Contract"/>
      </field>
      <field name="ma_phi" width ="16">
        <text v="Phí" e="Expense"/>
      </field>
      <field name="ma_ku" width ="16">
        <text v="Khế ước" e="Loan Contract"/>
      </field>
      &EIT.NoteField;
    </fields>
  </template>

  <processing>
    <text>
      &CheckVoucherRightBeforeProcess;
      <![CDATA[
declare @q nvarchar(4000), @duplicate nvarchar(512), @locked nvarchar(512), @field varchar(32), @wsID varchar(8), @voucherID varchar(8)
declare @master varchar(16), @detail varchar(16), @inquiry varchar(16), @general varchar(16), @baseCurrency varchar(8), @datetime0 char(21), @d0 datetime
declare @user int, @admin bit, @r int, @m int, @y int, @max1 int, @max2 int, @count int, @roundPrice int, @roundAmount int, @roundFAmount int

select @d0 = getdate(), @datetime0 = convert(char(8), @d0, 112) + ' ' + convert(char(12), @d0, 114), @status = left(replace(@status, '''', ''), 1)
select @admin = @@admin, @user = @@userID, @master = 'm]]>&Detail;<![CDATA[$', @detail = 'd]]>&Detail;<![CDATA[$', @inquiry = 'i]]>&Detail;<![CDATA[$', @general = 'c]]>&Detail;<![CDATA[$000000', @voucherID = ']]>&Code;<![CDATA['

select @locked = case when @@language = 'v' then N'Đã khóa số liệu, kiểm tra lại ngày chứng từ tại dòng <span class="Highlight">%s</span>.' else N'Data is locked, please check the date of voucher at row <span class="Highlight">%s</span>.' end
select @duplicate = case when @@language = 'v' then N'Chứng từ số <span class="Highlight">%s1</span> ngày <span class="Highlight">%s2</span> tại dòng <span class="Highlight">%s3</span> đã tồn tại.'
  else 'The voucher number <span class="Highlight">%s1</span> dated <span class="Highlight">%s2</span> at row <span class="Highlight">%s3</span> already exists.' end

select @wsID = rtrim(val) from options where name = 'm_ws_id'
select @baseCurrency = rtrim(val) from options where name = 'm_ma_nt0'
select @roundPrice = cast(rtrim(val) as int) from options where name = 'm_round_gia'
select @roundAmount = cast(rtrim(val) as int) from options where name = 'm_round_tien'
select @roundFAmount = cast(rtrim(val) as int) from options where name = 'm_round_tien_nt'

select @max1 = character_maximum_length from information_schema.columns where table_name = @master + '000000' and column_name = 'so_ct'
select @max2 = character_maximum_length from information_schema.columns where table_name = @detail + '000000' and column_name = 'so_lsx'

-- Checking
update @@table set so_ct = space(@max1 - len(rtrim(ltrim(so_ct)))) + rtrim(ltrim(so_ct))
]]>&ImportOverwriteData;<![CDATA[
if @check$Unit <> '1' begin
  if @$mode = 1 begin
    ]]>&StartErrorCount;<![CDATA[
    ]]>&InsertErrorTable;<![CDATA[ select 'so_ct', stt, 'C001' from @@table a join c]]>&Detail;<![CDATA[$000000 b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct]]>&ImportSqlWhere;&VoucherLogImportExtendKey;&ImportOverwriteCheckKey;<![CDATA[
    ]]>&EndErrorCount;<![CDATA[
  end else begin
    select @r = min(stt) from @@table a join c]]>&Detail;<![CDATA[$000000 b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct]]>&ImportSqlWhere;&VoucherLogImportExtendKey;&ImportOverwriteCheckKey;<![CDATA[
    if @r is not null begin
      select replace(replace(replace(@duplicate, '%s1', so_ct), '%s2', convert(varchar(12), cast(ngay_ct as smalldatetime), 103)), '%s3', @@delta + @r) as message from @@table where stt = @r
      return
    end
  end
end

-- Update
update @@table set so_lsx = space(@max2 - len(ltrim(rtrim(so_lsx)))) + ltrim(rtrim(so_lsx)),
    dvt = case when a.dvt <> '' then a.dvt else b.dvt end,
    ]]>&UnitUpload.General;<![CDATA[
    ma_nt = case when a.ma_nt <> '' then a.ma_nt else @baseCurrency end,
    tk = case when a.tk <> '' then a.tk else c.tk end,
    tk_dt = case when a.tk_dt <> '' then a.tk_dt else b.tk_tl end,
    tk_gv = case when a.tk_gv <> '' then a.tk_gv else b.tk_gv end,
    tk_thue_no = case when a.tk_thue_no <> '' then a.tk_thue_no else d.tk_thue_no end
  from @@table a
    left join dmvt b on a.ma_vt = b.ma_vt
    left join dmkh c on a.ma_kh = c.ma_kh
    left join dmthue d on a.ma_thue = d.ma_thue

select top 0 ma_dvcs, ngay_ct, so_ct, user_id0 as id into #unit from m]]>&Detail;<![CDATA[$000000
insert into #unit select b.ma_dvcs, a.ngay_ct, a.so_ct, min(a.stt) from @@table a join dmkho b on a.ma_kho = b.ma_kho group by b.ma_dvcs, a.ngay_ct, a.so_ct

-- Checking
if @check$Unit = '1' begin
  if @$mode = 1 begin
    ]]>&StartErrorCount;<![CDATA[
    ]]>&InsertErrorTable;<![CDATA[ select 'so_ct', id, 'C002' from #unit a join c]]>&Detail;<![CDATA[$000000 b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct and a.ma_dvcs = b.ma_dvcs]]>&ImportSqlWhere;&VoucherLogImportExtendKey;&ImportOverwriteCheckKey;<![CDATA[
    ]]>&EndErrorCount;<![CDATA[
  end else begin
    select @r = min(id) from #unit a join c]]>&Detail;<![CDATA[$000000 b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct and a.ma_dvcs = b.ma_dvcs]]>&ImportSqlWhere;&VoucherLogImportExtendKey;&ImportOverwriteCheckKey;<![CDATA[
    if @r is not null begin
      select replace(replace(replace(replace(@duplicate$Unit, '%s1', so_ct), '%s2', convert(varchar(12), cast(ngay_ct as smalldatetime), 103)), '%s3', rtrim(ma_dvcs)), '%s4', @@delta + @r) as message from #unit where id = @r
      return
    end
  end
end

@@checking(1);

-- Locked Date
]]>&ImportLockedDateCheck;<![CDATA[

@@checking(2);

if @$mode = 1 begin
  ]]>&StartErrorCount;<![CDATA[
  ]]>&InsertErrorTable;<![CDATA[ select 'dvt', stt, '00001' from @@table a left join vdmvtqddvt b on a.dvt = b.dvt and (a.ma_vt = b.ma_vt or b.ma_vt = '*') left join dmvt c on a.ma_vt = c.ma_vt and a.dvt = c.dvt where b.dvt is null and c.dvt is null
  ]]>&w1;<![CDATA['dvt']]>&w2;<![CDATA[stt]]>&w3;<![CDATA['00001']]>&w4;<![CDATA[
  ]]>&EndErrorCount;<![CDATA[
end else begin
  select @field = 'dvt', @r = min(stt) from @@table a left join vdmvtqddvt b on a.dvt = b.dvt and (a.ma_vt = b.ma_vt or b.ma_vt = '*') left join dmvt c on a.ma_vt = c.ma_vt and a.dvt = c.dvt where b.dvt is null and c.dvt is null]]>&Error;<![CDATA[
end

select @field = 'ma_kho'
if @admin <> 1 begin
  if @$mode = 1 begin
    ]]>&StartErrorCount;<![CDATA[
    ]]>&InsertErrorTable;<![CDATA[ select @field, stt, '00001' from @@table a where not exists(select 1 from dmkho c where a.ma_kho = c.ma_kho and c.ma_dvcs in (select distinct ma_dvcs from sysunitrights where user_id = @user and r_new = 1))
    ]]>&w1;<![CDATA[@field]]>&w2;<![CDATA[stt]]>&w3;<![CDATA['00001']]>&w4;<![CDATA[
    ]]>&EndErrorCount;<![CDATA[
  end else begin
    select @r = min(stt) from @@table a where not exists(select 1 from dmkho c where a.ma_kho = c.ma_kho and c.ma_dvcs in (select distinct ma_dvcs from sysunitrights where user_id = @user and r_new = 1))]]>&Error;<![CDATA[
  end
  ]]>&SiteRight;<![CDATA[
end

@@checking(3);

]]>&ConfigDynamicImportChecking;<![CDATA[

]]>&ImportOverwriteChecking;&EndErrorMode;<![CDATA[

-- Gather
select top 0 stt_rec, ngay_ct, so_ct, cast(0 as int) as stt, identity(int, 1, 1) as id into #id from m]]>&Detail;<![CDATA[$000000
insert into #id(stt_rec, ngay_ct, so_ct, stt) select '', a.ngay_ct, a.so_ct, min(a.stt) from @@table a]]>&ImportOverwriteIdentiyDataCondition;<![CDATA[ group by a.ngay_ct, a.so_ct order by a.ngay_ct, a.so_ct

select identity(int, 1, 1) as id, cast(stt as int) as stt, convert(varchar(8), ngay_ct, 112) + so_ct as c, cast(0 as int) as ln into #ln from @@table order by ngay_ct, so_ct, stt
exec AI_ERP$App$UpdateLineNumber
create index i on #ln(stt)

select @count = count(*) from #id
exec AI_ERP$App$UpdateIdentityNumber @wsID, @voucherID, @count, @@userID
]]>&ImportOverwriteProcess;<![CDATA[

select top 0 a.stt_rec, a.stt_rec0, a.line_nbr, a.ngay_ct, a.so_ct, a.ma_vt, a.ma_kho, a.ma_vi_tri, a.ma_lo, a.dvt, b.nhieu_dvt, a.he_so, a.so_luong, a.gia_nt2, a.gia2, a.tien_nt2, a.tien2, a.thue_nt, a.thue, a.gia_nt, a.gia, a.tien_nt, a.tien, a.pn_gia_tb, a.tk_vt, a.tk_gv, a.tk_dt, a.ma_vv, a.ma_bp, a.so_lsx, a.ma_sp, a.ma_hd, a.ma_phi, a.ma_ku
  ]]>&DetailTaxDetailStructure;&VoucherGoodsTypeImportFieldDetail;<![CDATA[
  into #d]]>&Detail;<![CDATA[ from d]]>&Detail;<![CDATA[$000000 a, dmvt b

insert into #d]]>&Detail;<![CDATA[ select b.stt_rec, dbo.AI_ERP$Function$Voucher$GetRecordsGroup(i.ln), i.ln, a.ngay_ct, a.so_ct, a.ma_vt, a.ma_kho, a.ma_vi_tri, a.ma_lo,
    a.dvt, c.nhieu_dvt, 1, a.so_luong, a.gia_nt2, round(a.gia_nt2 * a.ty_gia, @roundPrice), a.tien_nt2, round(a.tien_nt2 * a.ty_gia, @roundAmount), round(a.tien_nt2 * (d.thue_suat / 100), case when a.ma_nt = @baseCurrency then @roundAmount else @roundFAmount end), round(a.tien_nt2 * a.ty_gia * (d.thue_suat / 100), @roundAmount),
    a.gia_nt, round(a.gia_nt * a.ty_gia, @roundPrice), a.tien_nt, round(a.tien_nt * a.ty_gia, @roundAmount), a.pn_gia_tb,
    c.tk_vt, a.tk_gv, a.tk_dt, a.ma_vv, a.ma_bp, a.so_lsx, a.ma_sp, a.ma_hd, a.ma_phi, a.ma_ku
    ]]>&DetailTaxDetailValue;&VoucherGoodsTypeImportFieldDetailInsert;<![CDATA[
  from @@table a
  join #id b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct
    left join dmvt c on a.ma_vt = c.ma_vt
    left join dmthue d on a.ma_thue = d.ma_thue
    join #ln i on a.stt = i.stt
    order by a.ngay_ct, a.so_ct, a.stt

update #d]]>&Detail;<![CDATA[ set he_so = b.he_so from #d]]>&Detail;<![CDATA[ a join vdmvtqddvt b on (a.ma_vt = b.ma_vt or b.ma_vt = '*') and a.dvt = b.dvt where a.nhieu_dvt = 1
update #d]]>&Detail;<![CDATA[ set tk_vt = c.tk_dl from #d]]>&Detail;<![CDATA[ a join dmkho b on a.ma_kho = b.ma_kho join dmvt c on a.ma_vt = c.ma_vt where b.dai_ly_yn = 1 and c.tk_dl <> ''
]]>&VoucherGoodsTypeImportDetailUpdate;<![CDATA[
select top 0 stt_rec, status, ma_dvcs, ngay_ct, so_ct, so_ct0, ngay_ct0, ma_mau_ct, so_seri, tk, tk_thue_no, ma_thue, ma_kh, ma_kh2, dien_giai, ma_nt, ty_gia, t_so_luong, t_thue_nt, t_thue, t_tien_nt2, t_tien2, t_tt_nt, t_tt, invat_yn, mau_bc, ma_tc]]>&VoucherGoodsTypeImportFieldMaster;<![CDATA[
  into #m]]>&Detail;<![CDATA[ from m]]>&Detail;<![CDATA[$000000

insert into #m]]>&Detail;<![CDATA[ select b.stt_rec, @status, c.ma_dvcs, a.ngay_ct, a.so_ct, a.so_ct0, a.ngay_ct0, a.ma_mau_ct, a.so_seri, a.tk, a.tk_thue_no, a.ma_thue, a.ma_kh, a.ma_kh2,
    a.dien_giai, a.ma_nt, a.ty_gia, d.t_so_luong, d.t_thue_nt, d.t_thue, d.t_tien_nt2, d.t_tien2, d.t_tt_nt, d.t_tt, a.invat_yn, a.mau_bc, a.ma_tc]]>&VoucherGoodsTypeImportFieldMasterInsert;<![CDATA[
  from @@table a
    join #id b on a.stt = b.stt
    join #unit c on a.ngay_ct = c.ngay_ct and a.so_ct = c.so_ct
    ]]>&VoucherGoodsTypeImportMasterJoin;<![CDATA[join (select stt_rec, sum(so_luong) as t_so_luong, sum(thue_nt) as t_thue_nt, sum(thue) as t_thue,
      sum(tien_nt2) as t_tien_nt2, sum(tien2) as t_tien2, sum(tien_nt2 + thue_nt) as t_tt_nt, sum(tien2 + thue) as t_tt from #d]]>&Detail;&VoucherGoodsTypeImportMasterWhere;<![CDATA[ group by stt_rec) d
    on b.stt_rec = d.stt_rec

]]>&DetailTaxUpdateMasterValue;<![CDATA[
]]>&VoucherGoodsTypeImportMasterUpdate;<![CDATA[
select top 0 stt_rec, ngay_ct, so_ct, ma_dvcs, status, user_id0, c$, m$, d$, e$, identity(int, 1, 1) as id into #i]]>&Detail;<![CDATA[ from i]]>&Detail;<![CDATA[$000000
insert into #i]]>&Detail;<![CDATA[ select stt_rec, ngay_ct, so_ct, ma_dvcs, @status, @user, convert(varchar(12), ngay_ct, 112) + so_ct + stt_rec,  '#10$' + rtrim(ma_kh) + '#20$' + rtrim(tk) + '#30$' + rtrim(ma_nt), '', '' from #m]]>&Detail;<![CDATA[
select @q = dbo.AI_ERP$Function$Update$Inquiry('#i]]>&Detail;<![CDATA[', '#d]]>&Detail;<![CDATA[', 'd$', 'ma_kho, ma_vt, tk_vt, tk_gv, tk_dt', '#10$, #20$, #30$, #40$, #50$', 'stt_rec', default, default, 'HDF', 'e$', 1)
exec sp_executesql @q

-- Insert
declare @p varchar(32), @masterTable varchar(32), @detailTable varchar(32), @inquiryTable varchar(32), @insKey varchar(128), @insertKey varchar(128)

select distinct month(ngay_ct) as m, year(ngay_ct) as y into #k from #id
select @r = min(y * 12 + m) from #k

while @r is not null begin
  select @m = m, @y = y from #k where y * 12 + m = @r
  select @p = rtrim(@y) + replace(str(@m, 2), ' ', '0'), @insKey = 'month(%a.ngay_ct) = ' + rtrim(@m) + ' and year(%a.ngay_ct) = ' + rtrim(@y)
  select @masterTable = @master + @p, @detailTable = @detail + @p, @inquiryTable = @inquiry + @p, @insertKey = replace(@insKey, '%a.', '')

  select @q = @@inserting(master, @masterTable, @insertKey);
  exec sp_executesql @q

  select @q = @@inserting(detail, @detailTable, @insertKey);
  exec sp_executesql @q

  ]]>&DetailTaxAfterInsertDetail;<![CDATA[

  select @q = @@inserting(inquiry, @inquiryTable, @insertKey);
  exec sp_executesql @q
]]>&ImportOverwriteInsertingByPart;<![CDATA[
  select @r = min(y * 12 + m) from #k where y * 12 + m > @r
end

@@inserting(general);
]]>&ImportOverwriteInserting;<![CDATA[

insert into ctgt21 (stt_rec, ngay_ct, ngay_lct, ten_kh, dia_chi, ma_so_thue)
  select a.stt_rec, a.ngay_ct, a.ngay_ct, b.ten_kh, b.dia_chi, b.ma_so_thue from #m]]>&Detail;<![CDATA[ a join dmkh b on a.ma_kh = b.ma_kh

declare @External nvarchar(4000), @Statement nvarchar(4000), @Numeric varchar(4000), @String varchar(4000), @fieldSelect varchar(4000)

if @status <> 0 begin
  ]]>&VoucherGoodsTypeImportPost;<![CDATA[
  select @Statement = 'update #in set ngay_lct = ngay_ct, loai_ct = ''1'', ma_gd = ''1''' + ', datetime0 = ''' + @datetime0 + ''', datetime2 = ''' + @datetime0 + ''', user_id0 = ' + rtrim(@user) + ', user_id2 = ' + rtrim(@user)
  select @Statement = @Statement + char(13) +  'update #in set ma_nx = b.ma_nx from #in a join dmnx b on a.ma_nx = b.tk where b.ma_nx is not null'
  exec AI_ERP$Voucher$Import$PostInventory '#m]]>&Detail;<![CDATA[', '#d]]>&Detail;<![CDATA[', @voucherID, '#k',
    'ct_dc, gia_nt01, gia01, gia_nt0, gia0, tien_nt0, tien0, cp_thue_yn, px_gia_dd, ck, ck_nt, tien_xuat, tien_nt_x, nam, ky, cp_vc, cp_bh, cp_khac, cp, sl_td1, sl_td2, sl_td3, s4, s5, s6 ]]>&DetailTaxPostInventoryUpdateZero;&EnvironmentTaxImportPostInventoryUpdateZero;<![CDATA[',
    'ma_khon, ma_vi_trin, so_dh2, so_dh3, ma_nv, stt_rec_px, stt_rec0px, stt_rec_dc, so_seri0, ma_nk, ong_ba, ma_nvbh, tk_ck, ma_td1, ma_td2, ma_td3, gc_td1, gc_td2, gc_td3, s1, s2, s3, so_lo, ma_tt, stt_rec_pn, stt_rec0pn',
    'tk_du = b.tk_dt, ma_nx = b.tk_dt, gia_nt21 = b.gia_nt2, gia21 = b.gia2, gia_nt1 = b.gia_nt, gia1 = b.gia, tien_nhap = b.tien, tien_nt_n = b.tien_nt, tk_thue_co = c.tk ]]>&DetailTaxPostInventoryUpdateField;<![CDATA[',
    @Statement, 0
end

if @status in ('2', '3') begin
  if @status = '2' begin
    select @fieldSelect = 'stt_rec, ma_dvcs, ''' + @voucherID + ''' , ngay_ct, so_ct, t_tien_nt2 , t_tien2, ma_nt, ty_gia, dien_giai,''' + @datetime0 + ''','  + rtrim(@user)
    exec AI_ERP$Voucher$Import$PostLater '#m]]>&Detail;<![CDATA[', @voucherID, @fieldSelect, ''
  end

  select *, @voucherID as ma_ct, @datetime0 as datetime0, @datetime0 as datetime2, @user as user_id0, @user as user_id2, '1' as loai_ct into #malloc from #m]]>&Detail;<![CDATA[
  select *, tien_nt2 as tt_nt, tien2 as tt into #dalloc from #d]]>&Detail;<![CDATA[
  exec AI_ERP$Voucher$Import$Allocation @voucherID, '', '#malloc', '#dalloc', 't_tt_nt', 't_tt', 'tt_nt', 'tt', 'cttt50', '', ''

  select a.*, b.ten_vt into #detailpost from #d]]>&Detail;<![CDATA[ a join dmvt b on a.ma_vt = b.ma_vt]]>&DetailTaxPostTaxWhereClause;<![CDATA[
  select *, so_seri as so_seri0 into #m20 from #m]]>&Detail;<![CDATA[ where invat_yn = 0
  select @External = 'ngay_lct = isnull(c.ngay_ct0, b.ngay_ct), so_ct = case when c.so_ct0 = '''' then b.so_ct else c.so_ct0 end, ma_kho = b.ma_kho,]]>&DetailTaxPostTaxExternalOut;<![CDATA[, status = ''' + @status + ''',ma_ct = ''' + @voucherID + ''', loai_ct = ''1'', datetime0 = ''' + @datetime0 + ''', datetime2 = ''' + @datetime0 + ''', user_id0 = ' + rtrim(@user) + ', user_id2 = ' + rtrim(@user)
  select @Statement = '', @Numeric = 'nam, ky, sl_td1, sl_td2, sl_td3, s4, s5, s6', @String = 'ghi_chu, ma_nvbh,so_dh, ma_nk, ma_td1, ma_td2, ma_td3, gc_td1, gc_td2, gc_td3, s1, s2, s3'
  ]]>&DetailTaxPostTaxOut;<![CDATA[
  ]]>&VoucherGoodsTypeImportPostTax;<![CDATA[
  exec AI_ERP$Voucher$Import$PostTax '#m20', '#detailpost', '#k', @Numeric, @String, @External, @Statement, '1'

  select *, so_seri as so_seri0 into #m30 from #m]]>&Detail;<![CDATA[ where invat_yn = 1
  select @External = 'ngay_lct = isnull(c.ngay_ct0, b.ngay_ct), ngay_ct0 = isnull(c.ngay_ct0, b.ngay_ct), so_ct = c.so_ct, ]]>&DetailTaxPostTaxExternalIn;<![CDATA[, status = ''' + @status + ''',ma_ct = ''' + @voucherID + ''', loai_ct = ''1'', datetime0 = ''' + @datetime0 + ''', datetime2 = ''' + @datetime0 + ''', user_id0 = ' + rtrim(@user) + ', user_id2 = ' + rtrim(@user)
  select @Statement = '', @Numeric = 'gia, gia_nt, nam, ky, sl_td1, sl_td2, sl_td3, s4, s5, s6', @String = 'ma_tt, ma_kho, ghi_chu, so_dh, ma_td1, ma_td2, ma_td3, gc_td1, gc_td2, gc_td3, s1, s2, s3'
  ]]>&DetailTaxPostTaxIn;<![CDATA[
  exec AI_ERP$Voucher$Import$PostTax '#m30', '#detailpost', '#k', @Numeric, @String, @External, @Statement, '2'

  if @status = '3' begin
    declare @glGroup varchar(128), @glAcctField varchar(128), @glAcctFieldRef varchar(128), @glAmountField varchar(128), @glFCAmountField varchar(128), @glKey varchar(512), @glNoAccList varchar(128), @glNoAccListRef varchar(128), @glReverseLine varchar(128)

    if exists(select 1 from options where name = 'm_post_hh_hddt' and val = '1') begin
      select @glAcctField = 'tk_vt,tk_dt,tk]]>&DetailTaxPostGLAcctField;<![CDATA[', @glAcctFieldRef = 'tk_gv,tk,tk_dt]]>&DetailTaxPostGLAcctFieldRef;<![CDATA[', @glAmountField = 'tien,tien2,tien2,thue', @glFCAmountField = 'tien_nt,tien_nt2,tien_nt2,thue_nt', @glKey = '1=1,loai<>''90'',loai=''90'',thue_nt + thue <> 0', @glNoAccList = '0,0,0,0', @glNoAccListRef = '0,1,1,1', @glReverseLine = '1,0,0,0'
      exec sp_executesql N'update #d]]>&Detail;<![CDATA[ set tien_nt2 = -tien_nt2, tien2 = -tien2 where loai = ''90'''
    end else begin
      select @glAcctField = 'tk_vt,tk_dt]]>&DetailTaxPostGLAcctField;<![CDATA[', @glAcctFieldRef = 'tk_gv,tk]]>&DetailTaxPostGLAcctFieldRef;<![CDATA[', @glAmountField = 'tien,tien2,thue', @glFCAmountField = 'tien_nt,tien_nt2,thue_nt', @glKey = '1=1,1=1,thue_nt + thue <> 0', @glNoAccList = '0,0,0', @glNoAccListRef = '0,1,1', @glReverseLine = '1,0,0'
    end
    select @Numeric = 'nam, ky, sl_td1, sl_td2, sl_td3, s4, s5, s6', @String = 'ma_nk, so_lo, ong_ba, so_dh, gc_td1, gc_td2, gc_td3, s1, s2, s3', @External = 'so_ctgs = '''', head_item = '''', so_ct0 = b.so_ct0, ngay_ct0 = b.ngay_ct0, ct_nxt = 1, ma_gd = ''1'', dien_giai_h = b.dien_giai, datetime0 = ''' + @datetime0 + ''', datetime2 = ''' + @datetime0 + ''', user_id0 = ' + rtrim(@user) + ', user_id2 = ' + rtrim(@user), @Statement = ''
    select @glGroup = groupby from @@sysDatabaseName..voucherinfo where ma_ct = @voucherID

    ]]>&DetailTaxPostGL;<![CDATA[
    select a.*, b.tk, b.tk as tk_thue_co, b.tk_thue_no, b.ma_dvcs, b.ma_kh, b.ma_kh as ma_kh_ref, @voucherID as ma_ct, '1' as loai_ct, b.ngay_ct as ngay_lct, b.ma_nt, b.ty_gia, b.dien_giai as dien_giai, b.dien_giai as dien_giai_h into #dGL from #d]]>&Detail;<![CDATA[ a join #m]]>&Detail;<![CDATA[ b on a.stt_rec = b.stt_rec

    exec AI_ERP$Voucher$Import$PostGL '#m]]>&Detail;<![CDATA[', '#dGL', @voucherID, @glAcctField, @glAcctFieldRef, @glAmountField, @glFCAmountField, @glKey, @glNoAccList, @glNoAccListRef, @glGroup, @Numeric, @String, @External, @Statement, '#k', '', @glReverseLine
  end
end
]]>
    </text>
  </processing>

</import>