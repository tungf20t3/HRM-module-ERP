<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE import [
  <!ENTITY CheckVoucherRightBeforeProcess SYSTEM "Include\CheckVoucherRightBeforeProcess.txt">
  <!ENTITY Detail "06">
  <!ENTITY Code "CN1">
  <!ENTITY TransferID "hrProgressiveTaxTariff">
  <!ENTITY And "&#13;">

  <!ENTITY Error "
if @r is not null begin
  select '' as message, @field as field, @r as record
  return
end
">

  <!ENTITY LockedDate "
if @r is not null begin
  select replace(@locked, '&#37;s', @@delta + @r) as message
  return
end
">
  <!ENTITY s1 "Chứng từ số &lt;span class=&quot;Highlight&quot;&gt;&#37;s1&lt;/span&gt; ngày &lt;span class=&quot;Highlight&quot;&gt;&#37;s2&lt;/span&gt; tại dòng &lt;span class=&quot;Highlight&quot;&gt;&#37;s3&lt;/span&gt;">
  <!ENTITY s2 "The voucher number &lt;span class=&quot;Highlight&quot;&gt;&#37;s1&lt;/span&gt; dated &lt;span class=&quot;Highlight&quot;&gt;&#37;s2&lt;/span&gt; at row &lt;span class=&quot;Highlight&quot;&gt;&#37;s3&lt;/span&gt;">

  <!ENTITY s3 "Số hóa đơn &lt;span class=&quot;Highlight&quot;&gt;&#37;s1&lt;/span&gt; tại dòng &lt;span class=&quot;Highlight&quot;&gt;&#37;s2&lt;/span&gt;">
  <!ENTITY s4 "The invoice number &lt;span class=&quot;Highlight&quot;&gt;&#37;s1&lt;/span&gt; at row &lt;span class=&quot;Highlight&quot;&gt;&#37;s2&lt;/span&gt;">

  <!ENTITY % ConfigDynamicEvents SYSTEM "..\..\Include\ConfigImportDynamicEvents.ent">
  %ConfigDynamicEvents;
  <!ENTITY ConfigDynamicVoucherType "">
  <!ENTITY ConfigDynamicType "1">

  <!ENTITY % ImportErrorMode SYSTEM "..\..\Include\ImportErrorMode.ent">
  %ImportErrorMode;

  <!ENTITY % ExportImportTemplate SYSTEM "..\..\Include\ExportImportTemplate.ent">
  %ExportImportTemplate;

  <!ENTITY % ImportSqlCondition SYSTEM "..\..\Include\ImportSqlCondition.ent">
  %ImportSqlCondition;

  <!ENTITY % ImportOverwrite SYSTEM "..\..\Include\ImportOverwriteVoucher.ent">
  %ImportOverwrite;
  <!ENTITY ImportOverwriteMainTable "m&Detail;$$partition">
  <!ENTITY ImportOverwriteLogTable "o&Detail;$000000">
  <!ENTITY % ImportOverwriteCommand SYSTEM "..\..\Include\ImportOverWriteVoucher.hrProgressiveTaxTariff">
  %ImportOverwriteCommand;
]>

<import xmlns="urn:schemas-ai-erp:data-import">
  <setting>
    <type value="Voucher"/>
    <startRow value="6"/>
    <maxFileSize value="10"/>
    <uploadTimeOut value="120"/>
    <importRecordTimeout value="1740"/>
    <allowFileExtension value="^(.XLSX)$"/>
    <onProcessFail value="parent.on$hrProgressiveTaxTariffImportForm$Fail(this.frameElement)"/>
    <onProcessComplete value="parent.on$hrProgressiveTaxTariffImportForm$Complete(this.frameElement)"/>
    <uploadContentType value="application/ms-excel;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" />
    <baseTable value="m&Detail;$000000, d&Detail;$000000, hrnv"/>
    <dependence value="m&Detail;$000000, d&Detail;$000000, i&Detail;$000000, c&Detail;$000000" alias="m, d, i, g"/>
    <listTable value="#m&Detail;, #d&Detail;, #i&Detail;, #i&Detail;"/>
    <alias value="master, detail, inquiry, general"/>

    &UploadModeProcess;
  </setting>

  <variable>
    <var id="C001">
      <header v="Số chứng từ và ngày đã tồn tại." e="The voucher number and dated already exists." />
    </var>
    <var id="C002">
      <header v="Số chứng từ, ngày và đơn vị đã tồn tại." e="The voucher number, dated and unit already exists." />
    </var>
    <var id="C003">
      <header v="Đã khóa số liệu, kiểm tra lại ngày chứng từ." e="Data is locked, please check the date of voucher." />
    </var>
    &ImportOverwriteVariable;
    &ImportLockedDateVariable;
  </variable>

  <fields identity="true" name="stt">
    <field name="ma_dvcs" column="A" allowNulls="false" upperCase="true" resource="master, inquiry, general" check="ma_dvcs not in (select ma_dvcs from dmdvcs) &And;exists(select 1 from #unit b where @@table.ngay_ct = b.ngay_ct and @@table.so_ct = b.so_ct having count(b.ma_dvcs) &gt; 1)&And;ma_dvcs not in (select distinct ma_dvcs from sysunitrights where user_id = @user and r_new = 1)" condition="&And;&And;if (@admin &lt;&gt; 1) begin" tag="&And;&And;end" errorCode="00001&And;00002&And;00002" category="1"/>
    <field name="loai_ct" column="B" allowNulls="false" upperCase="true" resource="master" check="loai_ct not in ('1', '2', '3') &And;exists(select 1 from options where name = 't_tncn_thuc_chi' and val = '0') and loai_ct not in ('1', '2')" errorCode="00002&And;00002" category="1"/>
    <field name="ma_tn" column="C" upperCase="true" resource="master" check="ma_tn not in (select ma_tn from vtdmtn b where b.kieu_thue = '1' and (@@table.loai_ct &lt;&gt; '3' or b.loai = '1'))" errorCode="00002" category="1"/>
    <field name="so_ct" column="E" allowNulls="false" upperCase="true" resource="master, detail, inquiry, general"/>
    <field name="ngay_ct" column="F" allowNulls="false" type="DateTime" resource="master, detail, inquiry, general"/>
    <field name="ma_nt" column="G" upperCase="true" resource="master" check="ma_nt not in (select ma_nt from dmnt)" errorCode="00001" category="1"/>
    <field name="ty_gia" column="H" type="Decimal" defaultValue="1" resource="master"/>
    <field name="dien_giai" column="I" resource="master"/>

    <field name="ma_nv" column="J" upperCase="true" resource="detail" reference="2" check="ma_nv not in (select ma_nv from hrnv)" errorCode="00001" category="2"/>
    <field name="tn_ct_nt" column="L" type="Decimal" resource="detail" reference="1"/>

    <field name="stt_rec" column="None" resource="master, detail, inquiry, general"/>
    <field name="stt_rec0" column="None" resource="detail"/>
    <field name="stt_rec_nv" column="None" updateValue="None" resource="detail"/>
    <field name="line_nbr" column="None" type="Int" updateValue="None" resource="detail"/>
    <field name="ma_ct" column="None" insertValue="@voucherID" expression="''' + @voucherID + '''" resource="master, detail"/>
    <field name="ngay_lct" column="None" type="DateTime" insertValue="ngay_ct" resource="master"/>

    <field name="t_tn_ct_nt" column="None" type="Decimal" resource="master"/>
    <field name="t_tn_ct" column="None" type="Decimal" resource="master"/>
    <field name="tn_ct" column="None" type="Decimal" resource="detail"/>

    <field name="c$" column="None" resource="inquiry"/>
    <field name="m$" column="None" resource="inquiry"/>
    <field name="d$" column="None" resource="inquiry"/>

    <field name="status" column="None" insertValue="@status" expression="' + @status + '" resource="master, inquiry, general"/>
    <field name="datetime0" column="None" type="DateTime" insertValue="@datetime0" expression="''' + @datetime0 + '''" resource="master"/>
    <field name="datetime2" column="None" type="DateTime" insertValue="@datetime0" expression="''' + @datetime0 + '''" resource="master"/>
    <field name="user_id0" column="None" type="Int" insertValue="@user" expression="' + rtrim(@user) + '" resource="master, inquiry, general"/>
    <field name="user_id2" column="None" type="Int" insertValue="@user" expression="' + rtrim(@user) + '" resource="master"/>
  </fields>

  <template>
    <setting>
      <downloadFile>
        <text v="Cập nhật thu nhập&#8725;giảm trừ theo biểu thuế lũy tiến" e="Income&#8725;Deduction by the Progressive Tax Tariff"/>
      </downloadFile>
    </setting>

    <fields row="5">
      <field name="ma_dvcs" width="16" starColor="&EIT.StarColor.Require;">
        <text v="Đơn vị" e="Unit"/>
      </field>
      <field name="loai_ct" width="16" starColor="&EIT.StarColor.Require;">
        <text v="Loại chứng từ" e="Voucher Type"/>
      </field>
      <field name="ma_tn" width="16" starColor="&EIT.StarColor.Require;">
        <text v="Mã chỉ tiêu" e="Pattern Code"/>
      </field>
      <field name="ten_tn" afterField="ma_tn" width="32" textColor="&EIT.TextColor.Sub;">
        <text v="Tên chỉ tiêu" e="Pattern Name"/>
      </field>
      <field name="so_ct" width="16" starColor="&EIT.StarColor.Require;">
        <text v="Số chứng từ" e="Voucher Number"/>
      </field>
      <field name="ngay_ct" width="16" starColor="&EIT.StarColor.Require;">
        <text v="Ngày chứng từ" e="Voucher Date"/>
      </field>

      <field name="ma_nt" width="16">
        <text v="Mã nt" e="Currency"/>
      </field>
      <field name="ty_gia" width="16">
        <text v="Tỷ giá" e="Ex. Rate"/>
      </field>

      <field name="dien_giai" width="50">
        <text v="Diễn giải" e="Memo"/>
      </field>

      <field name="ma_nv" width="16" starColor="&EIT.StarColor.Require;">
        <text v="Mã nhân viên" e="Employee ID"/>
      </field>
      <field name="ten_nv" afterField="ma_nv" width="32" textColor="&EIT.TextColor.Sub;">
        <text v="Họ và tên" e="Employee Name"/>
      </field>

      <field name="tn_ct_nt" width="16">
        <text v="Tiền" e="Amount"/>
      </field>

      &EIT.NoteField;
    </fields>
  </template>

  <processing>
    <text>
      &CheckVoucherRightBeforeProcess;
      <![CDATA[
declare @q nvarchar(4000), @key nvarchar(4000), @duplicate nvarchar(512), @locked nvarchar(512), @field varchar(32), @wsID varchar(8), @voucherID varchar(8)
declare @master varchar(16), @detail varchar(16), @inquiry varchar(16), @general varchar(16), @baseCurrency varchar(8), @datetime0 char(21), @d0 datetime
declare @user int, @admin bit, @r int, @m int, @y int, @max1 int, @count int, @roundAmount int, @sys varchar(32), @joinUnit bit, @joinDept bit

select @d0 = getdate(), @datetime0 = convert(char(8), @d0, 112) + ' ' + convert(char(12), @d0, 114), @status = left(replace(@status, '''', '') , 1)
select @admin = @@admin, @user = @@userID, @master = 'm]]>&Detail;<![CDATA[$', @detail = 'd]]>&Detail;<![CDATA[$', @inquiry = 'i]]>&Detail;<![CDATA[$', @general = 'c]]>&Detail;<![CDATA[$000000', @voucherID = ']]>&Code;<![CDATA['
select @sys = '@@sysDatabaseName', @key = '', @joinUnit = 0, @joinDept = 0

select @locked = case when @@language = 'v' then N'Đã khóa số liệu, kiểm tra lại ngày chứng từ tại dòng <span class="Highlight">%s</span>.' else N'Data is locked, please check the date of voucher at row <span class="Highlight">%s</span>.' end
select @duplicate = case when @@language = 'v' then N']]>&s1;<![CDATA[ đã tồn tại.' else ']]>&s2;<![CDATA[ already exists.' end

select @wsID = rtrim(val) from options where name = 'm_ws_id'
select @baseCurrency = rtrim(val) from options where name = 'm_ma_nt0'
select @roundAmount = cast(rtrim(val) as int) from options where name = 'm_round_tien'

select @max1 = character_maximum_length from information_schema.columns where table_name = @master + '000000' and column_name = 'so_ct'

-- Update
update @@table set so_ct = space(@max1 - len(rtrim(ltrim(so_ct)))) + rtrim(ltrim(so_ct)), ma_nt = case when ma_nt <> '' then ma_nt else @baseCurrency end
]]>&ImportOverwriteData;<![CDATA[

-- Checking
if @check$Unit <> '1' begin
  if @$mode = 1 begin
    ]]>&StartErrorCount;<![CDATA[
    ]]>&InsertErrorTable;<![CDATA[ select 'so_ct', stt, 'C001' from @@table a join c]]>&Detail;<![CDATA[$000000 b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct]]>&ImportSqlWhere;&ImportOverwriteCheckKey;<![CDATA[
    ]]>&EndErrorCount;<![CDATA[
  end else begin
    select @r = min(stt) from @@table a join c]]>&Detail;<![CDATA[$000000 b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct]]>&ImportSqlWhere;&ImportOverwriteCheckKey;<![CDATA[
    if @r is not null begin
      select replace(replace(replace(@duplicate, '%s1', so_ct), '%s2', convert(varchar(12), cast(ngay_ct as smalldatetime), 103)), '%s3', @@delta + @r) as message from @@table where stt = @r
      return
    end
  end
end

select top 0 ma_dvcs, ngay_ct, so_ct, cast(0 as int) as id into #unit from m]]>&Detail;<![CDATA[$000000
insert into #unit select ma_dvcs, ngay_ct, so_ct, min(stt) from @@table group by ma_dvcs, ngay_ct, so_ct

-- Checking
if @check$Unit = '1' begin
  if @$mode = 1 begin
    select ma_dvcs, ngay_ct, so_ct, stt as id into #unitmode from @@table
    ]]>&StartErrorCount;<![CDATA[
    ]]>&InsertErrorTable;<![CDATA[ select 'so_ct', id, 'C002' from #unitmode a join c]]>&Detail;<![CDATA[$000000 b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct and a.ma_dvcs = b.ma_dvcs]]>&ImportSqlWhere;&ImportOverwriteCheckKey;<![CDATA[
    ]]>&EndErrorCount;<![CDATA[
  end else begin
    select @r = min(id) from #unit a join c]]>&Detail;<![CDATA[$000000 b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct and a.ma_dvcs = b.ma_dvcs]]>&ImportSqlWhere;&ImportOverwriteCheckKey;<![CDATA[
    if @r is not null begin
      select replace(replace(replace(replace(@duplicate$Unit, '%s1', so_ct), '%s2', convert(varchar(12), cast(ngay_ct as smalldatetime), 103)), '%s3', rtrim(ma_dvcs)), '%s4', @@delta + @r) as message from #unit where id = @r
      return
    end
  end
end

-- Locked Date
]]>&ImportLockedDateCheck;<![CDATA[

-- Check
@@checking(1);
@@checking(2);
]]>&ConfigDynamicImportChecking;<![CDATA[

-- Key
if @admin = 0 begin
  exec AI_ERP$HRM$DeptRightFilter @user, @admin, 'e', 'e', @sys, @key output, @joinUnit output, @joinDept output
  select @key = dbo.AI_ERP$Function$System$GetCheckKey(@key)
  select @key = case when @key = '' then '' else ' where (' + @key + ')' end
  --
  declare @$e char(1)
  select @q = 'if exists(select 1 from @@table a join hrnv e on a.ma_nv = e.ma_nv' + @key + ')'
  select @q = @q + char(13) + N'select @e1 = ''1'' else select @e1 = ''0'''
  exec sp_executesql @q, N'@e1 char(1) output', @e1 = @$e output

  if (@$e = '0') begin
    if @$mode = 1 begin
      ]]>&StartErrorCount;<![CDATA[
      ]]>&InsertErrorTableCell;<![CDATA[ select 'E', 1, 'notAuthorized'
      set @$errorCount = @$errorCount - @@rowcount; set rowcount 0;
      ]]>&EndErrorMode;<![CDATA[
    end else begin
      select @notAuthorized as message
    end
    return
  end
end

]]>&ImportOverwriteChecking;<![CDATA[
]]>&EndErrorMode;<![CDATA[

-- Gather
select top 0 stt_rec, ngay_ct, so_ct, cast(0 as int) as stt, identity(int, 1, 1) as id into #id from m]]>&Detail;<![CDATA[$000000
insert into #id(stt_rec, ngay_ct, so_ct, stt) select '', a.ngay_ct, a.so_ct, min(a.stt) from @@table a ]]>&ImportOverwriteIdentiyDataCondition;<![CDATA[ group by a.ngay_ct, a.so_ct order by a.ngay_ct, a.so_ct

select identity(int, 1, 1) as id, cast(stt as int) as stt, convert(varchar(8), ngay_ct, 112) + so_ct as c, cast(0 as int) as ln into #ln from @@table order by ngay_ct, so_ct, stt
exec AI_ERP$App$UpdateLineNumber
create index i on #ln(stt)

select @count = count(*) from #id
exec AI_ERP$App$UpdateIdentityNumber @wsID, @voucherID, @count, @@userID
]]>&ImportOverwriteProcess;<![CDATA[

select top 0 stt_rec, stt_rec0, line_nbr, ngay_ct, so_ct, stt_rec as stt_rec_nv, tn_ct_nt, tn_ct, cast(0 as int) as stt
  into #d]]>&Detail;<![CDATA[ from d]]>&Detail;<![CDATA[$000000

select @q = 'insert into #d]]>&Detail;<![CDATA[ select b.stt_rec, dbo.AI_ERP$Function$Voucher$GetRecordsGroup(i.ln), i.ln, a.ngay_ct, a.so_ct,'
select @q = @q + 'e.stt_rec, a.tn_ct_nt, round(a.tn_ct_nt * a.ty_gia, ' + rtrim(@roundAmount) + '), a.stt'
select @q = @q + ' from @@table a join #id b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct join #ln i on a.stt = i.stt join hrnv e on a.ma_nv = e.ma_nv' + @key
select @q = @q + ' order by a.ngay_ct, a.so_ct, a.stt'
exec sp_executesql @q

select top 0 stt_rec, status, ma_dvcs, ngay_ct, so_ct, loai_ct, ma_tn, ma_nt, ty_gia, t_tn_ct_nt, t_tn_ct, dien_giai
  into #m]]>&Detail;<![CDATA[ from m]]>&Detail;<![CDATA[$000000

insert into #m]]>&Detail;<![CDATA[ select b.stt_rec, @status, c.ma_dvcs, a.ngay_ct, a.so_ct, a.loai_ct, a.ma_tn,
    a.ma_nt, a.ty_gia, d.t_tn_ct_nt, d.t_tn_ct, a.dien_giai
  from @@table a
    join #id b on a.stt = b.stt
    join #unit c on a.ngay_ct = c.ngay_ct and a.so_ct = c.so_ct
    join (select stt_rec, sum(tn_ct_nt) as t_tn_ct_nt, sum(tn_ct) as t_tn_ct from #d]]>&Detail;<![CDATA[ group by stt_rec) d
    on b.stt_rec = d.stt_rec

select top 0 stt_rec, ngay_ct, so_ct, ma_dvcs, status, user_id0, c$, m$, d$, identity(int, 1, 1) as id into #i]]>&Detail;<![CDATA[ from i]]>&Detail;<![CDATA[$000000
insert into #i]]>&Detail;<![CDATA[ select stt_rec, ngay_ct, so_ct, ma_dvcs, @status, @user, convert(varchar(12), ngay_ct, 112) + so_ct + stt_rec,
  '#10$' + rtrim(ma_tn), '' from #m]]>&Detail;<![CDATA[

select @q = dbo.AI_ERP$Function$Update$Inquiry('#i]]>&Detail;<![CDATA[', '#d]]>&Detail;<![CDATA[', 'd$', 'stt_rec_nv', '#10$', 'stt_rec', default, default, default, default, default)
exec sp_executesql @q

-- Insert
declare @p varchar(32), @insertKey varchar(128), @masterTable varchar(32), @detailTable varchar(32), @inquiryTable varchar(32)

select distinct month(ngay_ct) as m, year(ngay_ct) as y into #k from #id
select @r = min(y * 12 + m) from #k

while @r is not null begin
  select @m = m, @y = y from #k where y * 12 + m = @r
  select @p = rtrim(@y) + replace(str(@m, 2), ' ', '0'), @insertKey = 'month(ngay_ct) = ' + rtrim(@m) + ' and year(ngay_ct) = ' + rtrim(@y)
  select @masterTable = @master + @p, @detailTable = @detail + @p, @inquiryTable = @inquiry + @p

  select @q = @@inserting(master, @masterTable, @insertKey);
  exec sp_executesql @q

  select @q = @@inserting(detail, @detailTable, @insertKey);
  exec sp_executesql @q

  select @q = @@inserting(inquiry, @inquiryTable, @insertKey);
  exec sp_executesql @q
  --
  ]]>&ImportOverwriteInsertingByPart;<![CDATA[
  select @r = min(y * 12 + m) from #k where y * 12 + m > @r
end

@@inserting(general);
]]>&ImportOverwriteInserting;<![CDATA[
]]>
    </text>
  </processing>

</import>