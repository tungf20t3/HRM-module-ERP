<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE import [
  <!ENTITY CheckVoucherRightBeforeProcess SYSTEM "Include\CheckVoucherRightBeforeProcess.txt">
  <!ENTITY Detail "29">
  <!ENTITY Code "HD9">
  <!ENTITY TransferID "JRTran">
  <!ENTITY Tax "30">
  <!ENTITY And "&#13;">

  <!ENTITY Error "
if @r is not null begin
  select '' as message, @field as field, @r as record
  return
end
">

  <!ENTITY LockedDate "
if @r is not null begin
  select replace(@locked, '&#37;s', @@delta + @r) as message
  return
end
">
  <!ENTITY s1 "Chứng từ số &lt;span class=&quot;Highlight&quot;&gt;&#37;s1&lt;/span&gt; ngày &lt;span class=&quot;Highlight&quot;&gt;&#37;s2&lt;/span&gt; tại dòng &lt;span class=&quot;Highlight&quot;&gt;&#37;s3&lt;/span&gt;">
  <!ENTITY s2 "The voucher number &lt;span class=&quot;Highlight&quot;&gt;&#37;s1&lt;/span&gt; dated &lt;span class=&quot;Highlight&quot;&gt;&#37;s2&lt;/span&gt; at row &lt;span class=&quot;Highlight&quot;&gt;&#37;s3&lt;/span&gt;">

  <!ENTITY s3 "Số hóa đơn &lt;span class=&quot;Highlight&quot;&gt;&#37;s1&lt;/span&gt; tại dòng &lt;span class=&quot;Highlight&quot;&gt;&#37;s2&lt;/span&gt;">
  <!ENTITY s4 "The invoice number &lt;span class=&quot;Highlight&quot;&gt;&#37;s1&lt;/span&gt; at row &lt;span class=&quot;Highlight&quot;&gt;&#37;s2&lt;/span&gt;">

  <!ENTITY CheckTaxCodeConditionImport " and exists(select 1 from dmkh b where @@table.ma_kh_i = b.ma_kh and b.khong_kt_mst = 0)">
  <!ENTITY % CheckTaxCode SYSTEM "..\..\Include\CheckImportTaxCode.ent">
  %CheckTaxCode;

  <!ENTITY % VoucherDeleteLog SYSTEM "..\..\Include\VoucherDeleteLog.ent">
  %VoucherDeleteLog;

  <!ENTITY % ConfigDynamicEvents SYSTEM "..\..\Include\ConfigImportDynamicEvents.ent">
  %ConfigDynamicEvents;
  <!ENTITY ConfigDynamicVoucherType "">
  <!ENTITY ConfigDynamicType "1">

  <!ENTITY % ImportErrorMode SYSTEM "..\..\Include\ImportErrorMode.ent">
  %ImportErrorMode;

  <!ENTITY % Tiny.External SYSTEM "..\..\Include\Tiny.External.ent">
  %Tiny.External;
  %Tiny.External.JRTran;

  <!ENTITY % ExportImportTemplate SYSTEM "..\..\Include\ExportImportTemplate.ent">
  %ExportImportTemplate;
  <!ENTITY ExportQueryStaticFile "select case when @@language = 'V' then 'JRMaster' else 'JRMaster2' end as file_name">

  <!ENTITY % ImportSqlCondition SYSTEM "..\..\Include\ImportSqlCondition.ent">
  %ImportSqlCondition;

  <!ENTITY % ImportOverwrite SYSTEM "..\..\Include\ImportOverwriteVoucher.ent">
  %ImportOverwrite;
  <!ENTITY ImportOverwriteMainTable "m&Detail;$$partition">
  <!ENTITY ImportOverwriteLogTable "o&Detail;$000000">
  <!ENTITY % ImportOverwriteCommand SYSTEM "..\..\Include\ImportOverWriteVoucher.GLTran">
  %ImportOverwriteCommand;
]>

<import xmlns="urn:schemas-ai-erp:data-import">
  <setting>
    <type value="Voucher"/>
    <startRow value="6"/>
    <maxFileSize value="10"/>
    <uploadTimeOut value="120"/>
    <importRecordTimeout value="1740"/>
    <allowFileExtension value="^(.XLSX)$"/>
    <onProcessFail value="parent.on$JRMasterImportForm$Fail(this.frameElement)"/>
    <onProcessComplete value="parent.on$JRMasterImportForm$Complete(this.frameElement)"/>
    <uploadContentType value="application/ms-excel;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" />
    <baseTable value="m&Detail;$000000, d&Detail;$000000, r&Tax;$000000"/>
    <dependence value="m&Detail;$000000, d&Detail;$000000, r&Tax;$000000, i&Detail;$000000, c&Detail;$000000, ctgt30" alias="m, d, t, i, g, c"/>
    <listTable value="#m&Detail;, #d&Detail;, #r&Tax;, #i&Detail;, #i&Detail;, #r&Tax;"/>
    <alias value="master, detail, tax, inquiry, general, inputTax"/>

    &UploadModeProcess;
  </setting>

  <query>
    <command>
      <text>
        &ExportImportTemplateQuery;
      </text>
    </command>
  </query>

  <variable>
    <var id="C001">
      <header v="Số chứng từ và ngày đã tồn tại." e="The voucher number and dated already exists." />
    </var>
    <var id="C002">
      <header v="Số chứng từ, ngày và đơn vị đã tồn tại." e="The voucher number, dated and unit already exists." />
    </var>
    <var id="C003">
      <header v="Đã khóa số liệu, kiểm tra lại ngày chứng từ." e="Data is locked, please check the date of voucher." />
    </var>
    <var id="C004">
      <header v="Số chứng từ và ngày chưa nhập đủ tài khoản nợ hoặc có trong nhóm định khoản." e="The voucher number and dated has not been entered all debit or credit entries in the records (group)." />
    </var>
    <var id="C005">
      <header v="Số chứng từ và ngày có hạch toán nhiều nợ, nhiều có trong nhóm định khoản." e="The voucher number and dated has multi debit credit entries in the records (group)." />
    </var>
    <var id="C006">
      <header v="Số chứng từ và ngày có phát sinh nợ và phát sinh có khác nhau trong nhóm định khoản." e="The voucher number and dated has difference between total debit and total credit in group." />
    </var>
    <var id="C007">
      <header v="Số hóa đơn, thông tin thuế trên bảng kê khác với thông tin thuế ghi sổ trong chi tiết của tài khoản." e="The invoice number, tax data in VAT invoice listing is different from one in tax account ledger." />
    </var>
    <var id="C008">
      <header v="Số hóa đơn trùng nhau trong chi tiết thuế đầu vào." e="The invoice number already exists in Input VAT data." />
    </var>
    <var id="C009">
      <header v="Số hóa đơn đã được cập nhật trong phần thuế đầu vào." e="The invoice number already exists in Input VAT data." />
    </var>
    &TaxCodeImportVariable;
    &ImportOverwriteVariable;
    &ImportLockedDateVariable;
  </variable>

  <fields identity="true" name="stt">
    &Tiny.External.Import.View.JRTran;
  </fields>

  <template>
    <setting>
      <downloadFile>
        <text v="Chứng từ phải thu khác, chứng từ bù trừ công nợ" e="Misc. Receivable Transaction, AR-AP Interface"/>
      </downloadFile>
    </setting>

    <fields row="5">
      <field name="ma_dvcs" width="16" starColor="&EIT.StarColor.Require;">
        <text v="Đơn vị" e="Unit"/>
      </field>

      <field name="so_ct" width="16" starColor="&EIT.StarColor.Require;">
        <text v="Số chứng từ" e="Voucher Number"/>
      </field>
      <field name="ngay_ct" width="16" starColor="&EIT.StarColor.Require;">
        <text v="Ngày chứng từ" e="Voucher Date"/>
      </field>

      <field name="ma_nt" width="16">
        <text v="Mã nt" e="Currency"/>
      </field>
      <field name="ty_gia" width="16">
        <text v="Tỷ giá" e="Ex. Rate"/>
      </field>

      <field name="dien_giai" width="50">
        <text v="Diễn giải" e="Memo"/>
      </field>

      <field name="tk" width="16" starColor="&EIT.StarColor.Require;">
        <text v="Tài khoản" e="Account"/>
      </field>
      <field name="ten_tk" afterField="tk" width="32" textColor="&EIT.TextColor.Sub;">
        <text v="Tên tài khoản" e="Account Name"/>
      </field>
      <field name="ma_kh" width="16" starColor="&EIT.StarColor.Sub;">
        <text v="Mã khách" e="Customer"/>
      </field>
      <field name="ten_kh" afterField="ma_kh" width="32" textColor="&EIT.TextColor.Sub;">
        <text v="Tên khách" e="Customer Name"/>
      </field>

      <field name="ps_no_nt" width="16" starColor="&EIT.StarColor.Sub;">
        <text v="Phát sinh nợ&Tiny.External.Import.Currency.v;" e="&Tiny.External.Import.Currency.e;Debit Amount"/>
      </field>
      <field name="ps_co_nt" width="16" starColor="&EIT.StarColor.Sub;">
        <text v="Phát sinh có&Tiny.External.Import.Currency.v;" e="&Tiny.External.Import.Currency.e;Credit Amount"/>
      </field>

      <field name="ps_no" width="16" starColor="&EIT.StarColor.Sub;">
        <text v="Phát sinh nợ" e="Debit Amount"/>
      </field>
      <field name="ps_co" width="16" starColor="&EIT.StarColor.Sub;">
        <text v="Phát sinh có" e="Credit Amount"/>
      </field>

      <field name="dien_giai_d" width="50">
        <text v="Diễn giải chi tiết" e="Description"/>
      </field>

      <field name="mau_bc" width="16" starColor="&EIT.StarColor.Sub;">
        <text v="Mẫu báo cáo" e="Report Form"/>
      </field>
      <field name="ma_tc" width="16" starColor="&EIT.StarColor.Sub;">
        <text v="Mã tính chất" e="Tax Type"/>
      </field>
      <field name="ma_mau_ct" width="16">
        <text v="Mẫu hóa đơn" e="Invoice Form"/>
      </field>
      <field name="so_ct0" width="16" starColor="&EIT.StarColor.Sub;">
        <text v="Số hóa đơn" e="Invoice Number"/>
      </field>
      <field name="so_seri0" width="16">
        <text v="Ký hiệu" e="Serial Number"/>
      </field>
      <field name="ngay_ct0" width="16" starColor="&EIT.StarColor.Sub;">
        <text v="Ngày hóa đơn" e="Invoice Date"/>
      </field>
      <field name="ma_kh_i" width="16">
        <text v="Mã nhà cung cấp (Trong phần thuế)" e="Supplier ID (Tax)"/>
      </field>
      <field name="ten_kh_i" width="50" starColor="&EIT.StarColor.Sub;">
        <text v="Tên nhà cung cấp (Trong phần thuế)" e="Supplier Name (Tax)"/>
      </field>
      <field name="dia_chi_i" width="16">
        <text v="Địa chỉ" e="Supplier Address"/>
      </field>
      <field name="ma_so_thue" width="16">
        <text v="Mã số thuế" e="Supplier Tax Code"/>
      </field>
      <field name="ten_vt" width="50">
        <text v="Tên hàng hóa - dịch vụ" e="Goods-Services"/>
      </field>

      <field name="t_tien_nt" width="16">
        <text v="Tiền hàng nt" e="FC Amount"/>
      </field>
      <field name="t_tien" width="16">
        <text v="Tiền hàng" e="Amount"/>
      </field>
      <field name="ma_thue" width="16" starColor="&EIT.StarColor.Sub;">
        <text v="Mã thuế" e="Tax Code"/>
      </field>
      <field name="tk_thue_no" width="16" starColor="&EIT.StarColor.Sub;">
        <text v="Tk thuế" e="Tax Account"/>
      </field>
      <field name="tk_du" width="16" starColor="&EIT.StarColor.Sub;">
        <text v="Tk đối ứng" e="Tax Account"/>
      </field>
      <field name="t_thue_nt" width="16">
        <text v="Thuế nt" e="FC Tax"/>
      </field>
      <field name="t_thue" width="16">
        <text v="Thuế" e="Tax"/>
      </field>
      <field name="ma_kh2" width="16" starColor="&EIT.StarColor.Sub;">
        <text v="Cục thuế" e="Tax Authority"/>
      </field>
      <field name="ghi_chu" width="50">
        <text v="Ghi chú" e="Note"/>
      </field>

      <field name="ma_vv" width="16">
        <text v="Vụ việc" e="Job"/>
      </field>
      <field name="ma_bp" width="16">
        <text v="Bộ phận" e="Department"/>
      </field>
      <field name="so_lsx" width="16">
        <text v="Lsx" e="MO"/>
      </field>
      <field name="ma_sp" width="16">
        <text v="Sản phẩm" e="Product"/>
      </field>
      <field name="ma_hd" width ="16">
        <text v="Hợp đồng" e="Contract"/>
      </field>
      <field name="ma_phi" width ="16">
        <text v="Phí" e="Expense"/>
      </field>
      <field name="ma_ku" width ="16">
        <text v="Khế ước" e="Loan Contract"/>
      </field>

      <field name="nh_dk" width="16" starColor="&EIT.StarColor.Sub;">
        <text v="Nhóm định khoản" e="Group"/>
      </field>

      &EIT.NoteField;
    </fields>
  </template>

  <processing>
    <text>
      &CheckVoucherRightBeforeProcess;
      <![CDATA[
declare @q nvarchar(4000), @duplicate nvarchar(512), @e1 nvarchar(512), @e2 nvarchar(512), @e3 nvarchar(512), @locked nvarchar(512), @field varchar(32), @wsID varchar(8), @voucherID varchar(8)
declare @master varchar(16), @detail varchar(16), @inquiry varchar(16), @general varchar(16), @baseCurrency varchar(8), @datetime0 char(21), @d0 datetime
declare @tax varchar(16), @taxProperty varchar(3), @voucherTemplate varchar(32), @checkInputVAT bit, @inputVATDuplicate nvarchar(512), @inputVATExists nvarchar(512)
declare @user int, @admin bit, @r int, @m int, @y int, @max1 int, @max2 int, @count int, @roundAmount int, @roundFAmount int
declare @taxVerify varchar(32), @inputVATVerify nvarchar(512), @taxPost char(1)

select @d0 = getdate(), @datetime0 = convert(char(8), @d0, 112) + ' ' + convert(char(12), @d0, 114), @status = left(replace(@status, '''', ''), 1)
select @admin = @@admin, @user = @@userID, @master = 'm]]>&Detail;<![CDATA[$', @detail = 'd]]>&Detail;<![CDATA[$', @inquiry = 'i]]>&Detail;<![CDATA[$', @general = 'c]]>&Detail;<![CDATA[$000000', @voucherID = ']]>&Code;<![CDATA[', @tax = 'r]]>&Tax;<![CDATA[$'

select @locked = case when @@language = 'v' then N'Đã khóa số liệu, kiểm tra lại ngày chứng từ tại dòng <span class="Highlight">%s</span>.' else N'Data is locked, please check the date of voucher at row <span class="Highlight">%s</span>.' end
select @duplicate = case when @@language = 'v' then N']]>&s1;<![CDATA[ đã tồn tại.' else ']]>&s2;<![CDATA[ already exists.' end
select @inputVATExists = case when @@language = 'v' then N']]>&s3;<![CDATA[ đã được cập nhật trong phần thuế đầu vào.' else ']]>&s4;<![CDATA[ already exists in Input VAT data.' end
select @inputVATDuplicate = case when @@language = 'v' then N']]>&s3;<![CDATA[ trùng nhau trong chi tiết thuế đầu vào.' else ']]>&s4;<![CDATA[ already exists in Input VAT data.' end
select @inputVATVerify = case when @@language = 'v' then N']]>&s3;<![CDATA[, thông tin thuế trên bảng kê khác với thông tin thuế ghi sổ trong chi tiết của tài khoản <span class="Highlight">%s3</span>.' else ']]>&s4;<![CDATA[, tax data in VAT invoice listing is different from one in tax account ledger (account = <span class="Highlight">%s3</span>).' end

select @e1 = case when @@language = 'v' then N']]>&s1;<![CDATA[ chưa nhập đủ tài khoản nợ hoặc có trong nhóm định khoản.' else ']]>&s2;<![CDATA[ has not been entered all debit or credit entries in the records (group).' end
select @e2 = case when @@language = 'v' then N']]>&s1;<![CDATA[ có hạch toán nhiều nợ, nhiều có trong nhóm định khoản.' else 'There are multi debit credit entries in the records (group) in ]]>&s2;<![CDATA[.' end
select @e3 = case when @@language = 'v' then N']]>&s1;<![CDATA[ có phát sinh nợ và phát sinh có khác nhau trong nhóm định khoản.' else ']]>&s2;<![CDATA[ has difference between total debit and total credit in group.' end

select @wsID = rtrim(val) from options where name = 'm_ws_id'
select @baseCurrency = rtrim(val) from options where name = 'm_ma_nt0'
select @roundAmount = cast(rtrim(val) as int) from options where name = 'm_round_tien'
select @roundFAmount = cast(rtrim(val) as int) from options where name = 'm_round_tien_nt'

select @taxVerify = rtrim(val) from options where name = 'm_ktthue_pkt'
select @taxProperty = rtrim(val) from options where name = 'm_ma_tc_thue'
select @voucherTemplate = rtrim(val) from options where name = 'm_mau_ct_dv'
if not exists(select 1 from dmmauct where ma_mau_ct = @voucherTemplate) select @voucherTemplate = ''
if exists(select 1 from options where name = 'm_kthd_tdv' and val = '1') select @checkInputVAT = 1 else select @checkInputVAT = 0
select @taxPost = rtrim(val) from options where name = 'm_post_tax_yn'

select @max1 = character_maximum_length from information_schema.columns where table_name = @master + '000000' and column_name = 'so_ct'
select @max2 = character_maximum_length from information_schema.columns where table_name = @detail + '000000' and column_name = 'so_lsx'

-- Checking
]]>&CommandCheckTaxCodeImport;<![CDATA[
update @@table set so_ct = space(@max1 - len(rtrim(ltrim(so_ct)))) + rtrim(ltrim(so_ct))
]]>&ImportOverwriteData;<![CDATA[

if @check$Unit <> '1' begin
  if @$mode = 1 begin
    ]]>&StartErrorCount;<![CDATA[
    ]]>&InsertErrorTable;<![CDATA[ select 'so_ct', stt, 'C001' from @@table a join c]]>&Detail;<![CDATA[$000000 b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct]]>&ImportSqlWhere;&VoucherLogImportExtendKey;&ImportOverwriteCheckKey;<![CDATA[
    ]]>&EndErrorCount;<![CDATA[
  end else begin
    select @r = min(stt) from @@table a join c]]>&Detail;<![CDATA[$000000 b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct]]>&ImportSqlWhere;&VoucherLogImportExtendKey;&ImportOverwriteCheckKey;<![CDATA[
  end
end else begin
  if @$mode = 1 begin
    ]]>&StartErrorCount;<![CDATA[
    ]]>&InsertErrorTable;<![CDATA[ select 'so_ct', stt, 'C002' from @@table a join c]]>&Detail;<![CDATA[$000000 b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct and a.ma_dvcs = b.ma_dvcs]]>&ImportSqlWhere;&VoucherLogImportExtendKey;&ImportOverwriteCheckKey;<![CDATA[
    ]]>&EndErrorCount;<![CDATA[
  end else begin
    select @r = min(stt) from @@table a join c]]>&Detail;<![CDATA[$000000 b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct and a.ma_dvcs = b.ma_dvcs]]>&ImportSqlWhere;&VoucherLogImportExtendKey;&ImportOverwriteCheckKey;<![CDATA[
  end
end
if @r is not null and @$mode <> 1 begin
  if @check$Unit <> '1' select replace(replace(replace(@duplicate, '%s1', so_ct), '%s2', convert(varchar(12), cast(ngay_ct as smalldatetime), 103)), '%s3', @@delta + @r) as message from @@table where stt = @r
    else select replace(replace(replace(replace(@duplicate$Unit, '%s1', so_ct), '%s2', convert(varchar(12), cast(ngay_ct as smalldatetime), 103)), '%s3', rtrim(ma_dvcs)), '%s4', @@delta + @r) as message from @@table where stt = @r
  return
end

-- Update
update @@table set so_lsx = space(@max2 - len(ltrim(rtrim(so_lsx)))) + ltrim(rtrim(so_lsx)), ma_nt = case when ma_nt <> '' then ma_nt else @baseCurrency end

select top 0 ma_dvcs, ngay_ct, so_ct into #unit from m]]>&Detail;<![CDATA[$000000
insert into #unit select ma_dvcs, ngay_ct, so_ct from @@table group by ma_dvcs, ngay_ct, so_ct

-- Locked Date
]]>&ImportLockedDateCheck;<![CDATA[

-- Check
@@checking(1);

update @@table set ps_no_nt = ps_no where ma_nt = @baseCurrency and ps_no_nt = 0 and ps_no <> 0
update @@table set ps_co_nt = ps_co where ma_nt = @baseCurrency and ps_co_nt = 0 and ps_co <> 0
update @@table set ps_no = round(ps_no_nt * ty_gia, @roundAmount) where (ma_nt = @baseCurrency and ps_no_nt <> 0) or (ma_nt <> @baseCurrency and ps_no = 0)
update @@table set ps_co = round(ps_co_nt * ty_gia, @roundAmount) where (ma_nt = @baseCurrency and ps_co_nt <> 0) or (ma_nt <> @baseCurrency and ps_co = 0)

-- Check Group
select top 0 a.ngay_ct, a.so_ct, a.nh_dk, a.ps_no_nt, a.ps_co_nt, cast(0 as int) as no_nt, cast(0 as int) as co_nt, cast(0 as int) as nc_nt_yn, a.ps_no, a.ps_co, cast(0 as int) as no, cast(0 as int) as co, cast(0 as int) as nc_yn into #group from d]]>&Detail;<![CDATA[$000000 a
insert into #group
  select ngay_ct, so_ct, nh_dk, sum(ps_no_nt), sum(ps_co_nt), sum(case when ps_no_nt = 0 then 0 else 1 end), sum(case when ps_co_nt = 0 then 0 else 1 end), sum(case when ps_no_nt <> 0 and ps_co_nt <> 0 then 1 else 0 end), sum(ps_no), sum(ps_co), sum(case when ps_no = 0 then 0 else 1 end), sum(case when ps_co = 0 then 0 else 1 end), sum(case when ps_no <> 0 and ps_co <> 0 then 1 else 0 end)
    from @@table group by ngay_ct, so_ct, nh_dk
create index i on #group (ngay_ct, so_ct, nh_dk)

if @$mode = 1 begin
  ]]>&StartErrorCount;<![CDATA[
  ]]>&InsertErrorTable;<![CDATA[ select 'so_ct', stt, 'C004' from @@table a join #group b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct and a.nh_dk = b.nh_dk where ((b.no_nt * b.co_nt = 0) or nc_nt_yn = 1)
  ]]>&w1;<![CDATA['so_ct']]>&w2;<![CDATA[stt]]>&w3;<![CDATA['C004']]>&w4;<![CDATA[
  ]]>&EndErrorCount;<![CDATA[

  ]]>&StartErrorCount;<![CDATA[
  ]]>&InsertErrorTable;<![CDATA[ select 'so_ct', stt, 'C004' from @@table a join #group b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct and a.nh_dk = b.nh_dk where ((b.no * b.co = 0) or nc_yn = 1) and a.ma_nt <> @baseCurrency and nc_nt_yn = 1
  ]]>&w1;<![CDATA['so_ct']]>&w2;<![CDATA[stt]]>&w3;<![CDATA['C004']]>&w4;<![CDATA[
  ]]>&EndErrorCount;<![CDATA[
end else begin
  select @r = min(stt) from @@table a join #group b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct and a.nh_dk = b.nh_dk where ((b.no_nt * b.co_nt = 0) or nc_nt_yn = 1)
  if @r is not null begin
    select replace(replace(replace(@e1, '%s1', so_ct), '%s2', convert(varchar(12), cast(ngay_ct as smalldatetime), 103)), '%s3', @@delta + @r) as message from @@table where stt = @r
    return
  end

  select @r = min(stt) from @@table a join #group b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct and a.nh_dk = b.nh_dk where ((b.no * b.co = 0) or nc_yn = 1) and a.ma_nt <> @baseCurrency and nc_nt_yn = 1
  if @r is not null begin
    select replace(replace(replace(@e1, '%s1', so_ct), '%s2', convert(varchar(12), cast(ngay_ct as smalldatetime), 103)), '%s3', @@delta + @r) as message from @@table where stt = @r
    return
  end
end

if @$mode = 1 begin
  ]]>&StartErrorCount;<![CDATA[
  ]]>&InsertErrorTable;<![CDATA[ select 'so_ct', stt, 'C005' from @@table a join #group b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct and a.nh_dk = b.nh_dk where ((b.no_nt - 1) * (b.co_nt - 1) <> 0)
  ]]>&w1;<![CDATA['so_ct']]>&w2;<![CDATA[stt]]>&w3;<![CDATA['C005']]>&w4;<![CDATA[
  ]]>&EndErrorCount;<![CDATA[

  ]]>&StartErrorCount;<![CDATA[
  ]]>&InsertErrorTable;<![CDATA[ select 'so_ct', stt, 'C005' from @@table a join #group b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct and a.nh_dk = b.nh_dk where ((b.no - 1) * (b.co - 1) <> 0) and a.ma_nt <> @baseCurrency and nc_nt_yn = 1
  ]]>&w1;<![CDATA['so_ct']]>&w2;<![CDATA[stt]]>&w3;<![CDATA['C005']]>&w4;<![CDATA[
  ]]>&EndErrorCount;<![CDATA[
end else begin
  select @r = min(stt) from @@table a join #group b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct and a.nh_dk = b.nh_dk where ((b.no_nt - 1) * (b.co_nt - 1) <> 0)
  if @r is not null begin
    select replace(replace(replace(@e2, '%s1', so_ct), '%s2', convert(varchar(12), cast(ngay_ct as smalldatetime), 103)), '%s3', @@delta + @r) as message from @@table where stt = @r
    return
  end

  select @r = min(stt) from @@table a join #group b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct and a.nh_dk = b.nh_dk where ((b.no - 1) * (b.co - 1) <> 0) and a.ma_nt <> @baseCurrency and nc_nt_yn = 1
  if @r is not null begin
    select replace(replace(replace(@e2, '%s1', so_ct), '%s2', convert(varchar(12), cast(ngay_ct as smalldatetime), 103)), '%s3', @@delta + @r) as message from @@table where stt = @r
    return
  end
end

if @$mode = 1 begin
  ]]>&StartErrorCount;<![CDATA[
  ]]>&InsertErrorTable;<![CDATA[ select 'so_ct', stt, 'C006' from @@table a join #group b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct and a.nh_dk = b.nh_dk where (b.ps_no_nt <> b.ps_co_nt)
  ]]>&w1;<![CDATA['so_ct']]>&w2;<![CDATA[stt]]>&w3;<![CDATA['C006']]>&w4;<![CDATA[
  ]]>&EndErrorCount;<![CDATA[

  ]]>&StartErrorCount;<![CDATA[
  ]]>&InsertErrorTable;<![CDATA[ select 'so_ct', stt, 'C006' from @@table a join #group b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct and a.nh_dk = b.nh_dk where (b.ps_no <> b.ps_co) and a.ma_nt <> @baseCurrency
  ]]>&w1;<![CDATA['so_ct']]>&w2;<![CDATA[stt]]>&w3;<![CDATA['C006']]>&w4;<![CDATA[
  ]]>&EndErrorCount;<![CDATA[
end else begin
  select @r = min(stt) from @@table a join #group b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct and a.nh_dk = b.nh_dk where (b.ps_no_nt <> b.ps_co_nt)
  if @r is not null begin
    select replace(replace(replace(@e3, '%s1', so_ct), '%s2', convert(varchar(12), cast(ngay_ct as smalldatetime), 103)), '%s3', @@delta + @r) as message from @@table where stt = @r
    return
  end

  select @r = min(stt) from @@table a join #group b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct and a.nh_dk = b.nh_dk where (b.ps_no <> b.ps_co) and a.ma_nt <> @baseCurrency
  if @r is not null begin
    select replace(replace(replace(@e3, '%s1', so_ct), '%s2', convert(varchar(12), cast(ngay_ct as smalldatetime), 103)), '%s3', @@delta + @r) as message from @@table where stt = @r
    return
  end
end

update @@table set mau_bc = case when mau_bc = '' then '3' else mau_bc end, ma_tc = case when ma_tc = '' then @taxProperty else ma_tc end, ma_mau_ct = case when ma_mau_ct = '' then @voucherTemplate else ma_mau_ct end where ma_thue <> ''
update @@table set ten_kh_i = isnull(case when a.ten_kh_i <> '' then a.ten_kh_i else b.ten_kh end, ''), dia_chi_i = isnull(case when a.dia_chi_i <> '' then a.dia_chi_i else b.dia_chi end, ''), ma_so_thue = isnull(case when a.ma_so_thue <> '' then a.ma_so_thue else rtrim(b.ma_so_thue) end, '') from @@table a left join dmkh b on a.ma_kh_i = b.ma_kh where a.ma_thue <> ''
update @@table set tk_thue_no = case when a.tk_thue_no <> '' then a.tk_thue_no else b.tk_thue_no3 end from @@table a left join dmthue b on a.ma_thue = b.ma_thue where a.ma_thue <> ''
update @@table set t_tien = round(t_tien_nt * ty_gia, @roundAmount) where (ma_nt = @baseCurrency and t_tien_nt <> 0) or (ma_nt <> @baseCurrency and t_tien = 0)
update @@table set t_thue = round(t_thue_nt * ty_gia, @roundAmount) where (ma_nt = @baseCurrency and t_thue_nt <> 0)or (ma_nt <> @baseCurrency and t_thue = 0)

update @@table set t_tien_nt = t_tien where ma_nt = @baseCurrency and t_tien_nt = 0 and t_tien <> 0
update @@table set t_thue_nt = t_thue where ma_nt = @baseCurrency and t_thue_nt = 0 and t_thue <> 0

@@checking(4);

-- Check VAT Verify
if @taxVerify = '1' begin
  select ngay_ct, so_ct, tk, sum(ps_no_nt) as ps_no_nt, sum(ps_co_nt) as ps_co_nt, sum(ps_no) as ps_no, sum(ps_co) as ps_co into #detailVAT from @@table group by ngay_ct, so_ct, tk
  create index i1 on #detailVAT (ngay_ct, so_ct)
  select ngay_ct, so_ct, tk_thue_no, sum(t_thue_nt) as t_thue_nt, sum(t_thue) as t_thue into #groupVAT from @@table where ma_thue <> '' group by ngay_ct, so_ct, tk_thue_no
  create index i2 on #groupVAT (ngay_ct, so_ct)
  select a.ngay_ct, a.so_ct into #groupVATVerify from #groupVAT a join #detailVAT b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct and a.tk_thue_no = b.tk where (a.t_thue_nt = (b.ps_no_nt - b.ps_co_nt)) and (a.t_thue = (b.ps_no - b.ps_co))

  create index i3 on #groupVATVerify (ngay_ct, so_ct)

  if @$mode = 1 begin
    ]]>&StartErrorCount;<![CDATA[
    ]]>&InsertErrorTable;<![CDATA[ select 'so_ct0', stt, 'C007' from @@table a where a.ma_thue <> '' and not exists(select 1 from #groupVATVerify b where a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct)
    ]]>&w1;<![CDATA['so_ct0']]>&w2;<![CDATA[stt]]>&w3;<![CDATA['C007']]>&w4;<![CDATA[
    ]]>&EndErrorCount;<![CDATA[
  end else begin
    select @r = min(a.stt) from @@table a where a.ma_thue <> '' and not exists(select 1 from #groupVATVerify b where a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct)
    if @r is not null begin
      select replace(replace(replace(@inputVATVerify, '%s1', so_ct0), '%s2', @@delta + @r), '%s3', rtrim(tk_thue_no)) as message from @@table where stt = @r
      return
    end
  end

end

-- Check Input VAT
if @checkInputVAT = 1 begin
  if @$mode = 1 begin
    ]]>&StartErrorCount;<![CDATA[
    ]]>&InsertErrorTable;<![CDATA[ select 'so_ct0', a.stt, 'C008' from @@table a join @@table b on a.so_ct0 = b.so_ct0 and a.so_seri0 = b.so_seri0 and a.ngay_ct0 = b.ngay_ct0 and a.ma_so_thue = b.ma_so_thue
      where a.ngay_ct <> b.ngay_ct or a.so_ct <> b.so_ct group by a.ngay_ct, a.so_ct, a.stt
    ]]>&EndErrorCount;<![CDATA[
  end else begin
    select @r = min(a.stt) from @@table a join @@table b on a.so_ct0 = b.so_ct0 and a.so_seri0 = b.so_seri0 and a.ngay_ct0 = b.ngay_ct0 and a.ma_so_thue = b.ma_so_thue where a.ngay_ct <> b.ngay_ct or a.so_ct <> b.so_ct group by a.ngay_ct, a.so_ct
    if @r is not null begin
      select replace(replace(@inputVATDuplicate, '%s1', so_ct0), '%s2', @@delta + @r) as message from @@table where stt = @r
      return
    end
  end

  if @$mode = 1 begin
    ]]>&StartErrorCount;<![CDATA[
    ]]>&InsertErrorTable;<![CDATA[ select 'so_ct0', a.stt, 'C009' from @@table a join ctgt30 b with (index(c)) on a.so_ct0 = b.so_ct0 and a.so_seri0 = b.so_seri0 and a.ngay_ct0 = b.ngay_ct0 and a.ma_so_thue = b.ma_so_thue]]>&ImportSqlWhere;&VoucherLogImportExtendKey;&ImportOverwriteCheckKey;<![CDATA[ group by a.stt
    ]]>&EndErrorCount;<![CDATA[
  end else begin
    select @r = min(stt) from @@table a join ctgt30 b with (index(c)) on a.so_ct0 = b.so_ct0 and a.so_seri0 = b.so_seri0 and a.ngay_ct0 = b.ngay_ct0 and a.ma_so_thue = b.ma_so_thue]]>&ImportSqlWhere;&VoucherLogImportExtendKey;&ImportOverwriteCheckKey;<![CDATA[
    if @r is not null begin
      select replace(replace(@inputVATExists, '%s1', so_ct0), '%s2', @@delta + @r) as message from @@table where stt = @r
      return
    end
  end
end

@@checking(5);

]]>
      &ConfigDynamicImportChecking;
      &ImportOverwriteChecking;
      &EndErrorMode;
      <![CDATA[
-- Gather
select top 0 stt_rec, ngay_ct, so_ct, cast(0 as int) as stt, identity(int, 1, 1) as id into #id from m]]>&Detail;<![CDATA[$000000
insert into #id(stt_rec, ngay_ct, so_ct, stt) select '', a.ngay_ct, a.so_ct, min(a.stt) from @@table a]]>&ImportOverwriteIdentiyDataCondition;<![CDATA[ group by a.ngay_ct, a.so_ct order by a.ngay_ct, a.so_ct

select identity(int, 1, 1) as id, cast(stt as int) as stt, convert(varchar(8), ngay_ct, 112) + so_ct as c, cast(0 as int) as ln into #ln from @@table order by ngay_ct, so_ct, stt
exec AI_ERP$App$UpdateLineNumber
create index i on #ln(stt)

select @count = count(*) from #id
exec AI_ERP$App$UpdateIdentityNumber @wsID, @voucherID, @count, @@userID
]]>&ImportOverwriteProcess;<![CDATA[

select top 0 stt_rec, stt_rec0, line_nbr, ma_dvcs, loai_ct, ngay_ct, so_ct, ngay_ct0, so_ct0, so_seri0, ma_thue, thue_suat, t_tien_nt, t_tien, t_thue_nt, t_thue, ma_tt, tk_thue_no, tk_du
  , mau_bc, ma_tc, ma_mau_ct, ma_kh, ten_kh, dia_chi, ma_so_thue, ma_kh2, ten_vt, ghi_chu, ma_vv, ma_bp, so_lsx, ma_sp, ma_hd, ma_phi, ma_ku, ma_nt, ty_gia, cast(0 as int) as stt into #r]]>&Tax;<![CDATA[ from r]]>&Tax;<![CDATA[$000000
insert into #r]]>&Tax;<![CDATA[ select b.stt_rec, dbo.AI_ERP$Function$Voucher$GetRecordsGroup(i.ln), i.ln, c.ma_dvcs, '2', a.ngay_ct, a.so_ct, a.ngay_ct0, a.so_ct0, a.so_seri0, a.ma_thue, isnull(d.thue_suat, 0),
    a.t_tien_nt, a.t_tien, a.t_thue_nt, a.t_thue, '', a.tk_thue_no, a.tk_du, a.mau_bc, a.ma_tc, a.ma_mau_ct, a.ma_kh_i, a.ten_kh_i, a.dia_chi_i, a.ma_so_thue, a.ma_kh2, a.ten_vt, a.ghi_chu,
    case when @taxPost = '1' then a.ma_vv else '' end,
    case when @taxPost = '1' then a.ma_bp else '' end,
    case when @taxPost = '1' then a.so_lsx else '' end,
    case when @taxPost = '1' then a.ma_sp else '' end,
    case when @taxPost = '1' then a.ma_hd else '' end,
    case when @taxPost = '1' then a.ma_phi else '' end,
    case when @taxPost = '1' then a.ma_ku else '' end,
    a.ma_nt, a.ty_gia, a.stt
  from @@table a join #id b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct join #unit c on a.ngay_ct = c.ngay_ct and a.so_ct = c.so_ct left join dmthue d on a.ma_thue = d.ma_thue join #ln i on a.stt = i.stt
  where a.ma_thue <> '' order by a.ngay_ct, a.so_ct, a.stt

select top 0 stt_rec, stt_rec0, line_nbr, ngay_ct, so_ct, tk, ma_kh, ps_no_nt, ps_no, ps_co_nt, ps_co, dien_giai, ma_vv, ma_bp, so_lsx, ma_sp, ma_hd, ma_phi, ma_ku, nh_dk, cast(0 as int) as stt
  into #d]]>&Detail;<![CDATA[ from d]]>&Detail;<![CDATA[$000000

insert into #d]]>&Detail;<![CDATA[ select b.stt_rec, dbo.AI_ERP$Function$Voucher$GetRecordsGroup(i.ln), i.ln, a.ngay_ct, a.so_ct,
    a.tk, a.ma_kh, a.ps_no_nt, a.ps_no, a.ps_co_nt, a.ps_co,
    a.dien_giai_d, a.ma_vv, a.ma_bp, a.so_lsx, a.ma_sp, a.ma_hd, a.ma_phi, a.ma_ku, a.nh_dk, a.stt
  from @@table a join #id b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct join #ln i on a.stt = i.stt
  order by a.ngay_ct, a.so_ct, a.stt

select top 0 stt_rec, status, ma_dvcs, ngay_ct, so_ct, ma_nt, ty_gia, t_ps_no_nt, t_ps_no, t_ps_co_nt, t_ps_co, dien_giai
  into #m]]>&Detail;<![CDATA[ from m]]>&Detail;<![CDATA[$000000

insert into #m]]>&Detail;<![CDATA[ select b.stt_rec, @status, c.ma_dvcs, a.ngay_ct, a.so_ct,
    a.ma_nt, a.ty_gia, d.t_ps_no_nt, d.t_ps_no, d.t_ps_co_nt, d.t_ps_co, a.dien_giai
  from @@table a
    join #id b on a.stt = b.stt
    join #unit c on a.ngay_ct = c.ngay_ct and a.so_ct = c.so_ct
    join (select stt_rec, sum(ps_no_nt) as t_ps_no_nt, sum(ps_no) as t_ps_no
      , sum(ps_co_nt) as t_ps_co_nt, sum(ps_co) as t_ps_co from #d]]>&Detail;<![CDATA[ group by stt_rec) d
    on b.stt_rec = d.stt_rec

update #d]]>&Detail;<![CDATA[ set dien_giai = b.dien_giai from #d]]>&Detail;<![CDATA[ a join #m]]>&Detail;<![CDATA[ b on a.stt_rec = b.stt_rec where isnull(a.dien_giai, '') = ''

select top 0 stt_rec, ngay_ct, so_ct, ma_dvcs, status, user_id0, c$, m$, d$, identity(int, 1, 1) as id into #i]]>&Detail;<![CDATA[ from i]]>&Detail;<![CDATA[$000000
insert into #i]]>&Detail;<![CDATA[ select stt_rec, ngay_ct, so_ct, ma_dvcs, @status, @user, convert(varchar(12), ngay_ct, 112) + so_ct + stt_rec,
  '#10$' + rtrim(ma_nt), '' from #m]]>&Detail;<![CDATA[

select @q = dbo.AI_ERP$Function$Update$Inquiry('#i]]>&Detail;<![CDATA[', '#d]]>&Detail;<![CDATA[', 'd$', 'tk, ma_kh', '#10$, #20$', 'stt_rec', default, default, default, default, default)
exec sp_executesql @q

-- Insert
declare @p varchar(32), @masterTable varchar(32), @detailTable varchar(32), @inquiryTable varchar(32), @insertKey varchar(128), @taxTable varchar(32)
select distinct month(ngay_ct) as m, year(ngay_ct) as y into #k from #id
select @r = min(y * 12 + m) from #k

while @r is not null begin
  select @m = m, @y = y from #k where y * 12 + m = @r
  select @p = rtrim(@y) + replace(str(@m, 2), ' ', '0'), @insertKey = 'month(ngay_ct) = ' + rtrim(@m) + ' and year(ngay_ct) = ' + rtrim(@y)
  select @masterTable = @master + @p, @detailTable = @detail + @p, @taxTable = @tax + @p, @inquiryTable = @inquiry + @p

  select @q = @@inserting(master, @masterTable, @insertKey);
  exec sp_executesql @q

  select @q = @@inserting(detail, @detailTable, @insertKey);
  exec sp_executesql @q

  if exists(select 1 from #r]]>&Tax;<![CDATA[) begin
    select @q = @@inserting(tax, @taxTable, @insertKey);
    exec sp_executesql @q
  end

  select @q = @@inserting(inquiry, @inquiryTable, @insertKey);
  exec sp_executesql @q
  ]]>&ImportOverwriteInsertingByPart;<![CDATA[
  select @r = min(y * 12 + m) from #k where y * 12 + m > @r
end

@@inserting(general);
]]>&ImportOverwriteInserting;<![CDATA[
declare @fieldSelect varchar(4000), @m_gl_tt char(1),  @m_tk_cn_pth varchar(256), @m_tk_cn_ptr varchar(256), @External nvarchar(4000), @Statement nvarchar(4000), @Numeric varchar(4000), @String varchar(4000), @s nvarchar(4000)

if @status <> '0' begin
  select @m_gl_tt = replace(val, '''', '') from options where name = 'm_gl_tt'
  select @m_tk_cn_pth = replace(val, '''', '') from options where name = 'm_tk_cn_pth'
  select @m_tk_cn_ptr = replace(val, '''', '') from options where name = 'm_tk_cn_ptr'

  if @m_gl_tt = '1' begin
    select *, @voucherID as ma_ct, cast('' as varchar(2)) as loai_ct, @datetime0 as datetime0, @datetime0 as datetime2, @user as user_id0, @user as user_id2 into #malloc from #m]]>&Detail;<![CDATA[

    select top 0 * into #dpost from #d]]>&Detail;<![CDATA[
    set @q = 'truncate table #dpost'
    set @q = @q + char(13) + 'insert into #dpost select * from #d]]>&Detail;<![CDATA[ where ma_kh <> '''' and dbo.ff_InList(tk, ''%tk'') = 1 and (%ps + %ps_nt) <> 0'

    if exists(select 1 from #d]]>&Detail;<![CDATA[ where ma_kh <> '' and (@m_tk_cn_pth <> '' and dbo.ff_InList(tk, @m_tk_cn_pth) = 1) and ps_no + ps_no_nt <> 0) begin
      set @s = replace(replace(@q, '%tk', @m_tk_cn_pth), '%ps', 'ps_no')
      exec sp_executesql @s

      select @External = 'status = ''' + @status + ''', ma_ct = ''' + @voucherID + ''', loai_ct = '''', ngay_ct0 = b.ngay_ct, so_ct = b.so_ct, t_tien_nt2 = b.ps_no_nt, t_tien2 = b.ps_no, t_tt_nt = b.ps_no_nt, t_tt = b.ps_no, datetime0 = ''' + @datetime0 + ''', datetime2 = ''' + @datetime0 + ''', user_id0 = ' + rtrim(@user) + ', user_id2 = ' + rtrim(@user)
      select @Statement = '', @Numeric = 'tt, tt_nt, t_thue_nt, t_thue, t_ck_nt, t_ck, sl_td1, sl_td2, sl_td3, s4, s5, s6', @String = 'stt_rec_tt, ma_tt,ma_nvbh, so_seri, ma_td1, ma_td2, ma_td3, gc_td1, gc_td2, gc_td3, s1, s2, s3'
      exec AI_ERP$Voucher$Import$PostPayment '#m]]>&Detail;<![CDATA[', '#dpost', '', @Numeric, @String, @External, @Statement, '0', '1', '1'
    end

    if exists(select 1 from #d]]>&Detail;<![CDATA[ where ma_kh <> '' and (@m_tk_cn_ptr <> '' and dbo.ff_InList(tk, @m_tk_cn_ptr) = 1) and ps_co + ps_co_nt <> 0) begin
      set @s = replace(replace(@q, '%tk', @m_tk_cn_ptr), '%ps', 'ps_co')
      exec sp_executesql @s

      select @External = 'status = ''' + @status + ''',ma_ct = ''' + @voucherID + ''', loai_ct = '''', ngay_ct0 = b.ngay_ct, ngay_lct = b.ngay_ct, so_ct0 = b.so_ct, so_ct = b.so_ct, t_tien_nt0 = b.ps_co_nt, t_tien0 = b.ps_co, t_tt_nt = b.ps_co_nt, t_tt = b.ps_co , datetime0 = ''' + @datetime0 + ''', datetime2 = ''' + @datetime0 + ''', user_id0 = ' + rtrim(@user) + ', user_id2 = ' + rtrim(@user)
      select @Statement = '', @Numeric = 'nam, ky, tt, tt_nt, t_nk, t_nk_nt, t_tien, t_tien_nt, t_cp_nt, t_cp, t_thue_nt, t_thue, sl_td1, sl_td2, sl_td3, s4, s5, s6', @String = 'so_dh, stt_rec_tt, ma_tt, ma_td1, ma_td2, ma_td3, gc_td1, gc_td2, gc_td3, s1, s2, s3'
      exec AI_ERP$Voucher$Import$PostPayment '#m]]>&Detail;<![CDATA[', '#dpost', '', @Numeric, @String, @External, @Statement, '1', '2', '1'
    end

    if exists(select 1 from #d]]>&Detail;<![CDATA[ where ma_kh <> '' and (@m_tk_cn_pth <> '' and dbo.ff_InList(tk, @m_tk_cn_pth) = 1) and ps_co + ps_co_nt <> 0) begin
      set @s = replace(replace(@q, '%tk', @m_tk_cn_pth), '%ps', 'ps_co')
      exec sp_executesql @s

      exec AI_ERP$Voucher$Import$Allocation @voucherID, '3', '#malloc', '#dpost', '', '', 'ps_co_nt', 'ps_co', 'cttt50', 'ma_kh', 'dien_giai, tk'
    end

    if exists(select 1 from #d]]>&Detail;<![CDATA[ where ma_kh <> '' and (@m_tk_cn_ptr <> '' and dbo.ff_InList(tk, @m_tk_cn_ptr) = 1) and ps_no + ps_no_nt <> 0) begin
      set @s = replace(replace(@q, '%tk', @m_tk_cn_ptr), '%ps', 'ps_no')
      exec sp_executesql @s

      exec AI_ERP$Voucher$Import$Allocation @voucherID, '3', '#malloc', '#dpost', '', '', 'ps_no_nt', 'ps_no', 'cttt60', 'ma_kh', 'dien_giai, tk'
    end
  end

  -- Tax
  if exists(select 1 from #r]]>&Tax;<![CDATA[) begin
    @@inserting(inputTax);
  end
end

if @status = '1' begin
  select @fieldSelect = 'stt_rec, ma_dvcs, ''' + @voucherID + ''' , ngay_ct, so_ct, t_ps_no_nt , t_ps_no, ma_nt, ty_gia, dien_giai,''' + @datetime0 + ''','  + rtrim(@user)
  exec AI_ERP$Voucher$Import$PostLater '#m]]>&Detail;<![CDATA[', @voucherID, @fieldSelect, ''
end

if @status = '2' begin
  declare @glGroup varchar(128), @glAcctField varchar(128), @glAcctFieldRef varchar(128), @glAmountField varchar(128), @glFCAmountField varchar(128), @glKey varchar(512), @glNoAccList varchar(128), @glNoAccListRef varchar(128), @glGroups varchar(128)

  select @glAcctField = 'tk_no', @glAcctFieldRef = 'tk_co', @glAmountField = 'tien', @glFCAmountField = 'tien_nt', @glKey = '1=1', @glNoAccList = '0', @glNoAccListRef = '0', @glGroups = '1'
  select @Numeric = 'nam, ky, sl_td1, sl_td2, sl_td3, s4, s5, s6', @String = 'ma_nk, so_lo, ong_ba, ma_gd, so_dh, gc_td1, gc_td2, gc_td3, so_ct0, s1, s2, s3', @External = 'dien_giai_h = b.dien_giai, datetime0 = ''' + @datetime0 + ''', datetime2 = ''' + @datetime0 + ''', user_id0 = ' + rtrim(@user) + ', user_id2 = ' + rtrim(@user)
  select @glGroup = 'nh_dk, ma_vv, ma_sp, ma_bp, so_lsx, ma_hd, ma_ku, ma_phi'

  select @Statement = 'update #gl set ma_kh = case when a.ma_kh <> '''' then a.ma_kh else b.ma_kh end, ma_vv = case when a.ma_vv <> '''' then a.ma_vv else b.ma_vv end,
    ma_sp = case when a.ma_sp <> '''' then a.ma_sp else b.ma_sp end, ma_bp = case when a.ma_bp <> '''' then a.ma_bp else b.ma_bp end,
    so_lsx = case when a.so_lsx <> '''' then a.so_lsx else b.so_lsx end, ma_hd = case when a.ma_hd <> '''' then a.ma_hd else b.ma_hd end,
    ma_ku = case when a.ma_ku <> '''' then a.ma_ku else b.ma_ku end, ma_phi = case when a.ma_phi <> '''' then a.ma_phi else b.ma_phi end, dien_giai = case when a.dien_giai <> '''' then a.dien_giai else b.dien_giai end
    from #gl b join #gl1 a on a.stt_rec = b.stt_rec and a.nh_dk = b.nh_dk where b.ps_co + b.ps_co_nt <> 0'

  select @Statement = @Statement + char(13) + 'update #gl set ma_kh = case when a.ma_kh <> '''' then a.ma_kh else b.ma_kh end, ma_vv = case when a.ma_vv <> '''' then a.ma_vv else b.ma_vv end,
    ma_sp = case when a.ma_sp <> '''' then a.ma_sp else b.ma_sp end, ma_bp = case when a.ma_bp <> '''' then a.ma_bp else b.ma_bp end,
    so_lsx = case when a.so_lsx <> '''' then a.so_lsx else b.so_lsx end, ma_hd = case when a.ma_hd <> '''' then a.ma_hd else b.ma_hd end,
    ma_ku = case when a.ma_ku <> '''' then a.ma_ku else b.ma_ku end, ma_phi = case when a.ma_phi <> '''' then a.ma_phi else b.ma_phi end, dien_giai = case when a.dien_giai <> '''' then a.dien_giai else b.dien_giai end
    from #gl b join #gl2 a on a.stt_rec = b.stt_rec and a.nh_dk = b.nh_dk where b.ps_no + b.ps_no_nt <> 0'

  select @Statement = @Statement + char(13) + 'update #gl set head_item = b.nh_dk_ref from #gl a join #grtype1 b on a.stt_rec = b.stt_rec and a.nh_dk = b.nh_dk'

  select stt_rec, nh_dk, case when sum(case when ps_no + ps_no_nt <> 0 then 1 else 0 end) >= sum(case when ps_no + ps_no_nt <> 0 then 0 else 1 end) then 1 else 0 end as xtype
    into #grtype from #d]]>&Detail;<![CDATA[ where ps_no_nt + ps_co_nt + ps_no + ps_co <> 0 group by stt_rec, nh_dk

  select stt_rec, nh_dk, cast('' as char(1)) as nh_dk_ref, identity(int, 1, 1) as id into #grtype1 from #grtype group by stt_rec, nh_dk
  select stt_rec, min(id) as id into #grtype0 from #grtype1 group by stt_rec
  update #grtype1 set nh_dk_ref = case when (a.id - b.id + 1) < 36 then dbo.ff_Dec2Seq(a.id - b.id + 1) else '' end from #grtype1 a join #grtype0 b on a.stt_rec = b.stt_rec

  select a.stt_rec, a.tk, a.nh_dk, a.ma_kh, a.ma_vv, a.ma_sp, a.ma_bp, a.so_lsx, a.ma_hd, a.ma_ku, a.ma_phi, a.dien_giai into #gl1 from #d]]>&Detail;<![CDATA[ a
    where a.ps_co + a.ps_co_nt <> 0 and exists (select 1 from #grtype b where a.stt_rec = b.stt_rec and a.nh_dk = b.nh_dk and b.xtype = 1)

  select a.stt_rec, a.tk, a.nh_dk, a.ma_kh, a.ma_vv, a.ma_sp, a.ma_bp, a.so_lsx, a.ma_hd, a.ma_ku, a.ma_phi, a.dien_giai into #gl2 from #d]]>&Detail;<![CDATA[ a
    where a.ps_no + a.ps_no_nt <> 0 and exists (select 1 from #grtype b where a.stt_rec = b.stt_rec and a.nh_dk = b.nh_dk and b.xtype = 0)

  select a.stt_rec, a.stt_rec0, a.line_nbr, a.ngay_ct, a.so_ct, a.tk as tk_no, b.tk as tk_co, a.ps_no as tien, a.ps_no_nt as tien_nt, a.nh_dk,
      case when a.ma_kh <> '' then a.ma_kh else b.ma_kh end as ma_kh, case when a.ma_vv <> '' then a.ma_vv else b.ma_vv end as ma_vv,
      case when a.ma_sp <> '' then a.ma_sp else b.ma_sp end as ma_sp, case when a.ma_bp <> '' then a.ma_bp else b.ma_bp end as ma_bp,
      case when a.so_lsx <> '' then a.so_lsx else b.so_lsx end as so_lsx, case when a.ma_hd <> '' then a.ma_hd else b.ma_hd end as ma_hd,
      case when a.ma_ku <> '' then a.ma_ku else b.ma_ku end as ma_ku, case when a.ma_phi <> '' then a.ma_phi else b.ma_phi end as ma_phi, case when a.dien_giai <> '' then a.dien_giai else b.dien_giai end as dien_giai
    into #dGL0 from #d]]>&Detail;<![CDATA[ a join #gl1 b on a.stt_rec = b.stt_rec and a.nh_dk = b.nh_dk where a.ps_no + a.ps_no_nt <> 0

  insert into #dGL0 select a.stt_rec, a.stt_rec0, a.line_nbr, a.ngay_ct, a.so_ct, b.tk, a.tk, a.ps_co, a.ps_co_nt, a.nh_dk,
      case when a.ma_kh <> '' then a.ma_kh else b.ma_kh end as ma_kh, case when a.ma_vv <> '' then a.ma_vv else b.ma_vv end as ma_vv,
      case when a.ma_sp <> '' then a.ma_sp else b.ma_sp end as ma_sp, case when a.ma_bp <> '' then a.ma_bp else b.ma_bp end as ma_bp,
      case when a.so_lsx <> '' then a.so_lsx else b.so_lsx end as so_lsx, case when a.ma_hd <> '' then a.ma_hd else b.ma_hd end as ma_hd,
      case when a.ma_ku <> '' then a.ma_ku else b.ma_ku end as ma_ku, case when a.ma_phi <> '' then a.ma_phi else b.ma_phi end as ma_phi, case when a.dien_giai <> '' then a.dien_giai else b.dien_giai end as dien_giai
    from #d]]>&Detail;<![CDATA[ a join #gl2 b on a.stt_rec = b.stt_rec and a.nh_dk = b.nh_dk where a.ps_co + a.ps_co_nt <> 0

  select a.*, b.ma_dvcs, a.ma_kh as ma_kh_ref, @voucherID as ma_ct, cast('' as char(2)) as loai_ct, b.ngay_ct as ngay_lct, b.ma_nt,b.ty_gia, a.dien_giai as dien_giai_h into #dGL from #dGL0 a join #m]]>&Detail;<![CDATA[ b on a.stt_rec = b.stt_rec

  exec AI_ERP$Voucher$Import$PostGL '#m]]>&Detail;<![CDATA[', '#dGL', @voucherID, @glAcctField, @glAcctFieldRef, @glAmountField, @glFCAmountField, @glKey, @glNoAccList, @glNoAccListRef, @glGroup, @Numeric, @String, @External, @Statement, '#k', @glGroups
end
]]>
    </text>
  </processing>

</import>