<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE import [
  <!ENTITY CheckVoucherRightBeforeProcess SYSTEM "Include\CheckVoucherRightBeforeProcess.txt">
  <!ENTITY Detail "51">
  <!ENTITY Tax "30">
  <!ENTITY Code "PC1">
  <!ENTITY TransferID "CDTran">
  <!ENTITY And "&#13;">
  <!ENTITY Error "
if @r is not null begin
  select '' as message, @field as field, @r as record
  return
end
">
  <!ENTITY LockedDate "
if @r is not null begin
  select replace(@locked, '&#37;s', @@delta + @r) as message
  return
end
">
  <!ENTITY s1 "Chứng từ số &lt;span class=&quot;Highlight&quot;&gt;&#37;s1&lt;/span&gt; ngày &lt;span class=&quot;Highlight&quot;&gt;&#37;s2&lt;/span&gt; tại dòng &lt;span class=&quot;Highlight&quot;&gt;&#37;s3&lt;/span&gt;">
  <!ENTITY s2 "The voucher number &lt;span class=&quot;Highlight&quot;&gt;&#37;s1&lt;/span&gt; dated &lt;span class=&quot;Highlight&quot;&gt;&#37;s2&lt;/span&gt; at row &lt;span class=&quot;Highlight&quot;&gt;&#37;s3&lt;/span&gt;">

  <!ENTITY s3 "Số hóa đơn &lt;span class=&quot;Highlight&quot;&gt;&#37;s1&lt;/span&gt; tại dòng &lt;span class=&quot;Highlight&quot;&gt;&#37;s2&lt;/span&gt;">
  <!ENTITY s4 "The invoice number &lt;span class=&quot;Highlight&quot;&gt;&#37;s1&lt;/span&gt; at row &lt;span class=&quot;Highlight&quot;&gt;&#37;s2&lt;/span&gt;">

  <!ENTITY CheckTaxCodeConditionImport " and exists(select 1 from dmkh b where @@table.ma_kh_j = b.ma_kh and b.khong_kt_mst = 0)">
  <!ENTITY % CheckTaxCode SYSTEM "..\..\Include\CheckImportTaxCode.ent">
  %CheckTaxCode;

  <!ENTITY % VoucherDeleteLog SYSTEM "..\..\Include\VoucherDeleteLog.ent">
  %VoucherDeleteLog;

  <!ENTITY % ConfigDynamicEvents SYSTEM "..\..\Include\ConfigImportDynamicEvents.ent">
  %ConfigDynamicEvents;
  <!ENTITY ConfigDynamicVoucherType "">
  <!ENTITY ConfigDynamicType "2">

  <!ENTITY % ImportErrorMode SYSTEM "..\..\Include\ImportErrorMode.ent">
  %ImportErrorMode;

  <!ENTITY % Tiny.External SYSTEM "..\..\Include\Tiny.External.ent">
  %Tiny.External;
  %Tiny.External.CDTran;

  <!ENTITY % ExportImportTemplate SYSTEM "..\..\Include\ExportImportTemplate.ent">
  %ExportImportTemplate;
  <!ENTITY ExportQueryStaticFile "select case when @@language = 'V' then 'CDMaster' else 'CDMaster2' end as file_name">

  <!ENTITY % ImportSqlCondition SYSTEM "..\..\Include\ImportSqlCondition.ent">
  %ImportSqlCondition;

  <!ENTITY % ImportOverwrite SYSTEM "..\..\Include\ImportOverwriteVoucher.ent">
  %ImportOverwrite;
  <!ENTITY ImportOverwriteMainTable "m&Detail;$$partition">
  <!ENTITY ImportOverwriteLogTable "o&Detail;$000000">
  <!ENTITY % ImportOverwriteCommand SYSTEM "..\..\Include\ImportOverWriteVoucher.CDTran">
  %ImportOverwriteCommand;
]>

<import xmlns="urn:schemas-ai-erp:data-import">
  <setting>
    <type value="Voucher"/>
    <startRow value="6"/>
    <maxFileSize value="10"/>
    <uploadTimeOut value="120"/>
    <importRecordTimeout value="1740"/>
    <allowFileExtension value="^(.XLSX)$"/>
    <onProcessFail value="parent.on$CDMasterImportForm$Fail(this.frameElement)"/>
    <onProcessComplete value="parent.on$CDMasterImportForm$Complete(this.frameElement)"/>
    <uploadContentType value="application/ms-excel;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" />
    <baseTable value="m&Detail;$000000, d&Detail;$000000, r&Tax;$000000"/>
    <dependence value="m&Detail;$000000, d&Detail;$000000, i&Detail;$000000, c&Detail;$000000, r&Tax;$000000, ctgt30" alias="m, d, i, g, t"/>
    <listTable value="#m&Detail;, #d&Detail;, #i&Detail;, #i&Detail;, #r&Tax;, #r&Tax;"/>
    <alias value="master, detail, inquiry, general, tax, inputTax"/>

    &UploadModeProcess;
  </setting>

  <variable>
    <var id="C001">
      <header v="Số chứng từ và ngày đã tồn tại." e="The voucher number and dated already exists." />
    </var>
    <var id="C002">
      <header v="Số chứng từ, ngày và đơn vị đã tồn tại." e="The voucher number, dated and unit already exists." />
    </var>
    <var id="C003">
      <header v="Đã khóa số liệu, kiểm tra lại ngày chứng từ." e="Data is locked, please check the date of voucher." />
    </var>
    <var id="C004">
      <header v="Số hóa đơn trùng nhau trong chi tiết thuế đầu vào." e="The invoice number already exists in Input VAT data." />
    </var>
    <var id="C005">
      <header v="Số hóa đơn đã được cập nhật trong phần thuế đầu vào." e="The invoice number already exists in Input VAT data." />
    </var>
    &TaxCodeImportVariable;
    &ImportOverwriteVariable;
    &ImportLockedDateVariable;
  </variable>

  <query>
    <command>
      <text>
        &ExportImportTemplateQuery;
      </text>
    </command>
  </query>

  <fields identity="true" name="stt">
    &Tiny.External.Import.View.CDTran;
  </fields>

  <template>
    <setting>
      <downloadFile>
        <text v="Phiếu chi tiền mặt" e="Cash Disbursement"/>
      </downloadFile>
    </setting>

    <fields row="5">
      <field name="ma_dvcs" width="16" starColor="&EIT.StarColor.Require;">
        <text v="Đơn vị" e="Unit"/>
      </field>

      <field name="so_ct" width="16" starColor="&EIT.StarColor.Require;">
        <text v="Số chứng từ" e="Voucher Number"/>
      </field>
      <field name="ngay_ct" width="16" starColor="&EIT.StarColor.Require;">
        <text v="Ngày chứng từ" e="Voucher Date"/>
      </field>

      <field name="ma_kh" width="16" starColor="&EIT.StarColor.Require;">
        <text v="Mã khách" e="Customer"/>
      </field>
      <field name="ten_kh" afterField="ma_kh" width="32" textColor="&EIT.TextColor.Sub;">
        <text v="Tên khách" e="Customer Name"/>
      </field>

      <field name="ong_ba" width="16">
        <text v="Người nhận tiền" e="Receiver"/>
      </field>

      <field name="dien_giai" width="50">
        <text v="Lý do chi" e="Memo"/>
      </field>

      <field name="loai_ct" width="16" starColor="&EIT.StarColor.Require;">
        <text v="Loại phiếu chi" e="Voucher Type"/>
      </field>

      <field name="tk" width="16" starColor="&EIT.StarColor.Require;">
        <text v="Tài khoản có" e="Credit Account"/>
      </field>

      <field name="tk_no" width="16" starColor="&EIT.StarColor.Require;">
        <text v="Tài khoản nợ" e="Debit Account"/>
      </field>

      <field name="ma_kh_i" width="16" starColor="&EIT.StarColor.Sub;">
        <text v="Mã khách (Trong phần chi tiết)" e="Customer (Detail)"/>
      </field>
      <field name="ten_kh_i" width="32" afterField="ma_kh_i" textColor="&EIT.TextColor.Sub;">
        <text v="Tên khách (Trong phần chi tiết)" e="Customer Name (Detail)"/>
      </field>

      <field name="tien_nt" width="16">
        <text v="Tiền" e="Amount"/>
      </field>

      <field name="dien_giai_i" width="50">
        <text v="Diễn giải" e="Description"/>
      </field>

      <field name="ma_thue" width="16" starColor="&EIT.StarColor.Sub;">
        <text v="Mã thuế" e="Tax Code"/>
      </field>
      <field name="tk_thue_no" width="16" starColor="&EIT.StarColor.Sub;">
        <text v="Tài khoản thuế" e="Tax Account"/>
      </field>
      <field name="t_thue_nt" width="16">
        <text v="Thuế" e="Tax"/>
      </field>

      <field name="mau_bc" width="16" starColor="&EIT.StarColor.Sub;">
        <text v="Mẫu báo cáo" e="Report Form"/>
      </field>
      <field name="ma_tc" width="16" starColor="&EIT.StarColor.Sub;">
        <text v="Mã tính chất" e="Tax Type"/>
      </field>
      <field name="ma_mau_ct" width="16">
        <text v="Mẫu hóa đơn" e="Invoice Form"/>
      </field>
      <field name="so_ct0" width="16" starColor="&EIT.StarColor.Sub;">
        <text v="Số hóa đơn" e="Invoice Number"/>
      </field>
      <field name="so_seri0" width="16">
        <text v="Ký hiệu" e="Serial Number"/>
      </field>
      <field name="ngay_ct0" width="16" starColor="&EIT.StarColor.Sub;">
        <text v="Ngày hóa đơn" e="Invoice Date"/>
      </field>
      <field name="ma_kh_j" width="16">
        <text v="Mã nhà cung cấp" e="Supplier ID"/>
      </field>
      <field name="ten_kh_j" width="32" starColor="&EIT.StarColor.Sub;">
        <text v="Tên nhà cung cấp" e="Supplier Name"/>
      </field>
      <field name="dia_chi_j" width="32">
        <text v="Địa chỉ" e="Supplier Address"/>
      </field>
      <field name="ma_so_thue" width="16">
        <text v="Mã số thuế" e="Supplier Tax Code"/>
      </field>
      <field name="ten_vt" width="32">
        <text v="Tên hàng hóa - dịch vụ" e="Goods-Services"/>
      </field>

      <field name="ma_kh2" width="16" starColor="&EIT.StarColor.Sub;">
        <text v="Cục thuế" e="Tax Authority"/>
      </field>
      <field name="ghi_chu" width="50">
        <text v="Ghi chú" e="Note"/>
      </field>

      <field name="ma_vv" width="16">
        <text v="Vụ việc" e="Job"/>
      </field>
      <field name="ma_bp" width="16">
        <text v="Bộ phận" e="Department"/>
      </field>
      <field name="so_lsx" width="16">
        <text v="Lsx" e="MO"/>
      </field>
      <field name="ma_sp" width="16">
        <text v="Sản phẩm" e="Product"/>
      </field>
      <field name="ma_hd" width ="16">
        <text v="Hợp đồng" e="Contract"/>
      </field>
      <field name="ma_phi" width ="16">
        <text v="Phí" e="Expense"/>
      </field>
      <field name="ma_ku" width ="16">
        <text v="Khế ước" e="Loan Contract"/>
      </field>

      &EIT.NoteField;
    </fields>
  </template>

  <processing>
    <text>
      &CheckVoucherRightBeforeProcess;
      <![CDATA[
declare @q nvarchar(4000), @duplicate nvarchar(512), @locked nvarchar(512), @inputVATExists nvarchar(512), @inputVATDuplicate nvarchar(512), @field varchar(32), @wsID varchar(8), @voucherID varchar(8)
declare @master varchar(16), @detail varchar(16), @inquiry varchar(16), @general varchar(16), @tax varchar(16), @baseCurrency varchar(8), @baseExchangeRate numeric(24, 12), @taxProperty varchar(3), @voucherTemplate varchar(32), @taxPost char(1)
declare @user int, @admin bit, @r int, @m int, @y int, @max1 int, @max2 int, @count int, @roundAmount int, @checkInputVAT bit, @datetime0 char(21), @d0 datetime

select @d0 = getdate(), @datetime0 = convert(char(8), @d0, 112) + ' ' + convert(char(12), @d0, 114), @status = left(replace(@status, '''', ''), 1)
select @admin = @@admin, @user = @@userID, @master = 'm]]>&Detail;<![CDATA[$', @detail = 'd]]>&Detail;<![CDATA[$', @inquiry = 'i]]>&Detail;<![CDATA[$', @general = 'c]]>&Detail;<![CDATA[$000000', @tax = 'r]]>&Tax;<![CDATA[$', @voucherID = ']]>&Code;<![CDATA['

select @duplicate = case when @@language = 'v' then N']]>&s1;<![CDATA[ đã tồn tại.' else ']]>&s2;<![CDATA[ already exists.' end
select @inputVATExists = case when @@language = 'v' then N']]>&s3;<![CDATA[ đã được cập nhật trong phần thuế đầu vào.' else ']]>&s4;<![CDATA[ already exists in Input VAT data.' end
select @inputVATDuplicate = case when @@language = 'v' then N']]>&s3;<![CDATA[ trùng nhau trong chi tiết thuế đầu vào.' else ']]>&s4;<![CDATA[ already exists in Input VAT data.' end
select @locked = case when @@language = 'v' then N'Đã khóa số liệu, kiểm tra lại ngày chứng từ tại dòng <span class="Highlight">%s</span>.' else N'Data is locked, please check the date of voucher at row <span class="Highlight">%s</span>.' end

select @wsID = rtrim(val) from options where name = 'm_ws_id'
select @taxProperty = rtrim(val) from options where name = 'm_ma_tc_thue'
select @voucherTemplate = rtrim(val) from options where name = 'm_mau_ct_dv'
if not exists(select 1 from dmmauct where ma_mau_ct = @voucherTemplate) select @voucherTemplate = ''
select @baseCurrency = rtrim(val) from options where name = 'm_ma_nt0'
select @roundAmount = cast(rtrim(val) as int) from options where name = 'm_round_tien'
select @baseExchangeRate = ty_gia from (select top 1 ty_gia from dmtgnt where ma_nt = @baseCurrency and ngay_ct <= getdate() order by ngay_ct desc) a
if exists(select 1 from options where name = 'm_kthd_tdv' and val = '1') select @checkInputVAT = 1 else select @checkInputVAT = 0
select @taxPost = rtrim(val) from options where name = 'm_post_tax_yn'

select @max1 = character_maximum_length from information_schema.columns where table_name = @master + '000000' and column_name = 'so_ct'
select @max2 = character_maximum_length from information_schema.columns where table_name = @detail + '000000' and column_name = 'so_lsx'

-- Checking
]]>&CommandCheckTaxCodeImport;<![CDATA[
update @@table set so_ct = space(@max1 - len(rtrim(ltrim(so_ct)))) + rtrim(ltrim(so_ct))
]]>&ImportOverwriteData;<![CDATA[
if @check$Unit <> '1' begin
  if @$mode = 1 begin
    ]]>&StartErrorCount;<![CDATA[
    ]]>&InsertErrorTable;<![CDATA[ select 'so_ct', stt, 'C001' from @@table a join c]]>&Detail;<![CDATA[$000000 b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct]]>&ImportSqlWhere;&VoucherLogImportExtendKey;&ImportOverwriteCheckKey;<![CDATA[
    ]]>&EndErrorCount;<![CDATA[
  end else begin
    select @r = min(stt) from @@table a join c]]>&Detail;<![CDATA[$000000 b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct]]>&ImportSqlWhere;&VoucherLogImportExtendKey;&ImportOverwriteCheckKey;<![CDATA[
  end
end else begin
  if @$mode = 1 begin
    ]]>&StartErrorCount;<![CDATA[
    ]]>&InsertErrorTable;<![CDATA[ select 'so_ct', stt, 'C002' from @@table a join c]]>&Detail;<![CDATA[$000000 b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct and a.ma_dvcs = b.ma_dvcs]]>&ImportSqlWhere;&VoucherLogImportExtendKey;&ImportOverwriteCheckKey;<![CDATA[
    ]]>&EndErrorCount;<![CDATA[
  end else begin
    select @r = min(stt) from @@table a join c]]>&Detail;<![CDATA[$000000 b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct and a.ma_dvcs = b.ma_dvcs]]>&ImportSqlWhere;&VoucherLogImportExtendKey;&ImportOverwriteCheckKey;<![CDATA[
  end
end

if @r is not null and @$mode <> 1 begin
  if @check$Unit <> '1' select replace(replace(replace(@duplicate, '%s1', so_ct), '%s2', convert(varchar(12), cast(ngay_ct as smalldatetime), 103)), '%s3', @@delta + @r) as message from @@table where stt = @r
  else select replace(replace(replace(replace(@duplicate$Unit, '%s1', so_ct), '%s2', convert(varchar(12), cast(ngay_ct as smalldatetime), 103)), '%s3', rtrim(ma_dvcs)), '%s4', @@delta + @r) as message from @@table where stt = @r
  return
end

-- Update
update @@table set so_lsx = space(@max2 - len(ltrim(rtrim(so_lsx)))) + ltrim(rtrim(so_lsx))

select top 0 ma_dvcs, ngay_ct, so_ct into #unit from m]]>&Detail;<![CDATA[$000000
insert into #unit select ma_dvcs, ngay_ct, so_ct from @@table group by ma_dvcs, ngay_ct, so_ct

-- Locked Date
]]>&ImportLockedDateCheck;<![CDATA[

@@checking(1);

update @@table set mau_bc = '3' where ma_thue <> '' and loai_ct <> '2' and mau_bc = ''
update @@table set ma_tc = @taxProperty where ma_thue <> '' and loai_ct <> '2' and ma_tc = ''
update @@table set ma_mau_ct = @voucherTemplate where ma_thue <> '' and loai_ct <> '2' and ma_mau_ct = ''
update @@table set ma_kh_j = ma_kh where ma_thue <> '' and loai_ct <> '2' and ma_kh_j = ''
update @@table set tk_thue_no = case when a.tk_thue_no <> '' then a.tk_thue_no else b.tk_thue_no3 end
  from @@table a left join dmthue b on a.ma_thue = b.ma_thue where a.ma_thue <> '' and a.loai_ct <> '2'
update @@table set ten_kh_j = case when a.ten_kh_j <> '' then a.ten_kh_j else b.ten_kh end,
    dia_chi_j = case when a.dia_chi_j <> '' then a.dia_chi_j else b.dia_chi end,
    ma_so_thue = case when a.ma_so_thue <> '' then a.ma_so_thue else rtrim(b.ma_so_thue) end
  from @@table a left join dmkh b on a.ma_kh_j = b.ma_kh where a.ma_thue <> '' and a.loai_ct <> '2'

@@checking(2);

-- Check Input VAT
if @checkInputVAT = 1 begin
  if @$mode = 1 begin
    ]]>&StartErrorCount;<![CDATA[
    ]]>&InsertErrorTable;<![CDATA[ select 'so_ct0', a.stt, 'C004' from @@table a join @@table b on a.so_ct0 = b.so_ct0 and a.so_seri0 = b.so_seri0 and a.ngay_ct0 = b.ngay_ct0 and a.ma_so_thue = b.ma_so_thue
      where a.ngay_ct <> b.ngay_ct or a.so_ct <> b.so_ct group by a.ngay_ct, a.so_ct, a.stt
    ]]>&EndErrorCount;<![CDATA[
  end else begin
    select @r = min(a.stt) from @@table a join @@table b on a.so_ct0 = b.so_ct0 and a.so_seri0 = b.so_seri0 and a.ngay_ct0 = b.ngay_ct0 and a.ma_so_thue = b.ma_so_thue
      where a.ngay_ct <> b.ngay_ct or a.so_ct <> b.so_ct group by a.ngay_ct, a.so_ct
    if @r is not null begin
      select replace(replace(@inputVATDuplicate, '%s1', so_ct0), '%s2', @@delta + @r) as message from @@table where stt = @r
      return
    end
  end

  if @$mode = 1 begin
    ]]>&StartErrorCount;<![CDATA[
    ]]>&InsertErrorTable;<![CDATA[ select 'so_ct0', a.stt, 'C005' from @@table a join ctgt30 b with (index(c)) on a.so_ct0 = b.so_ct0 and a.so_seri0 = b.so_seri0 and a.ngay_ct0 = b.ngay_ct0 and a.ma_so_thue = b.ma_so_thue]]>&ImportSqlWhere;&VoucherLogImportExtendKey;&ImportOverwriteCheckKey;<![CDATA[ group by a.stt
    ]]>&EndErrorCount;<![CDATA[
  end else begin
    select @r = min(stt) from @@table a join ctgt30 b with (index(c)) on a.so_ct0 = b.so_ct0 and a.so_seri0 = b.so_seri0 and a.ngay_ct0 = b.ngay_ct0 and a.ma_so_thue = b.ma_so_thue]]>&ImportSqlWhere;&VoucherLogImportExtendKey;&ImportOverwriteCheckKey;<![CDATA[
    if @r is not null begin
      select replace(replace(@inputVATExists, '%s1', so_ct0), '%s2', @@delta + @r) as message from @@table where stt = @r
      return
    end
  end
end

@@checking(3);

]]>&ConfigDynamicImportChecking;<![CDATA[

]]>&ImportOverwriteChecking;&EndErrorMode;<![CDATA[

-- Gather
select top 0 stt_rec, ngay_ct, so_ct, cast(0 as int) as stt, identity(int, 1, 1) as id into #id from m]]>&Detail;<![CDATA[$000000
insert into #id(stt_rec, ngay_ct, so_ct, stt) select '', a.ngay_ct, a.so_ct, min(a.stt) from @@table a]]>&ImportOverwriteIdentiyDataCondition;<![CDATA[ group by a.ngay_ct, a.so_ct order by a.ngay_ct, a.so_ct

select identity(int, 1, 1) as id, cast(stt as int) as stt, convert(varchar(8), ngay_ct, 112) + so_ct as c, cast(0 as int) as ln into #ln from @@table order by ngay_ct, so_ct, stt
exec AI_ERP$App$UpdateLineNumber
create index i on #ln(stt)

select @count = count(*) from #id
exec AI_ERP$App$UpdateIdentityNumber @wsID, @voucherID, @count, @@userID
]]>&ImportOverwriteProcess;<![CDATA[

select top 0 stt_rec, stt_rec0, line_nbr, ngay_ct, so_ct, dien_giai, tk_no, tien_nt, tien, thue_nt, thue, ma_kh_i, ma_vv, ma_bp, so_lsx, ma_sp, ma_hd, ma_phi, ma_ku into #d]]>&Detail;<![CDATA[ from d]]>&Detail;<![CDATA[$000000
insert into #d]]>&Detail;<![CDATA[ select b.stt_rec, dbo.AI_ERP$Function$Voucher$GetRecordsGroup(i.ln), i.ln, a.ngay_ct, a.so_ct,
    a.dien_giai_i, a.tk_no, a.tien_nt, round(a.tien_nt * @baseExchangeRate, @roundAmount), a.t_thue_nt, round(a.t_thue_nt * @baseExchangeRate, @roundAmount),
    a.ma_kh_i, a.ma_vv, a.ma_bp, a.so_lsx, a.ma_sp, a.ma_hd, a.ma_phi, a.ma_ku
  from @@table a join #id b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct left join dmthue d on a.ma_thue = d.ma_thue join #ln i on a.stt = i.stt
  order by a.ngay_ct, a.so_ct, a.stt

select top 0 stt_rec, status, ma_dvcs, ngay_ct, so_ct, ma_kh, ong_ba, dia_chi, dien_giai, loai_ct, tk, t_tien_nt, t_tien, t_tt_nt, t_tt, t_thue_nt, t_thue into #m]]>&Detail;<![CDATA[ from m]]>&Detail;<![CDATA[$000000
insert into #m]]>&Detail;<![CDATA[ select b.stt_rec, @status, c.ma_dvcs, a.ngay_ct, a.so_ct, a.ma_kh, a.ong_ba, isnull(e.dia_chi, ''), a.dien_giai, a.loai_ct, a.tk, d.t_tien_nt, d.t_tien, d.t_tt_nt, d.t_tt, d.t_thue_nt, d.t_thue
  from @@table a
    join #id b on a.stt = b.stt
    join #unit c on a.ngay_ct = c.ngay_ct and a.so_ct = c.so_ct
    join (select stt_rec, sum(tien_nt) as t_tien_nt, sum(tien) as t_tien, sum(tien_nt + thue_nt) as t_tt_nt, sum(tien + thue) as t_tt, sum(thue_nt) as t_thue_nt, sum(thue) as t_thue from #d]]>&Detail;<![CDATA[ group by stt_rec) d on b.stt_rec = d.stt_rec
    left join dmkh e on a.ma_kh = e.ma_kh

select top 0 stt_rec, stt_rec0, line_nbr, ma_dvcs, loai_ct, ngay_ct, so_ct, ngay_ct0, so_ct0, so_seri0, ma_thue, thue_suat, t_tien_nt, t_tien, t_thue_nt, t_thue, tk_thue_no, tk_du
  , mau_bc, ma_tc, ma_mau_ct, ma_kh, ten_kh, dia_chi, ma_so_thue, ma_kh2, ten_vt, ghi_chu, ma_vv, ma_bp, so_lsx, ma_sp, ma_hd, ma_phi, ma_ku into #r]]>&Tax;<![CDATA[ from r]]>&Tax;<![CDATA[$000000
insert into #r]]>&Tax;<![CDATA[ select b.stt_rec, dbo.AI_ERP$Function$Voucher$GetRecordsGroup(i.ln), i.ln, a.ma_dvcs, a.loai_ct, a.ngay_ct, a.so_ct, a.ngay_ct0, a.so_ct0, a.so_seri0,
    a.ma_thue, isnull(d.thue_suat, 0), a.tien_nt, round(a.tien_nt * @baseExchangeRate, @roundAmount), a.t_thue_nt, round(a.t_thue_nt * @baseExchangeRate, @roundAmount),
    a.tk_thue_no, a.tk, a.mau_bc, a.ma_tc, a.ma_mau_ct, a.ma_kh_j, a.ten_kh_j, a.dia_chi_j, a.ma_so_thue, a.ma_kh2, a.ten_vt, a.ghi_chu,
    case when @taxPost = '1' then a.ma_vv else '' end,
    case when @taxPost = '1' then a.ma_bp else '' end,
    case when @taxPost = '1' then a.so_lsx else '' end,
    case when @taxPost = '1' then a.ma_sp else '' end,
    case when @taxPost = '1' then a.ma_hd else '' end,
    case when @taxPost = '1' then a.ma_phi else '' end,
    case when @taxPost = '1' then a.ma_ku else '' end
  from @@table a
    join #id b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct
    left join dmthue d on a.ma_thue = d.ma_thue
    join #ln i on a.stt = i.stt
  where a.loai_ct <> '2' and a.ma_thue <> ''
  order by a.ngay_ct, a.so_ct, a.stt

select top 0 stt_rec, ngay_ct, so_ct, ma_dvcs, status, user_id0, c$, m$, d$, identity(int, 1, 1) as id into #i]]>&Detail;<![CDATA[ from i]]>&Detail;<![CDATA[$000000
insert into #i]]>&Detail;<![CDATA[ select stt_rec, ngay_ct, so_ct, ma_dvcs, @status, @user, convert(varchar(12), ngay_ct, 112) + so_ct + stt_rec,
  '#10$' + rtrim(ma_kh) + '#20$' + rtrim(tk) + '#30$' + rtrim(@baseCurrency), '' from #m]]>&Detail;<![CDATA[

select @q = dbo.AI_ERP$Function$Update$Inquiry('#i]]>&Detail;<![CDATA[', '#d]]>&Detail;<![CDATA[', 'd$', 'tk_no', '#10$', 'stt_rec', default, default, default, default, default)
exec sp_executesql @q

-- Insert
declare @p varchar(32), @insertKey varchar(128), @masterTable varchar(32), @detailTable varchar(32), @inquiryTable varchar(32), @taxTable varchar(32)

select distinct month(ngay_ct) as m, year(ngay_ct) as y into #k from #id
select @r = min(y * 12 + m) from #k

while @r is not null begin
  select @m = m, @y = y from #k where y * 12 + m = @r
  select @p = rtrim(@y) + replace(str(@m, 2), ' ', '0'), @insertKey = 'month(ngay_ct) = ' + rtrim(@m) + ' and year(ngay_ct) = ' + rtrim(@y)
  select @masterTable = @master + @p, @detailTable = @detail + @p, @taxTable = @tax + @p, @inquiryTable = @inquiry + @p

  select @q = @@inserting(master, @masterTable, @insertKey);
  exec sp_executesql @q

  select @q = @@inserting(detail, @detailTable, @insertKey);
  exec sp_executesql @q

  if exists(select 1 from #r]]>&Tax;<![CDATA[) begin
    select @q = @@inserting(tax, @taxTable, @insertKey);
    exec sp_executesql @q
  end

  select @q = @@inserting(inquiry, @inquiryTable, @insertKey);
  exec sp_executesql @q
  ]]>&ImportOverwriteInsertingByPart;<![CDATA[
  select @r = min(y * 12 + m) from #k where y * 12 + m > @r
end

@@inserting(general);
]]>&ImportOverwriteInserting;<![CDATA[

if @status = '1' begin
  declare @fieldSelect varchar(4000)
  select @fieldSelect = 'stt_rec, ma_dvcs, ''' + @voucherID + ''' , ngay_ct, so_ct, t_tt_nt , t_tt, ''' + @baseCurrency + ''',' + rtrim(@baseExchangeRate) + ', dien_giai,''' + @datetime0 + ''',' + rtrim(@user)
  exec AI_ERP$Voucher$Import$PostLater '#m]]>&Detail;<![CDATA[', @voucherID, @fieldSelect, ''
end

if @status <> '0' begin
  if exists(select 1 from #r]]>&Tax;<![CDATA[) begin
    @@inserting(inputTax);
  end

  select *, @voucherID as ma_ct, @baseCurrency as ma_nt, @baseExchangeRate as ty_gia, @datetime0 as datetime0, @datetime0 as datetime2, @user as user_id0, @user as user_id2 into #malloc from #m]]>&Detail;<![CDATA[
  exec AI_ERP$Voucher$Import$Allocation @voucherID, '', '#malloc', '#d]]>&Detail;<![CDATA[', 't_tien_nt', 't_tien', 'tien_nt', 'tien', 'cttt60', 'ma_kh_i', '', 1, 'tk_no'
end

if @status = '2' begin
  declare @glGroup varchar(128), @glAcctField varchar(128), @glAcctFieldRef varchar(128), @glAmountField varchar(128), @glFCAmountField varchar(128), @glKey varchar(512), @glNoAccList varchar(128), @glNoAccListRef varchar(128), @glGroups varchar(128)
  declare @External nvarchar(4000), @Statement nvarchar(4000), @Numeric varchar(4000), @String varchar(4000), @maxLineNumber int

  select @glAcctField = 'tk_no', @glAcctFieldRef = 'tk', @glAmountField = 'tien', @glFCAmountField = 'tien_nt', @glKey = '1=1', @glNoAccList = '0', @glNoAccListRef = '0', @glGroups = '1'
  select @Numeric = 'nam, ky, sl_td1, sl_td2, sl_td3, s4, s5, s6', @String = 'ma_nk, so_lo, ma_gd, so_dh, gc_td1, gc_td2, gc_td3', @External = 'ong_ba = b.ong_ba, dien_giai_h = b.dien_giai, datetime0 = ''' + @datetime0 + ''', datetime2 = ''' + @datetime0 + ''', user_id0 = ' + rtrim(@user) + ', user_id2 = ' + rtrim(@user), @Statement = ''
  select @glGroup = rtrim(groupby) from @@sysDatabaseName..voucherinfo where ma_ct = @voucherID

  select a.*, b.loai_ct, b.ma_kh, b.ma_kh as ma_kh_ref into #dGL0 from #d]]>&Detail;<![CDATA[ a join #m]]>&Detail;<![CDATA[ b on a.stt_rec = b.stt_rec
  update #dGL0 set ma_kh = ma_kh_i, ma_kh_ref = ma_kh_i where loai_ct = '3'

  select *, ma_kh as ma_kh_ref, cast('' as nvarchar(512)) as dien_giai into #glVAT from #r]]>&Tax;<![CDATA[ where t_thue_nt + t_thue <> 0
  update #glVAT set ma_kh2 = '' where tk_thue_no in (select tk from dmtk where tk_cn = 0)
  update #glVAT set loai_ct = b.loai_ct, ma_kh = case when a.ma_kh2 <> '' then a.ma_kh2 else b.ma_kh end, ma_kh_ref = b.ma_kh, dien_giai = b.dien_giai from #glVAT a join #m]]>&Detail;<![CDATA[ b on a.stt_rec = b.stt_rec

  select @maxLineNumber = max(line_nbr) from #dGL0
  select @maxLineNumber = isnull(@maxLineNumber, 0)
  if @taxPost = '0' begin
    insert into #dGL0 (stt_rec, stt_rec0, line_nbr, ngay_ct, loai_ct, so_ct, dien_giai, tk_no, tien_nt, tien, ma_kh, ma_kh_ref, ma_vv, ma_bp, so_lsx, ma_sp, ma_hd, ma_phi, ma_ku)
      select stt_rec, max(stt_rec0), @maxLineNumber + max(line_nbr), max(ngay_ct), max(loai_ct), max(so_ct), max(dien_giai), tk_thue_no, sum(t_thue_nt), sum(t_thue), ma_kh, ma_kh_ref, '', '', '', '', '', '', ''
        from #glVAT group by stt_rec, ma_kh, ma_kh_ref, tk_thue_no
  end else begin
    insert into #dGL0 (stt_rec, stt_rec0, line_nbr, ngay_ct, loai_ct, so_ct, dien_giai, tk_no, tien_nt, tien, ma_kh, ma_kh_ref, ma_vv, ma_bp, so_lsx, ma_sp, ma_hd, ma_phi, ma_ku)
      select stt_rec, max(stt_rec0), @maxLineNumber + max(line_nbr), max(ngay_ct), max(loai_ct), max(so_ct), max(dien_giai), tk_thue_no, sum(t_thue_nt), sum(t_thue), ma_kh, ma_kh_ref, ma_vv, ma_bp, so_lsx, ma_sp, ma_hd, ma_phi, ma_ku
        from #glVAT group by stt_rec, ma_kh, ma_kh_ref, tk_thue_no, ma_vv, ma_bp, so_lsx, ma_sp, ma_hd, ma_phi, ma_ku
  end

  select a.*, b.tk, b.ma_dvcs, @voucherID as ma_ct, b.ngay_ct as ngay_lct, rtrim(@baseCurrency) as ma_nt, cast(1 as numeric(24, 12)) as ty_gia, a.dien_giai as dien_giai_h into #dGL from #dGL0 a join #m]]>&Detail;<![CDATA[ b on a.stt_rec = b.stt_rec

  exec AI_ERP$Voucher$Import$PostGL '#m]]>&Detail;<![CDATA[', '#dGL', @voucherID, @glAcctField, @glAcctFieldRef, @glAmountField, @glFCAmountField, @glKey, @glNoAccList, @glNoAccListRef, @glGroup, @Numeric, @String, @External, @Statement, '#k', @glGroups
end
]]>
    </text>
  </processing>

</import>