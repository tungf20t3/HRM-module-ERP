<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE import [
  <!ENTITY CheckVoucherRightBeforeProcess SYSTEM "Include\CheckVoucherRightBeforeProcess.txt">
  <!ENTITY SVTranFields SYSTEM "Include\SVTranFields.txt">
  <!ENTITY SVTranFieldsCompact SYSTEM "Include\SVTranFieldsCompact.txt">
  <!ENTITY SVTranFieldsLocation SYSTEM "Include\SVTranFieldsLocation.txt">
  <!ENTITY SVTranFieldsLot SYSTEM "Include\SVTranFieldsLot.txt">

  <!ENTITY ControlLocationLotLoading SYSTEM "..\..\Include\Command\ControlLocationLotLoading.txt">
  <!ENTITY Detail "81">
  <!ENTITY Code "HDA">
  <!ENTITY TransferID "SVTran">
  <!ENTITY And "&#13;">

  <!ENTITY Error "
if @r is not null begin
  select '' as message, @field as field, @r as record
  return
end
">

  <!ENTITY LockedDate "
if @r is not null begin
  select replace(@locked, '&#37;s', @@delta + @r) as message
  return
end
">
  <!ENTITY SiteRight "
exec AI_ERP$System$CheckImportSiteRights '@@table', 'ma_kho', 'stt', @user, @admin, @r output, default, @$mode, @$errorCount output
if @$mode = 1 begin
  if @$errorCount = 0 begin select * from #errorTable order by id; return end;
end else begin
  &Error;
end">

  <!ENTITY % Import.Unite.SVTran SYSTEM "..\..\Include\Import.Unite.SVTran.ent">
  %Import.Unite.SVTran;

  <!ENTITY % VoucherGoodsType.SVTran SYSTEM "..\..\Include\VoucherGoodsType.SVTran">
  %VoucherGoodsType.SVTran;
  <!ENTITY % VoucherGoodsType SYSTEM "..\..\Include\VoucherGoodsType.ent">
  %VoucherGoodsType;

  <!ENTITY % Promotion SYSTEM "..\..\Include\Promotion.ent">
  %Promotion;

  <!ENTITY % ImportTax SYSTEM "..\..\Include\ImportTax.ent">
  %ImportTax;

  <!ENTITY % Authentication SYSTEM "..\..\Include\Authentication.ent">
  %Authentication;

  <!ENTITY % DiscountRate SYSTEM "..\..\Include\DiscountRate.ent">
  %DiscountRate;
  <!ENTITY FileName.ext "SVDetail">
  <!ENTITY FileNameAlias.ext "a">

  <!ENTITY % MasterTaxRound SYSTEM "..\..\Include\MasterTaxRound.ent">
  %MasterTaxRound;

  <!ENTITY % DetailTax SYSTEM "..\..\Include\XML\DetailTaxImportSVTran.ent">
  %DetailTax;

  <!ENTITY % VoucherDeleteLog SYSTEM "..\..\Include\VoucherDeleteLog.ent">
  %VoucherDeleteLog;

  <!ENTITY % ConfigDynamicEvents SYSTEM "..\..\Include\ConfigImportDynamicEvents.ent">
  %ConfigDynamicEvents;
  <!ENTITY ConfigDynamicVoucherType "2">
  <!ENTITY ConfigDynamicType "1">

  <!ENTITY % ImportErrorMode SYSTEM "..\..\Include\ImportErrorMode.ent">
  %ImportErrorMode;

  <!ENTITY % EnvironmentTax SYSTEM "..\..\Include\EnvironmentTax.ent">
  %EnvironmentTax;

  <!ENTITY % ExportImportTemplate SYSTEM "..\..\Include\ExportImportTemplate.ent">
  %ExportImportTemplate;
  <!ENTITY ExportQueryStaticFile "
if @filename is null begin
  if @@language = 'v' select @filename = case when @compactMode = 0 then '&FileName.v.ext;' else '&FileName.Compact.v.ext;' end
  else select @filename = case when @compactMode = 0 then '&FileName.e.ext;' else '&FileName.Compact.e.ext;' end
  if isnull(@xSplit, 0) = 1 begin
    select @filename = case
      when @xLocation = 0 and @xLot = 0 then case when @@language = 'v' then '&FileName.Compact.v.ext;' else '&FileName.Compact.e.ext;' end
        when @xLocation = 1 and @xLot = 0 then case when @@language = 'v' then '&FileName.Location.v.ext;' else '&FileName.Location.e.ext;' end
        when @xLocation = 0 and @xLot = 1 then case when @@language = 'v' then '&FileName.Lot.v.ext;' else '&FileName.Lot.e.ext;' end
        when @xLocation = 1 and @xLot = 1 then case when @@language = 'v' then '&FileName.v.ext;' else '&FileName.e.ext;' end
      end
  end
end">

  <!ENTITY % Tiny.External SYSTEM "..\..\Include\Tiny.External.ent">
  %Tiny.External;
  %Tiny.External.SVTran;

  <!ENTITY % ImportSqlCondition SYSTEM "..\..\Include\ImportSqlCondition.ent">
  %ImportSqlCondition;

  <!ENTITY % ImportOverwrite SYSTEM "..\..\Include\ImportOverwriteVoucher.ent">
  %ImportOverwrite;
  <!ENTITY ImportOverwriteMainTable "m&Detail;$$partition">
  <!ENTITY ImportOverwriteLogTable "o&Detail;$000000">
  <!ENTITY % ImportOverwriteCommand SYSTEM "..\..\Include\ImportOverWriteVoucher.SVTran">
  %ImportOverwriteCommand;

  <!ENTITY % UnitUpload SYSTEM "..\..\Include\UnitUpload.ent">
  %UnitUpload;
]>

<import xmlns="urn:schemas-ai-erp:data-import">
  <setting>
    <type value="Voucher"/>
    <startRow value="6"/>
    <maxFileSize value="10"/>
    <uploadTimeOut value="120"/>
    <importRecordTimeout value="1740"/>
    <allowFileExtension value="^(.XLSX)$"/>
    <onProcessFail value="parent.on$SVTranImportForm$Fail(this.frameElement)"/>
    <onProcessComplete value="parent.on$SVTranImportForm$Complete(this.frameElement)"/>
    <uploadContentType value="application/ms-excel;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" />
    <baseTable value="m&Detail;$000000, d&Detail;$000000"/>
    <dependence value="m&Detail;$000000, d&Detail;$000000, i&Detail;$000000, c&Detail;$000000" alias="m, d, i, g"/>
    <listTable value="#m&Detail;, #d&Detail;, #i&Detail;, #i&Detail;"/>
    <alias value="master, detail, inquiry, general"/>

    &UploadModeProcess;
  </setting>

  <variable>
    <var id="C001">
      <header v="Chứng từ số và ngày đã tồn tại." e="The voucher number and dated already exists." />
    </var>
    <var id="C002">
      <header v="Chứng từ số, ngày và đơn vị đã tồn tại." e="The voucher number, dated and unit already exists." />
    </var>
    <var id="C003">
      <header v="Đã khóa số liệu, kiểm tra lại ngày chứng từ." e="Data is locked, please check the date of voucher." />
    </var>
    &ImportOverwriteVariable;
    &ImportLockedDateVariable;
  </variable>

  <query>
    <command>
      <text>
        &Tiny.External.Import.Command;
        &Unite.Command;
      </text>
    </command>

    <views>
      <fields identity="true" name="stt" index="1">
        &SVTranFieldsCompact;
      </fields>
      <fields identity="true" name="stt" index="2">
        &SVTranFieldsLocation;
      </fields>
      <fields identity="true" name="stt" index="3">
        &SVTranFieldsLot;
      </fields>

      <fields identity="true" name="stt" index="4">
        &SVTranFields.Compact.ext;
      </fields>
      <fields identity="true" name="stt" index="5">
        &SVTranFields.Location.ext;
      </fields>
      <fields identity="true" name="stt" index="6">
        &SVTranFields.Lot.ext;
      </fields>
      <fields identity="true" name="stt" index="7">
        &SVTranFields.ext;
      </fields>

      <fields identity="true" name="stt" index="8">
        &SVTranFields.Compact.ext;
      </fields>
      <fields identity="true" name="stt" index="9">
        &SVTranFields.Location.ext;
      </fields>
      <fields identity="true" name="stt" index="10">
        &SVTranFields.Lot.ext;
      </fields>
      <fields identity="true" name="stt" index="11">
        &SVTranFields.ext;
      </fields>

      <fields identity="true" name="stt" index="12">
        &SVTranFields.ext.tax;
      </fields>
      <fields identity="true" name="stt" index="13">
        &SVTranFields.Compact.ext.tax;
      </fields>

      &SVTranFields.f;
      &Tiny.External.Import.View.SVTran;
    </views>
  </query>

  <fields identity="true" name="stt">
    &SVTranFields;
  </fields>

  <template>
    <setting>
      <downloadFile>
        <text v="Hóa đơn bán hàng" e="Sales Invoice"/>
      </downloadFile>
    </setting>
    <fields row="5">
      <field name="ma_kh" width ="16" starColor="&EIT.StarColor.Require;">
        <text v="Mã khách" e="Customer"/>
      </field>
      <field name="ten_kh" width ="32" afterField="ma_kh" textColor="&EIT.TextColor.Sub;">
        <text v="Tên khách hàng" e="Customer Name"/>
      </field>
      <field name="ngay_ct" width ="16" starColor="&EIT.StarColor.Require;">
        <text v="Ngày" e="Invoice Date"/>
      </field>
      <field name="so_ct" width ="16" starColor="&EIT.StarColor.Require;">
        <text v="Số hóa đơn" e="Invoice Number"/>
      </field>
      <field name="so_seri" width ="16" starColor="&EIT.StarColor.Require;">
        <text v="Ký hiệu" e="Serial Number"/>
      </field>
      <field name="dien_giai" width ="50">
        <text v="Diễn giải" e="Memo"/>
      </field>
      <field name="ma_nvbh" width ="16">
        <text v="Nhân viên bán" e="Sales Employee ID"/>
      </field>
      <field name="ten_nvbh" width ="32" afterField="ma_nvbh" textColor="&EIT.TextColor.Sub;">
        <text v="Tên nhân viên bán" e="Sales Employee Name"/>
      </field>
      <field name="ma_vt" width ="16" starColor="&EIT.StarColor.Require;">
        <text v="Mã hàng" e="Item Code"/>
      </field>
      <field name="ten_vt" width ="32" afterField="ma_vt" textColor="&EIT.TextColor.Sub;">
        <text v="Tên mặt hàng" e="Item Description"/>
      </field>
      <field name="dvt" width ="10">
        <text v="Đvt" e="UOM"/>
      </field>
      <field name="ma_kho" width ="16" starColor="&EIT.StarColor.Sub;">
        <text v="Mã kho" e="Site"/>
      </field>
      <field name="ma_vi_tri" width ="16" starColor="&EIT.StarColor.Sub;">
        <text v="Mã vị trí" e="Location"/>
      </field>
      <field name="ma_lo" width ="16" starColor="&EIT.StarColor.Sub;">
        <text v="Mã lô" e="Lot"/>
      </field>
      <field name="so_luong" width ="16">
        <text v="Số lượng" e="Quantity"/>
      </field>
      <field name="gia_nt2" width ="16">
        <text v="Giá bán" e="Sales Price"/>
      </field>
      <field name="tien_nt2" width ="16">
        <text v="Tiền hàng" e="Amount"/>
      </field>
      <field name="tl_ck" width ="16">
        <text v="Tỷ lệ chiết khấu (%)" e="Discount Rate (%)"/>
      </field>
      <field name="ck_nt" width ="16">
        <text v="Chiết khấu" e="Discount Amount"/>
      </field>
      <field name="ma_nt" width ="16">
        <text v="Mã nt" e="Currency"/>
      </field>
      <field name="thue_nt" width ="16">
        <text v="Thuế" e="Tax Amount"/>
      </field>
      <field name="ty_gia" width ="16">
        <text v="Tỷ giá" e="Ex. Rate"/>
      </field>
      <field name="ma_thue" width ="16" starColor="&EIT.StarColor.Require;">
        <text v="Mã thuế" e="Tax Code"/>
      </field>
      <field name="tk" width ="16" starColor="&EIT.StarColor.Sub;">
        <text v="Tk nợ" e="Debit Account"/>
      </field>
      <field name="tk_dt" width ="16" starColor="&EIT.StarColor.Sub;">
        <text v="Tk doanh thu" e="Sales Account"/>
      </field>
      <field name="tk_ck" width ="16" starColor="&EIT.StarColor.Sub;">
        <text v="Tk chiết khấu" e="Discount Account"/>
      </field>
      <field name="tk_gv" width ="16" starColor="&EIT.StarColor.Sub;">
        <text v="Tk giá vốn" e="COGS Account"/>
      </field>
      <field name="tk_thue_co" width ="16" starColor="&EIT.StarColor.Sub;">
        <text v="Tk thuế có" e="Credit Tax Account"/>
      </field>
      <field name="loai" width ="10">
        <text v="Loại" e="Type"/>
      </field>
      <field name="km_yn" width ="10">
        <text v="Khuyến mãi" e="Promotion"/>
      </field>
      <field name="tk_cpbh" width ="16" starColor="&EIT.StarColor.Sub;">
        <text v="Tk chi phí khuyến mãi" e="Promotion Expense Account"/>
      </field>
      <field name="ma_kh2" width ="16" starColor="&EIT.StarColor.Sub;">
        <text v="Cục thuế" e="Tax Authority"/>
      </field>
      <field name="ma_tt" width ="16">
        <text v="Mã thanh toán" e="Credit Term"/>
      </field>
      <field name="px_gia_dd" width ="12">
        <text v="Giá đích danh" e="Specific Cost"/>
      </field>
      <field name="gia_nt" width ="16">
        <text v="Giá vốn" e="Unit COGS"/>
      </field>
      <field name="tien_nt" width ="16">
        <text v="Tiền vốn" e="COGS Amount"/>
      </field>
      <field name="ma_vv" width ="16">
        <text v="Vụ việc" e="Job"/>
      </field>
      <field name="ma_bp" width ="16">
        <text v="Bộ phận" e="Department"/>
      </field>
      <field name="so_lsx" width ="16">
        <text v="Lsx" e="MO"/>
      </field>
      <field name="ma_sp" width ="16">
        <text v="Sản phẩm" e="Product"/>
      </field>
      <field name="ma_hd" width ="16">
        <text v="Hợp đồng" e="Contract"/>
      </field>
      <field name="ma_phi" width ="16">
        <text v="Phí" e="Expense"/>
      </field>
      <field name="ma_ku" width ="16">
        <text v="Khế ước" e="Loan Contract"/>
      </field>
      &EIT.NoteField;
    </fields>
  </template>

  <processing>
    <text>
      &CheckVoucherRightBeforeProcess;
      <![CDATA[
declare @q nvarchar(4000), @duplicate nvarchar(512), @locked nvarchar(512), @field varchar(32), @wsID varchar(8), @voucherID varchar(8), @message nvarchar(4000)
declare @master varchar(16), @detail varchar(16), @inquiry varchar(16), @general varchar(16), @baseCurrency varchar(8), @datetime0 char(21), @d0 datetime
declare @user int, @admin bit, @r int, @m int, @y int, @max1 int, @max2 int, @count int, @roundPrice int, @roundAmount int, @roundFAmount int

select @d0 = getdate(), @status = left(replace(@status, '''', '') , 1)
select @datetime0 = convert(char(8), @d0, 112) + ' ' + convert(char(12), @d0, 114)
select @admin = @@admin, @user = @@userID, @master = 'm]]>&Detail;<![CDATA[$', @detail = 'd]]>&Detail;<![CDATA[$', @inquiry = 'i]]>&Detail;<![CDATA[$', @general = 'c]]>&Detail;<![CDATA[$000000', @voucherID = ']]>&Code;<![CDATA['

select @locked = case when @@language = 'v' then N'Đã khóa số liệu, kiểm tra lại ngày chứng từ tại dòng <span class="Highlight">%s</span>.' else N'Data is locked, please check the date of voucher at row <span class="Highlight">%s</span>.' end
select @duplicate = case when @@language = 'v' then N'Chứng từ số <span class="Highlight">%s1</span> ngày <span class="Highlight">%s2</span> tại dòng <span class="Highlight">%s3</span> đã tồn tại.'
  else 'The voucher number <span class="Highlight">%s1</span> dated <span class="Highlight">%s2</span> at row <span class="Highlight">%s3</span> already exists.' end

select @wsID = rtrim(val) from options where name = 'm_ws_id'
select @baseCurrency = rtrim(val) from options where name = 'm_ma_nt0'
select @roundPrice = cast(rtrim(val) as int) from options where name = 'm_round_gia'
select @roundAmount = cast(rtrim(val) as int) from options where name = 'm_round_tien'
select @roundFAmount = cast(rtrim(val) as int) from options where name = 'm_round_tien_nt'

select @max1 = character_maximum_length from information_schema.columns where table_name = @master + '000000' and column_name = 'so_ct'
select @max2 = character_maximum_length from information_schema.columns where table_name = @detail + '000000' and column_name = 'so_lsx'

-- Checking
update @@table set so_ct = space(@max1 - len(rtrim(ltrim(so_ct)))) + rtrim(ltrim(so_ct))
]]>&ImportOverwriteData;<![CDATA[

if @check$Unit <> '1' begin
  if @$mode = 1 begin
    ]]>&StartErrorCount;<![CDATA[
    ]]>&InsertErrorTable;<![CDATA[ select 'so_ct', stt, 'C001' from @@table a join c]]>&Detail;<![CDATA[$000000 b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct]]>&ImportSqlWhere;&VoucherLogImportExtendKey;&ImportOverwriteCheckKey;<![CDATA[
    ]]>&EndErrorCount;<![CDATA[
  end else begin
    select @r = min(stt) from @@table a join c]]>&Detail;<![CDATA[$000000 b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct]]>&ImportSqlWhere;&VoucherLogImportExtendKey;&ImportOverwriteCheckKey;<![CDATA[
    if @r is not null begin
      select replace(replace(replace(@duplicate, '%s1', so_ct), '%s2', convert(varchar(12), cast(ngay_ct as smalldatetime), 103)), '%s3', @@delta + @r) as message from @@table where stt = @r
      return
    end
  end
end

]]>&SVTranImportTaxUpdate;<![CDATA[

-- Update
update @@table set so_lsx = space(@max2 - len(ltrim(rtrim(so_lsx)))) + ltrim(rtrim(so_lsx)),
    dvt = case when a.dvt <> '' then a.dvt else b.dvt end,
    ]]>&UnitUpload.General;<![CDATA[
    ma_nt = case when a.ma_nt <> '' then a.ma_nt else @baseCurrency end,
    tk = case when a.tk <> '' then a.tk else c.tk end,
    tk_dt = case when a.tk_dt <> '' then a.tk_dt else ]]>&PromotionUpdateSalesAccount;<![CDATA[end,
    tk_gv = case when a.tk_gv <> '' then a.tk_gv else ]]>&PromotionUpdateCOGSAccount;<![CDATA[end,
    tk_thue_co = case when a.tk_thue_co <> '' then a.tk_thue_co else d.tk_thue_co end,
    ma_tt = case when a.ma_tt <> '' then a.ma_tt else c.ma_tt end
    ]]>&PromotionUpdateAccount;<![CDATA[
  from @@table a
    left join dmvt b on a.ma_vt = b.ma_vt
    left join dmkh c on a.ma_kh = c.ma_kh
    left join dmthue d on a.ma_thue = d.ma_thue

select top 0 ma_dvcs, ngay_ct, so_ct, cast(0 as int) as id into #unit from m]]>&Detail;<![CDATA[$000000
insert into #unit select b.ma_dvcs, a.ngay_ct, a.so_ct, min(a.stt) from @@table a join dmkho b on a.ma_kho = b.ma_kho group by b.ma_dvcs, a.ngay_ct, a.so_ct

-- Checking
if @check$Unit = '1' begin
  if @$mode = 1 begin
    select b.ma_dvcs, a.ngay_ct, a.so_ct, a.stt as id into #unitmode from @@table a join dmkho b on a.ma_kho = b.ma_kho
    ]]>&StartErrorCount;<![CDATA[
    ]]>&InsertErrorTable;<![CDATA[ select 'so_ct', id, 'C002' from #unitmode a join c]]>&Detail;<![CDATA[$000000 b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct and a.ma_dvcs = b.ma_dvcs]]>&ImportSqlWhere;&VoucherLogImportExtendKey;&ImportOverwriteCheckKey;<![CDATA[
    ]]>&EndErrorCount;<![CDATA[
  end else begin
    select @r = min(id) from #unit a join c]]>&Detail;<![CDATA[$000000 b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct and a.ma_dvcs = b.ma_dvcs]]>&ImportSqlWhere;&VoucherLogImportExtendKey;&ImportOverwriteCheckKey;<![CDATA[
    if @r is not null begin
      select replace(replace(replace(replace(@duplicate$Unit, '%s1', so_ct), '%s2', convert(varchar(12), cast(ngay_ct as smalldatetime), 103)), '%s3', rtrim(ma_dvcs)), '%s4', @@delta + @r) as message from #unit where id = @r
      return
    end
  end
end

@@checking(1);

-- Locked Date
]]>&ImportLockedDateCheck;<![CDATA[

@@checking(2);

if @$mode = 1 begin
  ]]>&StartErrorCount;<![CDATA[
  ]]>&InsertErrorTable;<![CDATA[ select 'dvt', stt, '00001' from @@table a left join vdmvtqddvt b on a.dvt = b.dvt and (a.ma_vt = b.ma_vt or b.ma_vt = '*') left join dmvt c on a.ma_vt = c.ma_vt and a.dvt = c.dvt where b.dvt is null and c.dvt is null
  ]]>&w1;<![CDATA['dvt']]>&w2;<![CDATA[stt]]>&w3;<![CDATA['00001']]>&w4;<![CDATA[
  ]]>&EndErrorCount;<![CDATA[
end else begin
  select @field = 'dvt', @r = min(stt) from @@table a left join vdmvtqddvt b on a.dvt = b.dvt and (a.ma_vt = b.ma_vt or b.ma_vt = '*') left join dmvt c on a.ma_vt = c.ma_vt and a.dvt = c.dvt where b.dvt is null and c.dvt is null]]>&Error;<![CDATA[
end

select @field = 'ma_kho'
if @admin <> 1 begin
  if @$mode = 1 begin
    ]]>&StartErrorCount;<![CDATA[
    ]]>&InsertErrorTable;<![CDATA[ select @field, stt, '00001' from @@table a where not exists(select 1 from dmkho c where a.ma_kho = c.ma_kho and c.ma_dvcs in (select distinct ma_dvcs from sysunitrights where user_id = @user and r_new = 1))
    ]]>&w1;<![CDATA[@field]]>&w2;<![CDATA[stt]]>&w3;<![CDATA['00001']]>&w4;<![CDATA[
    ]]>&EndErrorCount;<![CDATA[
  end else begin
    select @r = min(stt) from @@table a where not exists(select 1 from dmkho c where a.ma_kho = c.ma_kho and c.ma_dvcs in (select distinct ma_dvcs from sysunitrights where user_id = @user and r_new = 1))]]>&Error;<![CDATA[
  end
  ]]>&SiteRight;<![CDATA[
end

@@checking(3);

]]>&ConfigDynamicImportChecking;<![CDATA[

]]>&ImportOverwriteChecking;&EndErrorMode;<![CDATA[

-- Gather
select top 0 stt_rec, ngay_ct, so_ct, cast(0 as int) as stt, identity(int, 1, 1) as id into #id from m]]>&Detail;<![CDATA[$000000
insert into #id(stt_rec, ngay_ct, so_ct, stt) select '', a.ngay_ct, a.so_ct, min(a.stt) from @@table a]]>&ImportOverwriteIdentiyDataCondition;<![CDATA[ group by a.ngay_ct, a.so_ct order by a.ngay_ct, a.so_ct

select identity(int, 1, 1) as id, cast(stt as int) as stt, convert(varchar(8), ngay_ct, 112) + so_ct as c, cast(0 as int) as ln into #ln from @@table order by ngay_ct, so_ct, stt
exec AI_ERP$App$UpdateLineNumber
create index i on #ln(stt)

select @count = count(*) from #id
exec AI_ERP$App$UpdateIdentityNumber @wsID, @voucherID, @count, @@userID
]]>&ImportOverwriteProcess;<![CDATA[

select top 0 stt_rec, stt_rec0, line_nbr, ngay_ct, so_ct, ma_vt, ma_kho, ma_vi_tri, ma_lo, dvt, cast(0 as bit) as nhieu_dvt, he_so, so_luong, gia_nt2, gia2, tien_nt2, tien2]]>&ListFieldDetail.ext;&PromotionFieldDetail;&VoucherGoodsTypeImportFieldDetail;<![CDATA[,
  tk_vt, tk_gv, tk_dt, ma_vv, ma_bp, so_lsx, ma_sp, ma_hd, ma_phi, ma_ku ]]>&DetailTaxDetailStructure;<![CDATA[ into #d]]>&Detail;<![CDATA[ from d]]>&Detail;<![CDATA[$000000

insert into #d]]>&Detail;<![CDATA[ select b.stt_rec, dbo.AI_ERP$Function$Voucher$GetRecordsGroup(i.ln), i.ln, a.ngay_ct, a.so_ct, a.ma_vt, a.ma_kho, a.ma_vi_tri, a.ma_lo,
    a.dvt, c.nhieu_dvt, 1, a.so_luong, a.gia_nt2, round(a.gia_nt2 * a.ty_gia, @roundPrice), a.tien_nt2, round(a.tien_nt2 * a.ty_gia, @roundAmount)]]>&ListFieldDetailValues.ext;&PromotionFieldDetailInsert;&VoucherGoodsTypeImportFieldDetailInsert;<![CDATA[,
    c.tk_vt, a.tk_gv, a.tk_dt, a.ma_vv, a.ma_bp, a.so_lsx, a.ma_sp, a.ma_hd, a.ma_phi, a.ma_ku ]]>&DetailTaxDetailValue;<![CDATA[
  from @@table a
    join #id b on a.ngay_ct = b.ngay_ct and a.so_ct = b.so_ct
    left join dmvt c on a.ma_vt = c.ma_vt
    left join dmthue d on a.ma_thue = d.ma_thue
    join #ln i on a.stt = i.stt
  order by a.ngay_ct, a.so_ct, a.stt

update #d]]>&Detail;<![CDATA[ set he_so = b.he_so from #d]]>&Detail;<![CDATA[ a join vdmvtqddvt b on (a.ma_vt = b.ma_vt or b.ma_vt = '*') and a.dvt = b.dvt where a.nhieu_dvt = 1
update #d]]>&Detail;<![CDATA[ set tk_vt = c.tk_dl from #d]]>&Detail;<![CDATA[ a join dmkho b on a.ma_kho = b.ma_kho join dmvt c on a.ma_vt = c.ma_vt where b.dai_ly_yn = 1 and c.tk_dl <> ''

]]>&PromotionDetailUpdate;<![CDATA[
]]>&VoucherGoodsTypeImportDetailUpdate;<![CDATA[

select top 0 stt_rec, status, ma_dvcs, ngay_ct, so_ct, so_seri, tk, tk_thue_co, ma_thue, ma_kh, ma_kh2, ma_tt,
  dien_giai, ma_nvbh, ma_nt, ty_gia, t_so_luong, t_thue_nt, t_thue, t_tien_nt2, t_tien2]]>&ListFieldMaster.ext;&PromotionFieldMaster;&VoucherGoodsTypeImportFieldMaster;<![CDATA[ into #m]]>&Detail;<![CDATA[ from m]]>&Detail;<![CDATA[$000000

insert into #m]]>&Detail;<![CDATA[ select b.stt_rec, @status, c.ma_dvcs, a.ngay_ct, a.so_ct, a.so_seri, a.tk, a.tk_thue_co, a.ma_thue, a.ma_kh, a.ma_kh2, a.ma_tt,
    a.dien_giai, a.ma_nvbh, a.ma_nt, a.ty_gia, d.t_so_luong]]>&DetailTaxMasterTaxValue;&ListFieldMasterValues.ext;&PromotionFieldMasterInsert;&VoucherGoodsTypeImportFieldMasterInsert;<![CDATA[
  from @@table a
    join #id b on a.stt = b.stt
    join #unit c on a.ngay_ct = c.ngay_ct and a.so_ct = c.so_ct
    ]]>&PromotionMasterJoin;&VoucherGoodsTypeImportMasterJoin;<![CDATA[ join (select stt_rec, sum(so_luong) as t_so_luong, sum(thue_nt) as t_thue_nt, sum(thue) as t_thue
    ]]>&ListFieldSumValues.ext;<![CDATA[ from #d]]>&Detail;&PromotionMasterWhereNo;&VoucherGoodsTypeImportMasterWhere;<![CDATA[ group by stt_rec) d on b.stt_rec = d.stt_rec
    ]]>&InsertMasterJoin;<![CDATA[
    ]]>&DetailTaxUpdateMasterValue;<![CDATA[
    ]]>&PromotionMasterUpdate;<![CDATA[
    ]]>&VoucherGoodsTypeImportMasterUpdate;<![CDATA[

select top 0 stt_rec, ngay_ct, so_ct, ma_dvcs, status, user_id0, c$, m$, d$, e$, identity(int, 1, 1) as id into #i]]>&Detail;<![CDATA[ from i]]>&Detail;<![CDATA[$000000
insert into #i]]>&Detail;<![CDATA[ select stt_rec, ngay_ct, so_ct, ma_dvcs, @status, @user, convert(varchar(12), ngay_ct, 112) + so_ct + stt_rec, '#10$' + rtrim(ma_kh) + '#15$' + '2' + '#20$' + rtrim(ma_nt), '', '' from #m]]>&Detail;<![CDATA[
select @q = dbo.AI_ERP$Function$Update$Inquiry('#i]]>&Detail;<![CDATA[', '#d]]>&Detail;<![CDATA[', 'd$', 'ma_kho, ma_vt, tk_vt, tk_gv, tk_dt', '#10$, #20$, #30$, #40$, #50$', 'stt_rec', default, default, 'HDA', 'e$', 1)
exec sp_executesql @q

-- Insert
declare @p varchar(32), @insKey varchar(128), @insertKey varchar(128), @masterTable varchar(32), @detailTable varchar(32), @inquiryTable varchar(32)

select distinct month(ngay_ct) as m, year(ngay_ct) as y into #k from #id
select @r = min(y * 12 + m) from #k

while @r is not null begin
  select @m = m, @y = y from #k where y * 12 + m = @r
  select @p = rtrim(@y) + replace(str(@m, 2), ' ', '0'), @insKey = 'month(%a.ngay_ct) = ' + rtrim(@m) + ' and year(%a.ngay_ct) = ' + rtrim(@y)
  select @masterTable = @master + @p, @detailTable = @detail + @p, @inquiryTable = @inquiry + @p, @insertKey = replace(@insKey, '%a.', '')

  select @q = @@inserting(master, @masterTable, @insertKey);
  exec sp_executesql @q

  select @q = @@inserting(detail, @detailTable, @insertKey);
  exec sp_executesql @q

  ]]>&DetailTaxAfterInsertDetail;<![CDATA[

  select @q = @@inserting(inquiry, @inquiryTable, @insertKey);
  exec sp_executesql @q
]]>&EIImportInsert;&ImportOverwriteInsertingByPart;<![CDATA[
  select @r = min(y * 12 + m) from #k where y * 12 + m > @r
end

@@inserting(general);
]]>&ImportOverwriteInserting;<![CDATA[

insert into ctgt21 (stt_rec, ngay_ct, ngay_lct, ten_kh, dia_chi, ma_so_thue)
  select a.stt_rec, a.ngay_ct, a.ngay_ct, b.ten_kh, b.dia_chi, b.ma_so_thue from #m]]>&Detail;<![CDATA[ a join dmkh b on a.ma_kh = b.ma_kh

declare @External nvarchar(4000), @Statement nvarchar(4000), @Numeric varchar(4000), @String varchar(4000), @fieldSelect varchar(4000)

if @status <> '0' begin
  ]]>&VoucherGoodsTypeImportPost;<![CDATA[
  select stt_rec, ma_vt, identity(int, 1, 1) as id into #tmp from #d]]>&Detail;<![CDATA[ group by stt_rec, ma_vt order by stt_rec, sum(tien_nt2) desc
  select stt_rec, min(id) as id into #g from #tmp group by stt_rec
  delete #tmp from #tmp a where not exists (select 1 from #g b where a.stt_rec = b.stt_rec and a.id = b.id)
  select a.*, c.ten_vt into #detailpost from #d]]>&Detail;<![CDATA[ a join #tmp b on a.stt_rec = b.stt_rec join dmvt c on b.ma_vt = c.ma_vt where a.line_nbr = 1

  -- Payment
  select @External = 'status = ''' + @status + ''', ma_ct = ''' + @voucherID + ''', loai_ct = ''2'', ngay_ct0 = b.ngay_ct, dien_giai = c.dien_giai, t_tt_nt = c.t_tien_nt2 + c.t_thue_nt, t_tt = c.t_tien2 + c.t_thue, t_tien_nt2 = c.t_tien_nt2, t_tien2 = c.t_tien2, datetime0 = ''' + @datetime0 + ''', datetime2 = ''' + @datetime0 + ''', user_id0 = ' + rtrim(@user) + ', user_id2 = ' + rtrim(@user)  select @Statement = 'update #ar set ma_nvbh = b.ma_nvbh]]>&SVImportPostPayment;<![CDATA[ from #ar a join #m]]>&Detail;<![CDATA[ b on a.stt_rec = b.stt_rec', @Numeric = 'tt, tt_nt, sl_td1, sl_td2, sl_td3, s4, s5, s6', @String = 'ma_td1, ma_td2, ma_td3, gc_td1, gc_td2, gc_td3, s1, s2, s3'
  exec AI_ERP$Voucher$Import$PostPayment '#m]]>&Detail;<![CDATA[', '#detailpost', 'tk', @Numeric, @String, @External, @Statement, '0', '1', '0'

  -- Tax
  select @External = ']]>&DetailTaxPostTaxExternal;<![CDATA[, ma_nvbh = c.ma_nvbh, line_nbr = 1, status = ''' + @status + ''',ma_ct = ''' + @voucherID + ''', loai_ct = ''2'', ngay_lct = b.ngay_ct, datetime0 = ''' + @datetime0 + ''', datetime2 = ''' + @datetime0 + ''', user_id0 = ' + rtrim(@user) + ', user_id2 = ' + rtrim(@user)
  select @Statement = '', @Numeric = 'nam, ky, sl_td1, sl_td2, sl_td3, s4, s5, s6', @String = 'ghi_chu, so_dh, ma_nk, ma_mau_ct, ma_td1, ma_td2, ma_td3, gc_td1, gc_td2, gc_td3, s1, s2, s3'
  ]]>&DetailTaxPostTax;<![CDATA[
  ]]>&VoucherGoodsTypeImportPostTax;<![CDATA[
  exec AI_ERP$Voucher$Import$PostTax '#m]]>&Detail;<![CDATA[', ]]>&DetailTaxPostTaxTable;<![CDATA[, '#k', @Numeric, @String, @External, @Statement, '1'

  -- Inventory
  select @Statement = 'update #in set ngay_lct = ngay_ct, loai_ct = ''2'', ma_gd = ''2''' + ', datetime0 = ''' + @datetime0 + ''', datetime2 = ''' + @datetime0 + ''', user_id0 = ' + rtrim(@user) + ', user_id2 = ' + rtrim(@user)
  select @Statement = @Statement + char(13) +  'update #in set ma_nx = b.ma_nx from #in a join dmnx b on a.ma_nx = b.tk where b.ma_nx is not null'
  exec AI_ERP$Voucher$Import$PostInventory '#m]]>&Detail;<![CDATA[', '#d]]>&Detail;<![CDATA[', @voucherID, '#k',
    'pn_gia_tb, ct_dc, gia_nt01, gia01, gia_nt0, gia0, tien_nt0, tien0, cp_thue_yn]]>&SVTranFieldZeroStock.ext;<![CDATA[, nam, ky, cp_vc, cp_bh, cp_khac, cp, sl_td1, sl_td2, sl_td3, s4, s5, s6 ]]>&DetailTaxPostInventoryUpdateZero;&EnvironmentTaxImportPostInventoryUpdateZero;<![CDATA[',
    'so_seri, ma_khon, ma_vi_trin, so_dh2, so_dh3, ma_nv, stt_rec_px, stt_rec0px, stt_rec_dc, so_seri0, ma_nk, ong_ba]]>&SVTranFieldBlankStock.ext;<![CDATA[, ma_td1, ma_td2, ma_td3, gc_td1, gc_td2, gc_td3, s1, s2, s3, so_lo, stt_rec_pn, stt_rec0pn',
    'tk_du = c.tk, ma_nx = c.tk, ]]>&PromotionPostInventoryExternal;<![CDATA[, tien_nhap = 0, tien_nt_n = 0, tk_thue_no = c.tk]]>&SVTranUpdateStock.ext;&DetailTaxPostInventoryUpdateField;<![CDATA[',
    @Statement, 1, 2
end

if @status = '1' begin
  select @fieldSelect = 'stt_rec, ma_dvcs, ''' + @voucherID + ''', ngay_ct, so_ct, t_tien_nt2 + t_thue_nt, t_tien2 + t_thue, ma_nt, ty_gia, dien_giai, ''' + @datetime0 + ''', ' + rtrim(@user)
  exec AI_ERP$Voucher$Import$PostLater '#m]]>&Detail;<![CDATA[', @voucherID, @fieldSelect, ''
end

if @status = '2' begin
  declare @glGroup varchar(128), @glAcctField varchar(128), @glAcctFieldRef varchar(128), @glAmountField varchar(128), @glFCAmountField varchar(128), @glKey varchar(512), @glNoAccList varchar(128), @glNoAccListRef varchar(128)
  declare @postFields varchar(33)
  select @postFields = isnull((select rtrim(field) from syspostfields where id = '01'), '')

  if exists(select 1 from options where name = 'm_post_hh_hddt' and val = '1') begin
    select @glAcctField = 'tk_gv,tk,tk_dt]]>&FieldGLAcctField.ext;&DetailTaxPostGLAcctField;&PromotionPostGLAcctField;<![CDATA[', @glAcctFieldRef = 'tk_vt,tk_dt,tk]]>&FieldGLAcctFieldRef.ext;&DetailTaxPostGLAcctFieldRef;&PromotionPostGLAcctFieldRef;<![CDATA[', @glAmountField = 'tien,tien2,tien2]]>&FieldGLAmountField.ext;<![CDATA[,thue]]>&PromotionFieldGLAmountField;<![CDATA[', @glFCAmountField = 'tien_nt,tien_nt2,tien_nt2]]>&FieldGLFCAmountField.ext;<![CDATA[,thue_nt]]>&PromotionFieldGLFCAmountField;<![CDATA[', @glKey = '1=1]]>&PromotionFieldGLKeySalesAccount;<![CDATA[ and loai<>''90'']]>&PromotionFieldGLKeySalesAccount;<![CDATA[ and loai=''90'']]>&FieldGLKey.ext;<![CDATA[,thue_nt + thue <> 0]]>&PromotionFieldGLKeyAnd;&PromotionFieldGLKey;<![CDATA[', @glNoAccList = '0,1,1]]>&FieldGLNoAccList.ext;<![CDATA[,1]]>&PromotionFieldGLNoAccList;<![CDATA[', @glNoAccListRef = '0,0,0]]>&FieldGLNoAccListRef.ext;<![CDATA[,0]]>&PromotionFieldGLNoAccList;<![CDATA['
    exec sp_executesql N'update #d]]>&Detail;<![CDATA[ set tien_nt2 = -tien_nt2, tien2 = -tien2 where loai = ''90'''
  end else begin
    select @glAcctField = 'tk_gv,tk]]>&FieldGLAcctField.ext;&DetailTaxPostGLAcctField;&PromotionPostGLAcctField;<![CDATA[', @glAcctFieldRef = 'tk_vt,tk_dt]]>&FieldGLAcctFieldRef.ext;&DetailTaxPostGLAcctFieldRef;&PromotionPostGLAcctFieldRef;<![CDATA[', @glAmountField = 'tien,tien2]]>&FieldGLAmountField.ext;<![CDATA[,thue]]>&PromotionFieldGLAmountField;<![CDATA[', @glFCAmountField = 'tien_nt,tien_nt2]]>&FieldGLFCAmountField.ext;<![CDATA[,thue_nt]]>&PromotionFieldGLFCAmountField;<![CDATA[', @glKey = '1=1]]>&PromotionFieldGLKeySalesAccount;&FieldGLKey.ext;<![CDATA[,thue_nt + thue <> 0]]>&PromotionFieldGLKeyAnd;&PromotionFieldGLKey;<![CDATA[', @glNoAccList = '0,1]]>&FieldGLNoAccList.ext;<![CDATA[,1]]>&PromotionFieldGLNoAccList;<![CDATA[', @glNoAccListRef = '0,0]]>&FieldGLNoAccListRef.ext;<![CDATA[,0]]>&PromotionFieldGLNoAccList;<![CDATA['
  end

  select @Numeric = 'nam, ky, sl_td1, sl_td2, sl_td3, s4, s5, s6', @String = 'so_ctgs, ma_nk, so_lo, ong_ba, so_dh, gc_td1, gc_td2, gc_td3' + replace(',s1,s2,s3', ',' + rtrim(ltrim(@postFields)), ''), @External = case when @postFields <> '' then @postFields + ' = ma_nvbh,' else '' end + 'ct_nxt = 1, ma_gd = ''2'', dien_giai_h = b.dien_giai, datetime0 = ''' + @datetime0 + ''', datetime2 = ''' + @datetime0 + ''', user_id0 = ' + rtrim(@user) + ', user_id2 = ' + rtrim(@user), @Statement = ''
  select @glGroup = groupby from @@sysDatabaseName..voucherinfo where ma_ct = @voucherID

  ]]>&DetailTaxPostGL;<![CDATA[
  select a.*, b.tk, b.tk as tk_thue_no, b.tk_thue_co]]>&FieldGLField.ext;<![CDATA[, b.ma_dvcs, b.ma_kh, b.ma_kh as ma_kh_ref, @voucherID as ma_ct, '2' as loai_ct, b.ngay_ct as ngay_lct, b.ma_nt, b.ty_gia]]>&SVTranGLCOGS.ext;<![CDATA[, b.dien_giai as dien_giai, b.dien_giai as dien_giai_h into #dGL from #d]]>&Detail;<![CDATA[ a join #m]]>&Detail;<![CDATA[ b on a.stt_rec = b.stt_rec
  ]]>&PostGLUpdate.ext;<![CDATA[

  exec AI_ERP$Voucher$Import$PostGL '#m]]>&Detail;<![CDATA[', '#dGL', @voucherID, @glAcctField, @glAcctFieldRef, @glAmountField, @glFCAmountField, @glKey, @glNoAccList, @glNoAccListRef, @glGroup, @Numeric, @String, @External, @Statement, '#k'
end
]]>
    </text>
  </processing>

</import>