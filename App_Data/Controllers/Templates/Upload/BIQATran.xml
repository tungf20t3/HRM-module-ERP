<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE import [
  <!ENTITY Error "
if @r is not null begin
  select '' as message, @field as field, @r as record
  return
end
">
  <!ENTITY ErrorDate "
if @r is not null begin
  select replace(@overlapped, '&#37;s', @@delta + @r) as message
  return
end
">
  <!ENTITY And "&#13;">
  <!ENTITY Checking "@@checking">

  <!ENTITY % ImportErrorMode SYSTEM "..\..\Include\ImportErrorMode.ent">
  %ImportErrorMode;

  <!ENTITY % ExportImportTemplate SYSTEM "..\..\Include\ExportImportTemplate.ent">
  %ExportImportTemplate;

  <!ENTITY Code "P02">
  <!ENTITY % ImportOverwrite SYSTEM "..\..\Include\ImportOverwriteVoucher.ent">
  %ImportOverwrite;

  <!ENTITY % Conditional.BIMode "INCLUDE">
  <!ENTITY % BIMode SYSTEM "..\..\Include\BIMode.ent">
  %BIMode;

  <!ENTITY k0 "a.ma_dvcs = b.ma_dvcs and a.ma_bp0 = b.ma_bp0 and a.ma_vung = b.ma_vung and a.ma_vt = b.ma_vt and a.ngay_hl_tu = b.ngay_hl_tu and a.ngay_hl_den = b.ngay_hl_den">
  <!ENTITY k1 "(
a.ma_dvcs = b.ma_dvcs and a.ma_bp0 = b.ma_bp0 and a.ma_vung = b.ma_vung and a.ma_vt = b.ma_vt and (
  (a.ngay_hl_tu between b.ngay_hl_tu and b.ngay_hl_den) or (b.ngay_hl_tu between a.ngay_hl_tu and a.ngay_hl_den))
))">

  <!ENTITY k2 "select ma_vt from dmvt
  where not (
    exists(
      select 1 from bidmvttsvung b where dmvt.ma_vt = b.ma_vt and b.name = 'cd_yn' and b.val = '1' and exists(
        select 1 from @@table z where z.ma_vung = b.ma_vung
      )
    ) or exists(select 1 from bidmvtts b where dmvt.ma_vt = b.ma_vt and b.name = 'cd_yn' and b.val = '1')
  )
">
  <!ENTITY k3 "left join vdmvtqddvt b on a.dvt = b.dvt and (a.ma_vt = b.ma_vt or b.ma_vt = '*') left join dmvt c on a.ma_vt = c.ma_vt and a.dvt = c.dvt where b.dvt is null and c.dvt is null">
  <!ENTITY k4 "((#k.ngay_hl_tu between b.ngay_hl_tu and b.ngay_hl_den) or (b.ngay_hl_tu between #k.ngay_hl_tu and #k.ngay_hl_den))">
  <!ENTITY k5 " a join (select stt_rec, sum(so_luong) as t_so_luong from #d02 group by stt_rec) b on a.stt_rec = b.stt_rec">
]>

<import xmlns="urn:schemas-ai-erp:data-import">
  <setting>
    <type value="Other"/>
    <startRow value="6"/>
    <maxFileSize value="10"/>
    <uploadTimeOut value="120"/>
    <importRecordTimeout value="1740"/>
    <allowFileExtension value="^(.XLSX)$"/>
    <onProcessFail value="parent.on$BIQATranImportForm$Fail(this.frameElement)"/>
    <onProcessComplete value="parent.on$BIQATranImportForm$Complete(this.frameElement)"/>
    <uploadContentType value="application/ms-excel;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" />
    <baseTable value="bim02$000000, bid02$000000, bii02$000000"/>
    <dependence value="bim02$000000, bid02$000000, bii02$000000"/>
    <listTable value="#m02, #d02, #i02"/>
    <alias value="master, detail, inquiry"/>

    &UploadModeProcess;
  </setting>

  <variable>
    <var id="C001">
      <header v="Đến ngày phải lớn hơn hoặc bằng hiệu lực từ." e="Effective to must be larger than or equal to effective from."/>
    </var>
    <var id="C002">
      <header v="Tồn tại khai báo đã có phát sinh liên quan, không thể ghi đè." e="There existed a declaration has data constraints, the data cannot be overwritten."/>
    </var>
    <var id="C003">
      <header v="Phạm vi khai báo ngày hiệu lực không được giao hoặc trùng nhau." e="Effective date range must not be overlapped or duplicated."/>
    </var>
    <var id="C004">
      <header v="Nhà cung cấp không được trùng nhau." e="Vendor must not be duplicated."/>
    </var>
  </variable>

  <query>
    <command>
      <text>
        &ExportImportTemplateQuery;
      </text>
    </command>
  </query>

  <fields identity="true" name="stt">
    <field name="ma_dvcs" column="." allowNulls="false" upperCase="true" resource="master, inquiry" check="ma_dvcs not in (select ma_dvcs from dmdvcs)&And;not exists(select 1 from sysunitrights b where @@table.ma_dvcs = b.ma_dvcs and b.user_id = @user and b.r_new = 1)" condition="&And;if @admin &lt;&gt; 1 begin" tag="&And;end" errorCode="00001&And;00002"/>
    <field name="ma_bp0" column="." allowNulls="false" upperCase="true" resource="master, inquiry" check="ma_bp0 not in (select ma_bp from bidmbp0)&And;not exists(select 1 from bisyspurorgrights b where @@table.ma_bp0 = b.ma_bp0 and b.user_id = @user and b.r_new = 1)" condition="&And;if @admin &lt;&gt; 1 begin" tag="&And;end" errorCode="00001&And;00002"/>
    <field name="ma_vung" column="." allowNulls="false" upperCase="true" resource="master, inquiry" check="ma_vung not in (select ma_vung from bidmvung where ma_dvcs = @@table.ma_dvcs and (@admin = 1 or not exists(select 1 from bisysplantrights where user_id = @user) or ma_vung in (select ma_vung from bisysplantrights where user_id = @user)) and (not exists(select 1 from bidmbp0g1 where ma_vung = bidmvung.ma_vung) or ma_vung in (select ma_vung from bidmbp0g1 where ma_bp0 = @@table.ma_bp0)))" errorCode="00001"/>
    <field name="ma_vt" column="." allowNulls="false" upperCase="true" resource="master, inquiry" check="ma_vt not in (select ma_vt from dmvt)" errorCode="00001"/>
    <field name="dvt" column="." resource="master"/>
    <field name="kieu_pb" column="." defaultValue="1" resource="master" check="kieu_pb not in ('1', '2')" errorCode="00002"/>
    <field name="ngay_hl_tu" column="." allowNulls="false" type="DateTime" resource="master"/>
    <field name="ngay_hl_den" column="." allowNulls="false" type="DateTime" resource="master" check="ngay_hl_tu &gt; ngay_hl_den" errorCode="C001"/>
    <field name="dien_giai" column="." resource="master"/>

    <field name="ma_kh" column="." reference="1" allowNulls="false" upperCase="true" resource="detail" check="ma_kh &lt;&gt; '' and ma_kh not in (select ma_kh from &VendorList;)" errorCode="00001"/>
    <field name="so_luong" column="." reference="1" allowNulls="false" type="Decimal" resource="detail" check="so_luong = 0" errorCode="00002"/>
    <field name="stt0" column="." defaultValue="0" resource="detail" reference="1" relation="stt" type="Decimal" check="stt0 &gt; 99 or stt0 &lt; 0" errorCode="00002"/>
    <field name="ghi_chu" reference="1" column="." resource="detail"/>

    <field name="stt_rec" column="None" resource="master, detail, inquiry"/>
    <field name="stt_rec0" column="None" resource="detail"/>
    <field name="line_nbr" column="None" type="Int" resource="detail"/>
    <field name="ma_ct" column="None" resource="master, detail"/>
    <field name="ngay_ct" column="None" type="DateTime" resource="master, inquiry"/>
    <field name="he_so" column="None" type="Decimal" resource="master"/>
    <field name="ty_trong" column="None" type="Decimal" resource="detail"/>
    <field name="t_so_luong" column="None" type="Decimal" resource="master"/>

    <field name="c$" column="None" resource="inquiry"/>
    <field name="m$" column="None" resource="inquiry"/>
    <field name="d$" column="None" resource="inquiry"/>

    <field name="status" column="None" insertValue="@status" expression="' + @status + '" resource="master, inquiry"/>
    <field name="datetime0" column="None" type="DateTime" insertValue="@datetime0" expression="''' + @datetime0 + '''" resource="master"/>
    <field name="datetime2" column="None" type="DateTime" insertValue="@datetime0" expression="''' + @datetime0 + '''" resource="master"/>
    <field name="user_id0" column="None" type="Int" insertValue="@user" expression="' + rtrim(@user) + '" resource="master, inquiry"/>
    <field name="user_id2" column="None" type="Int" insertValue="@user" expression="' + rtrim(@user) + '" resource="master"/>
  </fields>

  <template>
    <setting>
      <downloadFile>
        <text v="Khai báo hạn ngạch mua hàng" e="Quota Arrangement"/>
      </downloadFile>
    </setting>

    <fields row="5">
      <field name="ma_dvcs" width="16" starColor="&EIT.StarColor.Require;">
        <text v="Đơn vị" e="Unit"></text>
      </field>
      <field name="ma_bp0" width="16" starColor="&EIT.StarColor.Require;">
        <text v="Đơn vị mua" e="Purchasing Org."></text>
      </field>
      <field name="ma_vung" width ="16" starColor="&EIT.StarColor.Require;">
        <text v="Mã vùng" e="Plant"></text>
      </field>
      <field name="ma_vt" width ="16" starColor="&EIT.StarColor.Require;">
        <text v="Mã hàng" e="Item"></text>
      </field>
      <field name="dvt" width ="12">
        <text v="Đvt" e="UOM"/>
      </field>
      <field name="kieu_pb" width ="16">
        <text v="Kiểu phân bổ" e="Allocation Type"/>
      </field>
      <field name="ngay_hl_tu" width="16" starColor="&EIT.StarColor.Require;">
        <text v="Hiệu lực từ" e="Effective from"></text>
      </field>
      <field name="ngay_hl_den" width="16" starColor="&EIT.StarColor.Require;">
        <text v="Đến ngày" e="Effective to"></text>
      </field>
      <field name="dien_giai" width="50">
        <text v="Diễn giải" e="Memo"/>
      </field>

      <field name="ma_kh" width ="16" starColor="&EIT.StarColor.Require;">
        <text  v="Mã nhà cung cấp" e="Vendor"/>
      </field>
      <field name="so_luong" width="16" starColor="&EIT.StarColor.Require;">
        <text v="Hạn ngạch" e="Quota"></text>
      </field>
      <field name="stt0" width ="16">
        <text v="Stt ưu tiên" e="Priority"/>
      </field>
      <field name="ghi_chu" width="50">
        <text v="Ghi chú" e="Note"/>
      </field>
      &EIT.NoteField;
    </fields>
  </template>

  <processing>
    <text>
      <![CDATA[
declare @q nvarchar(4000), @field varchar(32), @wsID varchar(1), @datetime0 datetime, @overwriteConflict nvarchar(512), @overlapped nvarchar(512), @notAuthorized nvarchar(512)
declare @user int, @admin bit, @r int, @k int, @voucherID varchar(8), @d0 varchar(8)
select @wsID = rtrim(val) from options where rtrim(name) = 'm_ws_id'
select @admin = @@admin, @user = @@userID, @voucherID = 'P02', @datetime0 = getdate(), @d0 = convert(varchar(8), getdate(), 112)

select @overwriteConflict = case when @@language = 'v' then N'Tồn tại khai báo đã có phát sinh liên quan tại dòng <span class="Highlight">%s</span>, không thể ghi đè.' else N'There existed a declaration has data constraints at row <span class="Highlight">%s</span>, the data cannot be overwritten.' end
select @overlapped = case when @@language = 'v' then N'Ngày hiệu lực giao hoặc trùng nhau tại dòng <span class="Highlight">%s</span>.' else N'The effective date range overlapped or duplicated at row <span class="Highlight">%s</span>.' end
select @notAuthorized = case when @@language = 'v' then N'Chưa có <span class="Highlight">quyền thực hiện chức năng này</span> hoặc <span class="Highlight">truy cập bị từ chối</span>. Liên hệ với người quản trị hệ thống nếu bạn có thể được truy cập vào chức năng này.'
else N'You are <span class="Highlight">not authorized</span> or you <span class="Highlight">do not have permission</span> to execute this action. Contact the System administrator if you believe you should be able to execute this action.' end

-- Update
update @@table set dvt = b.dvt from @@table a join dmvt b on a.ma_vt = b.ma_vt where a.dvt = ''

-- Check
]]>&Checking;<![CDATA[

if @$mode = 1 begin
  ]]>&StartErrorCount;<![CDATA[
  ]]>&InsertErrorTable;<![CDATA[ select 'ma_vt', stt, '00001' from @@table a join (]]>&k2;<![CDATA[) b on a.ma_vt = b.ma_vt
  ]]>&w1;<![CDATA['ma_vt']]>&w2;<![CDATA[stt]]>&w3;<![CDATA['00001']]>&w4;<![CDATA[
  ]]>&EndErrorCount;<![CDATA[
end else begin
  select @field = 'ma_vt', @r = min(stt) from @@table a join (]]>&k2;<![CDATA[) b on a.ma_vt = b.ma_vt]]>&Error;<![CDATA[
end

if @$mode = 1 begin
  ]]>&StartErrorCount;<![CDATA[
  ]]>&InsertErrorTable;<![CDATA[ select 'dvt', stt, '00001' from @@table a ]]>&k3;<![CDATA[
  ]]>&w1;<![CDATA['dvt']]>&w2;<![CDATA[stt]]>&w3;<![CDATA['00001']]>&w4;<![CDATA[
  ]]>&EndErrorCount;<![CDATA[
end else begin
  select @field = 'dvt', @r = min(stt) from @@table a ]]>&k3;&Error;<![CDATA[
end

if @$mode = 1 begin
  ]]>&StartErrorCount;<![CDATA[
  ]]>&InsertErrorTable;<![CDATA[ select 'ma_kh', a.stt, 'C004' from @@table a join (select * from @@table) b on a.stt <> b.stt and ]]>&k0;<![CDATA[ and a.ma_kh = b.ma_kh
  ]]>&w1;<![CDATA['ma_kh']]>&w2;<![CDATA[a.stt]]>&w3;<![CDATA['C004']]>&w4;<![CDATA[
  ]]>&EndErrorCount;<![CDATA[
end else begin
  select @field = 'ma_kh', @r = min(a.stt) from @@table a join (select * from @@table) b on a.stt <> b.stt and ]]>&k0;<![CDATA[ and a.ma_kh = b.ma_kh]]>&Error;<![CDATA[
end

-- Date
if @$mode = 1 begin
  ]]>&StartErrorCount;<![CDATA[
  ]]>&InsertErrorTable;<![CDATA[ select 'ngay_hl_tu', a.stt, 'C003' from @@table a where exists(select 1 from @@table b where not (]]>&k0;<![CDATA[) and ]]>&k1;<![CDATA[
  ]]>&w1;<![CDATA['ngay_hl_tu']]>&w2;<![CDATA[a.stt]]>&w3;<![CDATA['C003']]>&w4;<![CDATA[ group by a.stt
  ]]>&EndErrorCount;<![CDATA[

  ]]>&StartErrorCount;<![CDATA[
  ]]>&InsertErrorTable;<![CDATA[ select 'ngay_hl_tu', a.stt, 'C003' from @@table a where exists(select 1 from bim02$000000 b where not (]]>&k0;<![CDATA[) and ]]>&k1;<![CDATA[
  ]]>&w1;<![CDATA['ngay_hl_tu']]>&w2;<![CDATA[a.stt]]>&w3;<![CDATA['C003']]>&w4;<![CDATA[
  ]]>&EndErrorCount;<![CDATA[
end else begin
  select @r = min(a.stt) from @@table a where exists(select 1 from @@table b where not (]]>&k0;<![CDATA[) and ]]>&k1;<![CDATA[]]>&ErrorDate;<![CDATA[
  select @r = min(a.stt) from @@table a where exists(select 1 from bim02$000000 b where not (]]>&k0;<![CDATA[) and ]]>&k1;<![CDATA[]]>&ErrorDate;<![CDATA[
end

if @admin <> 1 and @type = '1' begin
  if @@sysDatabaseName.dbo.AI_ERP$System$GetAuthorize(@admin, @user, 'BIQATran', 'Edit') = 0 select @type = '0'
end

if @type = '0' delete @@table from @@table a join bim02$000000 b on a.ma_dvcs = b.ma_dvcs and a.ma_bp0 = b.ma_bp0 and a.ma_vung = b.ma_vung and a.ma_vt = b.ma_vt and ((a.ngay_hl_tu between b.ngay_hl_tu and b.ngay_hl_den) or (b.ngay_hl_tu between a.ngay_hl_tu and a.ngay_hl_den))

-- stt_rec0, line_nbr
select identity(int, 1, 1) as id, cast(stt as int) as stt, rtrim(ma_dvcs) + rtrim(ma_bp0) + rtrim(ma_vung) + rtrim(ma_vt) as c, cast(0 as int) as ln into #ln from @@table order by ma_dvcs, ma_bp0, ma_vung, ma_vt, stt
exec AI_ERP$App$UpdateLineNumber
create index i on #ln(stt)

select a.*, b.stt_rec into #k from @@table a join bim02$000000 b on ]]>&k0;<![CDATA[
delete @@table from @@table a where exists(select 1 from #k b where ]]>&k0;<![CDATA[)

if @@admin = 0 and @type = '1' begin
  if @$mode = 1 begin
    ]]>&StartErrorCount;<![CDATA[
    ]]>&InsertErrorTable;<![CDATA[ select 'ma_dvcs', stt, 'notAuthorized' from #k where not exists(select 1 from sysunitrights b where #k.ma_dvcs = b.ma_dvcs and b.user_id = @user and b.r_edit = 1)
    ]]>&w1;<![CDATA['ma_dvcs']]>&w2;<![CDATA[stt]]>&w3;<![CDATA['00002']]>&w4;<![CDATA[
    ]]>&EndErrorCount;<![CDATA[

    ]]>&StartErrorCount;<![CDATA[
    ]]>&InsertErrorTable;<![CDATA[ select 'ma_bp0', stt, 'notAuthorized' from #k where not exists(select 1 from bisyspurorgrights b where #k.ma_bp0 = b.ma_bp0 and b.user_id = @user and b.r_edit = 1)
    ]]>&w1;<![CDATA['ma_bp0']]>&w2;<![CDATA[stt]]>&w3;<![CDATA['00002']]>&w4;<![CDATA[
    ]]>&EndErrorCount;<![CDATA[
  end else begin
    select @field = 'ma_dvcs', @r = min(stt) from #k where not exists(select 1 from sysunitrights b where #k.ma_dvcs = b.ma_dvcs and b.user_id = @user and b.r_edit = 1)
    if @r is not null begin
      select @notAuthorized as message
      return
    end
    select @field = 'ma_bp0', @r = min(stt) from #k where not exists(select 1 from bisyspurorgrights b where #k.ma_bp0 = b.ma_bp0 and b.user_id = @user and b.r_edit = 1)
    if @r is not null begin
      select @notAuthorized as message
      return
    end
  end
end

if @type = '1' begin
  if @$mode = 1 begin
    ]]>&StartErrorCount;<![CDATA[
    ]]>&InsertErrorTable;<![CDATA[ select 'ma_dvcs', stt, 'C002' from #k where exists(select 1 from (select a.ma_dvcs, a.ma_bp0, a.ma_vung, a.ma_vt, a.ngay_hl_tu, a.ngay_hl_den, b.ma_kh, b.sl_th from bim02$000000 a left join bid02$000000 b on a.stt_rec = b.stt_rec and b.sl_th <> 0) b
      where #k.ma_dvcs = b.ma_dvcs and #k.ma_bp0 = b.ma_bp0 and #k.ma_vung = b.ma_vung and #k.ma_vt = b.ma_vt and #k.ma_kh = b.ma_kh and ]]>&k4;<![CDATA[)
    ]]>&w1;<![CDATA['ma_dvcs']]>&w2;<![CDATA[stt]]>&w3;<![CDATA['C002']]>&w4;<![CDATA[
    ]]>&EndErrorCount;<![CDATA[
  end else begin
    select @r = min(stt) from #k where exists(select 1 from (select a.ma_dvcs, a.ma_bp0, a.ma_vung, a.ma_vt, a.ngay_hl_tu, a.ngay_hl_den, b.ma_kh, b.sl_th from bim02$000000 a left join bid02$000000 b on a.stt_rec = b.stt_rec and b.sl_th <> 0) b
      where #k.ma_dvcs = b.ma_dvcs and #k.ma_bp0 = b.ma_bp0 and #k.ma_vung = b.ma_vung and #k.ma_vt = b.ma_vt and #k.ma_kh = b.ma_kh and ]]>&k4;<![CDATA[)
      if @r is not null begin
        select replace(@overwriteConflict, '%s', @@delta + @r) as message
        return
      end
  end
end
if @type = '1' begin
  select b.stt_rec, b.ngay_ct, b.so_ct, b.ma_dvcs, b.status, b.user_id0, b.datetime0, convert(char(6), b.ngay_ct, 112) as p, min(a.stt) as stt into #owdata from #k a join bim02$000000 b with(nolock) on a.stt_rec = b.stt_rec group by b.stt_rec, b.ngay_ct, b.so_ct, b.ma_dvcs, b.status, b.user_id0, b.datetime0
  select distinct convert(char(6), ngay_ct, 112) as p into #owpartition from #owdata
  ]]>&ImportOverwriteVoucherLogDeleting;<![CDATA[
end
]]>&EndErrorMode;<![CDATA[

select top 0 a.stt_rec, a.ma_dvcs, a.ma_ct, a.ngay_ct, a.ma_bp0, a.ma_vung, a.ma_vt, a.dvt, b.nhieu_dvt, a.he_so, a.kieu_pb, a.ngay_hl_tu, a.ngay_hl_den, a.dien_giai, a.t_so_luong into #m02 from bim02$000000 a, dmvt b
select top 0 stt_rec, stt_rec0, line_nbr, ma_ct, stt as stt0, ma_kh, so_luong, ty_trong, ghi_chu into #d02 from bid02$000000
select top 0 stt_rec, ngay_ct, so_ct, ma_dvcs, c$, m$, d$, ma_bp0, ma_vung, ma_vt, identity(int, 1, 1) as id into #i02 from bii02$000000

if exists(select 1 from @@table) begin
  select top 0 stt_rec, ma_dvcs, ma_bp0, ma_vung, ma_vt, ngay_hl_tu, ngay_hl_den, cast(0 as int) as stt, identity(int, 1, 1) as id into #id1 from bim02$000000
  insert into #id1 select '', ma_dvcs, ma_bp0, ma_vung, ma_vt, ngay_hl_tu, ngay_hl_den, min(stt) from @@table group by ma_dvcs, ma_bp0, ma_vung, ma_vt, ngay_hl_tu, ngay_hl_den

  select @k = count(*) from #id1
  exec AI_ERP$App$UpdateIdentityNumber @wsID, @voucherID, @k, @@userID, '#id1'

  insert into #m02
    select b.stt_rec, a.ma_dvcs, @voucherID, @d0, a.ma_bp0, a.ma_vung, a.ma_vt, a.dvt, c.nhieu_dvt, 1, a.kieu_pb, a.ngay_hl_tu, a.ngay_hl_den, a.dien_giai, 0
      from @@table a join #id1 b on a.stt = b.stt left join dmvt c on a.ma_vt = c.ma_vt

  update #m02 set he_so = b.he_so from #m02 a join vdmvtqddvt b on (a.ma_vt = b.ma_vt or b.ma_vt = '*') and a.dvt = b.dvt where a.nhieu_dvt = 1

  insert into #d02
    select b.stt_rec, dbo.AI_ERP$Function$Voucher$GetRecordsGroup(i.ln), i.ln, @voucherID, a.stt0, a.ma_kh, a.so_luong, 0, a.ghi_chu
      from @@table a join #id1 b on ]]>&k0;<![CDATA[ join #ln i on a.stt = i.stt

  update #m02 set t_so_luong = b.t_so_luong from #m02]]>&k5;<![CDATA[
end

if exists(select 1 from #k) begin
  select stt_rec, min(stt) as stt into #id2 from #k group by stt_rec

  --
  update bim02$000000 set ngay_hl_tu = b.ngay_hl_tu, ngay_hl_den = b.ngay_hl_den
    from bim02$000000 a join #k b on a.stt_rec = b.stt_rec join #id2 c on b.stt = c.stt join bid02$000000 d on a.stt_rec = d.stt_rec
      where d.sl_th = 0

  update bim02$000000 set dvt = b.dvt, kieu_pb = b.kieu_pb, dien_giai = b.dien_giai, datetime2 = @datetime0, user_id2 = @user
    from bim02$000000 a join #k b on a.stt_rec = b.stt_rec join #id2 c on b.stt = c.stt

  delete bii02$000000 from bii02$000000 a join #id2 b on a.stt_rec = b.stt_rec
  delete bid02$000000 from bid02$000000 a join #id2 b on a.stt_rec = b.stt_rec

  insert into #m02
    select a.stt_rec, a.ma_dvcs, @voucherID, @d0, a.ma_bp0, a.ma_vung, a.ma_vt, a.dvt, c.nhieu_dvt, 1, a.kieu_pb, a.ngay_hl_tu, a.ngay_hl_den, a.dien_giai, 0
      from #k a join #id2 b on a.stt = b.stt left join dmvt c on a.ma_vt = c.ma_vt

  update #m02 set he_so = b.he_so from #m02 a join vdmvtqddvt b on (a.ma_vt = b.ma_vt or b.ma_vt = '*') and a.dvt = b.dvt where a.nhieu_dvt = 1

  insert into #d02
    select b.stt_rec, dbo.AI_ERP$Function$Voucher$GetRecordsGroup(i.ln), i.ln, @voucherID, a.stt0, a.ma_kh, a.so_luong, 0, a.ghi_chu
      from #k a join #id2 b on a.stt_rec = b.stt_rec join #ln i on a.stt = i.stt

  update bim02$000000 set t_so_luong = b.t_so_luong from bim02$000000]]>&k5;<![CDATA[
end

--
insert into #i02
  select stt_rec, @d0, '', ma_dvcs, rtrim(ma_dvcs) + rtrim(ma_bp0) + rtrim(ma_vung) + rtrim(ma_vt) + stt_rec,
    '#10$' + rtrim(ma_bp0) + '#20$' + rtrim(ma_vung) + '#30$' + rtrim(ma_vt) + '#40$' + rtrim(kieu_pb), '', ma_bp0, ma_vung, ma_vt from #m02
select @q = dbo.AI_ERP$Function$Update$Inquiry('#i02', '#d02', 'd$', 'ma_kh', '#10$', 'stt_rec', default, default, default, default, default)
exec sp_executesql @q

--
delete #m02 from #m02 a join #k b on a.stt_rec = b.stt_rec

--
declare @scale int
select @scale = 2
select stt_rec, sum(so_luong) as t_so_luong into #t1 from #d02 group by stt_rec
update #d02 set ty_trong = case when b.t_so_luong = 0 then 0 else round(a.so_luong * 100 / b.t_so_luong, @scale) end from #d02 a join #t1 b on a.stt_rec = b.stt_rec

select stt_rec, max(so_luong) as so_luong, sum(ty_trong) as t_ty_trong into #t2 from #d02 group by stt_rec
select stt_rec, min(line_nbr) as line_nbr into #t3 from (select a.stt_rec, a.line_nbr from #d02 a join #t2 b on a.stt_rec = b.stt_rec and a.so_luong = b.so_luong) a group by a.stt_rec

update #d02 set ty_trong = isnull(ty_trong + (100 - b.t_ty_trong), 0)
  from #d02 a join #t2 b on a.stt_rec = b.stt_rec join #t3 c on a.stt_rec = c.stt_rec and a.line_nbr = c.line_nbr
    where b.t_ty_trong <> 0

-- Insert/Update
@@inserting(master);
@@inserting(detail);
@@inserting(inquiry);
]]>
    </text>
  </processing>

</import>