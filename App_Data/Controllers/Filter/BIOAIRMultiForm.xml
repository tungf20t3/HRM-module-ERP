<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE dir [
  <!ENTITY Identity "BIOAIRMultiForm">
  <!ENTITY GridController "BIOAIRMultiGrid">

  <!ENTITY % FlowMultiVoucher SYSTEM "..\Include\FlowMultiVoucher.ent">
  %FlowMultiVoucher;

  <!ENTITY OtherCopyField "">
]>

<dir xmlns="urn:schemas-ai-erp:data-dir">
  <title v="Chọn giá" e="Select Price"></title>

  <fields>
    &FlowMultiFormField;
  </fields>

  <views>
    &FlowMultiFormView;
  </views>

  <commands>
    &FlowMultiFormCommand;
  </commands>

  <script>
    <text>
      <![CDATA[
function show$]]>&Identity;<![CDATA[$(f) {
  var z = f.grid, h = z.get_element().parentForm, c = String.fromCharCode(253), c1 = String.fromCharCode(252), d = z._detailInfo;
  var queryFilterString = z._filter$Fields.join(c).replaceAll("'", c1) + c + d.ParentController;
  show$FlowMulti$Form(f, queryFilterString, ']]>&Identity;<![CDATA[DataGridPanel', d.ParentController, ']]>&GridController;<![CDATA[', ']]>&OtherCopyField;<![CDATA[');
}

function active$]]>&Identity;<![CDATA[$(f) {
  f.add_onResponseComplete(on$]]>&Identity;<![CDATA[Form$ResponseComplete);
  active$FlowMulti$Form(f);
}

function close$]]>&Identity;<![CDATA[$(f) {
  close$FlowMulti$Form(f);
  try {f.remove_onResponseComplete(on$]]>&Identity;<![CDATA[Form$ResponseComplete);} catch (ex) {}
}

function on$]]>&Identity;<![CDATA[Form$ResponseComplete(sender, e) {
  var f = e.object, context = e.type.Context, result = e.type.Result;
  switch (context) {
    case 'Checking':
      var g = getGrid$FlowMulti$(f);
      f.grid._formScript = 'show$FlowMulti$RetrieveGrid(this)';
      if (g._$k.length > 0) on$]]>&Identity;<![CDATA[$TransferData(f, g);
      else f.grid._focusWhenTabChanged();
      break;
    default:
      break;
  }
}

function on$]]>&Identity;<![CDATA[$TransferData(f, g) {
  var z = f.grid, w = z.get_element().parentForm, d = z._detailInfo;;
  if (d.handle) {
    var res = {form: f, grid: g};
    d.handle.call(this, z, res);
  }
  f.cancelDialog();
}
]]>
    </text>
  </script>
</dir>