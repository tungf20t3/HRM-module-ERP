<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE dir [
  <!ENTITY Identity "AccountImportForm">
  <!ENTITY UploadButtonCss SYSTEM "..\Include\XML\ImageUploadForm.txt">

  <!ENTITY UploadCreateTicket SYSTEM "..\Include\XML\UploadCreateTicket.txt">
  <!ENTITY UploadField SYSTEM "..\Include\XML\UploadField.txt">
  <!ENTITY UploadCommand SYSTEM "..\Include\Command\UploadCommand.txt">
  <!ENTITY UploadScript SYSTEM "..\Include\Javascript\UploadScript.txt">

  <!ENTITY % ImportErrorMode SYSTEM "..\Include\ImportErrorMode.ent">
  %ImportErrorMode;
]>

<dir table="dmtk" code="tk" order="tk" xmlns="urn:schemas-ai-erp:data-dir">
  <title v="Lấy dữ liệu từ tệp" e="Import Data From File"></title>

  <fields>
    &UploadField;
    <field name="xoa_yn" type="Boolean">
      <header v="" e=""></header>
      <footer v="Xác nhận xóa danh mục tài khoản hiện tại" e="Confirm delete"></footer>
      <items style="CheckBox"/>
    </field>
    <field name="ticket" hidden="true" readOnly="true">
      <header v="" e=""></header>
    </field>

    &FilterFormModeField;

    <field name="debug_mode" dataFormatString="0, 1" clientDefault="0" align="right" inactivate="true">
      <header v="Chế độ kiểm tra lỗi" e="Debug Mode"></header>
      <footer v="1 - Sử dụng, 0 - Không" e="1 - Debug, 0 - No"></footer>
      <items style="Mask"/>
    </field>
  </fields>

  <views>
    <view id="Dir">
      <item value="120, 25, 75, 100, 100, 100, 30, 0"/>
      <item value="11000101: [upload].Label, [upload], [upload].Description, [ticket]"/>
      &FilterFormModeView;
      <item value="-110000: [xoa_yn], [xoa_yn].Description"/>
      <item value="1110000: [debug_mode].Label, [debug_mode], [debug_mode].Description"/>
    </view>
  </views>

  <commands>
    <command event="Showing">
      <text>
        <![CDATA[
select 'set$Form$DefaultValue(this);this._$admin=' + rtrim(@@admin) as message
return
]]>
      </text>
    </command>

    <command event="Loading">
      <text>
        <![CDATA[
select 'active$]]>&Identity;<![CDATA[(this);' as message
return
]]>
      </text>
    </command>

    <command event="Closing">
      <text>
        <![CDATA[
select 'close$]]>&Identity;<![CDATA[(this);close$]]>&Identity;<![CDATA[$DebugMode(this);' as message
return
]]>
      </text>
    </command>

    <command event="Checking">
      <text>
        <![CDATA[
var f = this, g = f.grid, k = f.getItem('ticket').value, importMemvars = [];
var fileName = get$]]>&Identity;<![CDATA[FileName($get('fileupload').value), allowExt = 'xlsx', d_yn = f.getItemValue('xoa_yn');
var err = (this._language == 'v' ? 'Định dạng tệp không đúng.' : 'Invalid file type.'), err1 = (this._language == 'v' ? 'Chưa xác nhận thông tin cần xóa.' : 'You have not confirmed yet.');
if (!d_yn) {
  f._checked = false;
  $message.show(err1);
}
if (f._checked) {
  if (fileName != '') {
    var ext = fileName.split('.').pop();
    if (allowExt.indexOf(ext.toLowerCase()) < 0) {
      f._checked = false;
      $message.show(err);
    }
    else {
      init$]]>&Identity;<![CDATA[IFrame(f);
      ]]>&FilterFormModeVar;<![CDATA[
      if (f.getItem('debug_mode')) {
        var _$debug = f.getItemValue('debug_mode');
        create$]]>&Identity;<![CDATA[Memvar(importMemvars, 'debug_mode', [_$debug])
      }
      var form = $get('uploadForm'), query = {Language: f._language, Controller: g._controller, Key: k, Memvars: importMemvars, Time:new Date().getTime().toString()};
      $get('query', form).value = Sys.Serialization.JavaScriptSerializer.serialize(query);
      form.action = $func.resolveClientUrl('~/AppHandler/Import.ashx', g._baseUrl);
      form.target = g._controller + '_IFrame';
      form.submit();
      f.request('GetTicket', 'GetTicket', []);
      f._checked = false;
      ]]>&FilterFormModeEndSubmit;<![CDATA[
    }
  }
}
]]>
      </text>
    </command>
  </commands>

  <script>
    <text>
      &UploadScript;
      &FilterFormModeScript;
      <![CDATA[
function init$]]>&Identity;<![CDATA[(f) {
  var g = f.grid;
  document.body._form = f;
  $get('fileupload').value = '';
  f.getItem('upload').field.AllowNulls = false;
  $get(f.get_id() + '_form_upload').style.color = 'grey';
  f.request('GetTicket', 'GetTicket', []);
  if (!f._$showDebugMode) add$FormDebugMode$KeyupHandler(f);
}
function on$]]>&Identity;<![CDATA[$ResponseComplete(f, e) {
  var f = e.object, g = f.grid, context = e.type.Context, result = e.type.Result;
  switch (context) {
    case 'GetTicket':
      f.setItemValue('ticket', result[0].Value);
      break;
    default:
      break;
  }
}
function close$]]>&Identity;<![CDATA[$DebugMode(f) {try {remove$FormDebugMode$KeyupHandler(f);} catch (ex) {}}
function set$Form$DefaultValue(a){!a._$showDebugMode&&setObjectFormHidden$DebugMode(a,true)}function setObjectFormHidden$DebugMode(a,b){$common.setVisible(a.getItem("debug_mode").parentNode.parentNode.parentNode,!b);if(!b){a._dlgModalPopupBehavior._fixupDropShadowBehavior();a._$showDebugMode=true;remove$FormDebugMode$KeyupHandler(this)}}function add$FormDebugMode$KeyupHandler(a){if(a._$admin){a._on$FormDebugMode$KeyupHandler=Function.createDelegate(a,on$FormDebugMode$KeyupHandler);$addHandler(document,"keyup",a._on$FormDebugMode$KeyupHandler)}}function remove$FormDebugMode$KeyupHandler(a){if(a._on$FormDebugMode$KeyupHandler){$removeHandler(document,"keyup",a._on$FormDebugMode$KeyupHandler);a._on$FormDebugMode$KeyupHandler=null}}function on$FormDebugMode$KeyupHandler(a){a.ctrlKey&&a.altKey&&a.keyCode==113&&setObjectFormHidden$DebugMode(this,false)}]]>
    </text>
  </script>

  <response>
    <action id="GetTicket">
      <text>
        &UploadCreateTicket;<![CDATA[
select @ticket as value
return
]]>
      </text>
    </action>
  </response>

  &UploadButtonCss;
</dir>